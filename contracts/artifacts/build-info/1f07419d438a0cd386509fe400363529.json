{
	"id": "1f07419d438a0cd386509fe400363529",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"../@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"../@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\"; //Imported in case burning NFTs is used\r\nimport \"../@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ninterface ITradeManagementRawMaterials{\r\n    function Supplier(address) external view returns(string memory);\r\n}\r\n\r\ncontract RawMaterials is ERC721URIStorage, Ownable{\r\n    // 记录NFT的总数\r\n    uint256 public tokenCount;\r\n    // 记录TradeManagement合约地址\r\n    ITradeManagementRawMaterials public TradeManagement;\r\n    \r\n    constructor () ERC721(\"RawMaterials\", \"RM\") Ownable(msg.sender){\r\n        \r\n    }\r\n\r\n    // 设置TradeManagement合约地址\r\n    function SetTradeManagementSC(address _trademgmtsc) external onlyOwner{\r\n        TradeManagement = ITradeManagementRawMaterials(_trademgmtsc);\r\n    }\r\n\r\n    // 供应商铸造原材料NFT并记录其URI\r\n    function mint(string memory _tokenURI) external returns(uint256){\r\n        // 验证调用者是否为供应商\r\n        require(bytes(TradeManagement.Supplier(msg.sender)).length != 0, \"Only authorized suppliers can mint packaged product NFT\");\r\n\r\n        // 计数+1\r\n        tokenCount++;\r\n        // 铸造NFT并记录其URI\r\n        _safeMint(msg.sender, tokenCount); \r\n        _setTokenURI(tokenCount, _tokenURI);\r\n        // 返回NFT的ID\r\n        return(tokenCount);\r\n    }\r\n}\r\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @title ERC-721 Burnable Token\n * @dev ERC-721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        _update(address(0), tokenId, _msgSender());\n    }\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return a == 0 ? 0 : (a - 1) / b + 1;\n        }\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x873b130968de02b7aa4bdccbe0870b4bb401e57282527a7298519acd0bcd7261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a781914c68b2216c2db0f2d1b07fb325d270bea72d3913b42db76e8eddbb1cac\",\"dweb:/ipfs/QmSKjBQd6kH1mxCw3maREnGkoTk6osXvmzTmEPqjgaaup4\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x237a1bd522cd03bc6e3177278c4d8a141bbd67bb45fe1761a80183ee9dd40c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffd0f0fdd26aceb0641f555ce24b370a0d35061b8cd5c5a1d4fe2c255135a04\",\"dweb:/ipfs/QmfJmgHA2Tog7T33xQkkASbXguUWC91Q1Us7nA7xnLDNBX\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xcac5b2622b9876529ca71f56b08a2786e960f0a738a9fcc456b2b8740170f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36ec9bacdaa2003a4b68d078f55887e7ec763e83d2027aaa1478578ae71c9b66\",\"dweb:/ipfs/QmbXfAcgockJRxMxKe5mt1pQyeafwCJuUpxce6a2ehB8bt\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x90b171995e6eeec03cb9d92d9d7a8b5597a9440f5b7863a145f382cb1999d009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e1b47ced529b6639fdb2b8fd69f2dc7a0f4e2b9732dd73bdf64838394633e9\",\"dweb:/ipfs/QmQ6MyRBK63Gsz6MCibJ8Ar5XZZ7keX6JkMbJ4m24Pcr4L\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC-721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xcac5b2622b9876529ca71f56b08a2786e960f0a738a9fcc456b2b8740170f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36ec9bacdaa2003a4b68d078f55887e7ec763e83d2027aaa1478578ae71c9b66\",\"dweb:/ipfs/QmbXfAcgockJRxMxKe5mt1pQyeafwCJuUpxce6a2ehB8bt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ERC721Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-721 Token that can be burned (destroyed).",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC-721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC-721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x237a1bd522cd03bc6e3177278c4d8a141bbd67bb45fe1761a80183ee9dd40c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffd0f0fdd26aceb0641f555ce24b370a0d35061b8cd5c5a1d4fe2c255135a04\",\"dweb:/ipfs/QmfJmgHA2Tog7T33xQkkASbXguUWC91Q1Us7nA7xnLDNBX\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xcac5b2622b9876529ca71f56b08a2786e960f0a738a9fcc456b2b8740170f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36ec9bacdaa2003a4b68d078f55887e7ec763e83d2027aaa1478578ae71c9b66\",\"dweb:/ipfs/QmbXfAcgockJRxMxKe5mt1pQyeafwCJuUpxce6a2ehB8bt\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xbca3beefdb4f53e9c4a50a9d489e44c33058c9533cd2b374c64c7d0cafbf15f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f42461a1819498b68bf80974c77ac17b562b398251b8367a905faaaf67d5278\",\"dweb:/ipfs/QmPZYUt6W9KSkjCgQ4iHgKwnAb3t9T699W5BGLwuh14JVp\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x90b171995e6eeec03cb9d92d9d7a8b5597a9440f5b7863a145f382cb1999d009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e1b47ced529b6639fdb2b8fd69f2dc7a0f4e2b9732dd73bdf64838394633e9\",\"dweb:/ipfs/QmQ6MyRBK63Gsz6MCibJ8Ar5XZZ7keX6JkMbJ4m24Pcr4L\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x873b130968de02b7aa4bdccbe0870b4bb401e57282527a7298519acd0bcd7261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a781914c68b2216c2db0f2d1b07fb325d270bea72d3913b42db76e8eddbb1cac\",\"dweb:/ipfs/QmSKjBQd6kH1mxCw3maREnGkoTk6osXvmzTmEPqjgaaup4\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x237a1bd522cd03bc6e3177278c4d8a141bbd67bb45fe1761a80183ee9dd40c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffd0f0fdd26aceb0641f555ce24b370a0d35061b8cd5c5a1d4fe2c255135a04\",\"dweb:/ipfs/QmfJmgHA2Tog7T33xQkkASbXguUWC91Q1Us7nA7xnLDNBX\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xcac5b2622b9876529ca71f56b08a2786e960f0a738a9fcc456b2b8740170f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36ec9bacdaa2003a4b68d078f55887e7ec763e83d2027aaa1478578ae71c9b66\",\"dweb:/ipfs/QmbXfAcgockJRxMxKe5mt1pQyeafwCJuUpxce6a2ehB8bt\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1480b57fd68ce6a8b5db236a8278dd79e2876f67d55905e617e5429cc35861b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e56fdda180bb78aaa6806ef095ba4b562d2c35626c98385cbe7e27301beaece\",\"dweb:/ipfs/QmZj9vZFcnotbgWt188vq4RGUbDhTYVx5CLVVQN9628Ygh\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x90b171995e6eeec03cb9d92d9d7a8b5597a9440f5b7863a145f382cb1999d009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e1b47ced529b6639fdb2b8fd69f2dc7a0f4e2b9732dd73bdf64838394633e9\",\"dweb:/ipfs/QmQ6MyRBK63Gsz6MCibJ8Ar5XZZ7keX6JkMbJ4m24Pcr4L\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1517,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220341ebc4c2d630ab20aba5ec183a4f7103b61b8897308b5581d5c2f5f9ebe1fba64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220341ebc4c2d630ab20aba5ec183a4f7103b61b8897308b5581d5c2f5f9ebe1fba64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0x1E 0xBC 0x4C 0x2D PUSH4 0xAB20ABA 0x5E 0xC1 DUP4 LOG4 0xF7 LT EXTCODESIZE PUSH2 0xB889 PUSH20 0x8B5581D5C2F5F9EBE1FBA64736F6C6343000816 STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220341ebc4c2d630ab20aba5ec183a4f7103b61b8897308b5581d5c2f5f9ebe1fba64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0x1E 0xBC 0x4C 0x2D PUSH4 0xAB20ABA 0x5E 0xC1 DUP4 LOG4 0xF7 LT EXTCODESIZE PUSH2 0xB889 PUSH20 0x8B5581D5C2F5F9EBE1FBA64736F6C6343000816 STOP CALLER ",
							"sourceMap": "251:2847:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220341ebc4c2d630ab20aba5ec183a4f7103b61b8897308b5581d5c2f5f9ebe1fba64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC721.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x90b171995e6eeec03cb9d92d9d7a8b5597a9440f5b7863a145f382cb1999d009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e1b47ced529b6639fdb2b8fd69f2dc7a0f4e2b9732dd73bdf64838394633e9\",\"dweb:/ipfs/QmQ6MyRBK63Gsz6MCibJ8Ar5XZZ7keX6JkMbJ4m24Pcr4L\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":203:15593  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":203:15593  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d0a4c97fa897bfce2707787f88feb72336c879d0e34a37aafa2071ca482ddf4764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d0a4c97fa897bfce2707787f88feb72336c879d0e34a37aafa2071ca482ddf4764736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 LOG4 0xC9 PUSH32 0xA897BFCE2707787F88FEB72336C879D0E34A37AAFA2071CA482DDF4764736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "203:15390:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d0a4c97fa897bfce2707787f88feb72336c879d0e34a37aafa2071ca482ddf4764736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 LOG4 0xC9 PUSH32 0xA897BFCE2707787F88FEB72336C879D0E34A37AAFA2071CA482DDF4764736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "203:15390:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 203,
									"end": 15593,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0a4c97fa897bfce2707787f88feb72336c879d0e34a37aafa2071ca482ddf4764736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15593,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15593,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15593,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15593,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15593,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15593,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15593,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15593,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 203,
											"end": 15593,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC721.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x90b171995e6eeec03cb9d92d9d7a8b5597a9440f5b7863a145f382cb1999d009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e1b47ced529b6639fdb2b8fd69f2dc7a0f4e2b9732dd73bdf64838394633e9\",\"dweb:/ipfs/QmQ6MyRBK63Gsz6MCibJ8Ar5XZZ7keX6JkMbJ4m24Pcr4L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b53f25c3572603a69e54cd3d9828b361b2c9532943e9428bc84e2921d685035464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b53f25c3572603a69e54cd3d9828b361b2c9532943e9428bc84e2921d685035464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 EXTCODEHASH 0x25 0xC3 JUMPI 0x26 SUB 0xA6 SWAP15 SLOAD 0xCD RETURNDATASIZE SWAP9 0x28 0xB3 PUSH2 0xB2C9 MSTORE8 0x29 NUMBER 0xE9 TIMESTAMP DUP12 0xC8 0x4E 0x29 0x21 0xD6 DUP6 SUB SLOAD PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b53f25c3572603a69e54cd3d9828b361b2c9532943e9428bc84e2921d685035464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 EXTCODEHASH 0x25 0xC3 JUMPI 0x26 SUB 0xA6 SWAP15 SLOAD 0xCD RETURNDATASIZE SWAP9 0x28 0xB3 PUSH2 0xB2C9 MSTORE8 0x29 NUMBER 0xE9 TIMESTAMP DUP12 0xC8 0x4E 0x29 0x21 0xD6 DUP6 SUB SLOAD PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b53f25c3572603a69e54cd3d9828b361b2c9532943e9428bc84e2921d685035464736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC721.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol": {
				"ITradeManagementRawMaterials": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Supplier",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"Supplier(address)": "4b297269"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Supplier\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":\"ITradeManagementRawMaterials\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x873b130968de02b7aa4bdccbe0870b4bb401e57282527a7298519acd0bcd7261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a781914c68b2216c2db0f2d1b07fb325d270bea72d3913b42db76e8eddbb1cac\",\"dweb:/ipfs/QmSKjBQd6kH1mxCw3maREnGkoTk6osXvmzTmEPqjgaaup4\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x237a1bd522cd03bc6e3177278c4d8a141bbd67bb45fe1761a80183ee9dd40c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffd0f0fdd26aceb0641f555ce24b370a0d35061b8cd5c5a1d4fe2c255135a04\",\"dweb:/ipfs/QmfJmgHA2Tog7T33xQkkASbXguUWC91Q1Us7nA7xnLDNBX\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xcac5b2622b9876529ca71f56b08a2786e960f0a738a9fcc456b2b8740170f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36ec9bacdaa2003a4b68d078f55887e7ec763e83d2027aaa1478578ae71c9b66\",\"dweb:/ipfs/QmbXfAcgockJRxMxKe5mt1pQyeafwCJuUpxce6a2ehB8bt\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xbca3beefdb4f53e9c4a50a9d489e44c33058c9533cd2b374c64c7d0cafbf15f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f42461a1819498b68bf80974c77ac17b562b398251b8367a905faaaf67d5278\",\"dweb:/ipfs/QmPZYUt6W9KSkjCgQ4iHgKwnAb3t9T699W5BGLwuh14JVp\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1480b57fd68ce6a8b5db236a8278dd79e2876f67d55905e617e5429cc35861b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e56fdda180bb78aaa6806ef095ba4b562d2c35626c98385cbe7e27301beaece\",\"dweb:/ipfs/QmZj9vZFcnotbgWt188vq4RGUbDhTYVx5CLVVQN9628Ygh\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x90b171995e6eeec03cb9d92d9d7a8b5597a9440f5b7863a145f382cb1999d009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e1b47ced529b6639fdb2b8fd69f2dc7a0f4e2b9732dd73bdf64838394633e9\",\"dweb:/ipfs/QmQ6MyRBK63Gsz6MCibJ8Ar5XZZ7keX6JkMbJ4m24Pcr4L\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":{\"keccak256\":\"0xa0ef7f1c66855e0fc57580cd84195b6059517192462c7879e6032caa78520efe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80eb7514ae8b4f145ef47dbb291f985f74375871a5f256c8c8ab41c6a26cc084\",\"dweb:/ipfs/QmUGCGcgXoxgcWqxvLkmxtJkw4TsBmXfxKPu7X1yKhypzR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"RawMaterials": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trademgmtsc",
									"type": "address"
								}
							],
							"name": "SetTradeManagementSC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TradeManagement",
							"outputs": [
								{
									"internalType": "contract ITradeManagementRawMaterials",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_tokenURI",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":439:1485  contract RawMaterials is ERC721URIStorage, Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":661:742  constructor () ERC721(\"RawMaterials\", \"RM\") Ownable(msg.sender){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":713:723  msg.sender */\n  caller\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1382:1495  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x5261774d6174657269616c730000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x524d000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  name_ */\n  dup2\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1448:1453  _name */\n  0x00\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1448:1461  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1481:1488  symbol_ */\n  dup1\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1471:1478  _symbol */\n  0x01\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1471:1488  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1382:1495  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":439:1485  contract RawMaterials is ERC721URIStorage, Ownable{... */\n  jump(tag_16)\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x07\n  0x00\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_18:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_19:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_20:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_21:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_46:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_48\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":714:798   */\ntag_47:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_22:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_23:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_24:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_25:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_53\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1429:1468   */\n  tag_54\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_24\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_26:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_27:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_28:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_58\n    /* \"#utility.yul\":1818:1852   */\n  tag_59\n    /* \"#utility.yul\":1827:1851   */\n  tag_60\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1818:1852   */\n  tag_27\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1800:1853   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_29:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_30:\n    /* \"#utility.yul\":2056:2095   */\n  tag_63\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2117:2208   */\n  tag_64\n    /* \"#utility.yul\":2166:2207   */\n  tag_65\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_31:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_32:\n    /* \"#utility.yul\":2377:2409   */\n  tag_68\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2418:2483   */\n  tag_69\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_33:\n    /* \"#utility.yul\":2555:2675   */\ntag_71:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_74\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_34:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_77\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2906:2935   */\n  tag_78\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_23\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_79:\n    /* \"#utility.yul\":3133:3213   */\n  tag_80\n    /* \"#utility.yul\":3189:3211   */\n  tag_81\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_33\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_76:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_35:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_36:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_84\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_35\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_37:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_86\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_88\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_18\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_90\n  tag_19\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4038:4094   */\ntag_89:\n    /* \"#utility.yul\":4118:4156   */\n  tag_91\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_21\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4203:4270   */\n  tag_92\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_95:\n    /* \"#utility.yul\":5144:5211   */\n  tag_96\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_37\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_93)\n    /* \"#utility.yul\":4365:4983   */\ntag_94:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_97\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_22\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_98:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_98)\ntag_100:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_102\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_36\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_101:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_93:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_38:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_39:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_105\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_38\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_40:\n    /* \"#utility.yul\":5555:5579   */\n  tag_107\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_39\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_109\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_40\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":439:1485  contract RawMaterials is ERC721URIStorage, Ownable{... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":439:1485  contract RawMaterials is ERC721URIStorage, Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xc87b56dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd85d3d27\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf0f9ee46\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9f181b5e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x23b872dd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0fffc4cf\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":938:1145  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2366:2455  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3498:3652  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3324:3437  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":792:941  function SetTradeManagementSC(address _trademgmtsc) external onlyOwner{... */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4144:4722  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4788:4920  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2186:2304  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1921:2129  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2519:2612  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":523:548  uint256 public tokenCount */\n    tag_15:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3863  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_16:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4986:5194  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_17:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1211:1804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1000:1482  function mint(string memory _tokenURI) external returns(uint256){... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3929:4082  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_20:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":597:648  ITradeManagementRawMaterials public TradeManagement */\n    tag_21:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":938:1145  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_29:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1040:1044  bool */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":761:771  0x49064906 */\n      0x49064906\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":754:772  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1063:1098  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1063:1074  interfaceId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1063:1098  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1063:1138  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_107\n      jumpi\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1102:1138  super.supportsInterface(interfaceId) */\n      tag_108\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1126:1137  interfaceId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1102:1125  super.supportsInterface */\n      tag_109\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1102:1138  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_108:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1063:1138  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_107:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1056:1138  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":938:1145  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2366:2455  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2411:2424  string memory */\n      0x60\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2443:2448  _name */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2436:2448  return _name */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_112\n      jump\t// in\n    tag_113:\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_115\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_114)\n    tag_115:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_116:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_116\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2366:2455  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3498:3652  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_39:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3565:3572  address */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3584:3606  _requireOwned(tokenId) */\n      tag_118\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3598:3605  tokenId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3584:3597  _requireOwned */\n      tag_119\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3584:3606  _requireOwned(tokenId) */\n      jump\t// in\n    tag_118:\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3624:3645  _getApproved(tokenId) */\n      tag_120\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3637:3644  tokenId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3624:3636  _getApproved */\n      tag_121\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3624:3645  _getApproved(tokenId) */\n      jump\t// in\n    tag_120:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3617:3645  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3498:3652  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3324:3437  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_45:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3430  _approve(to, tokenId, _msgSender()) */\n      tag_123\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3404:3406  to */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3408:3415  tokenId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3417:3429  _msgSender() */\n      tag_124\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3417:3427  _msgSender */\n      tag_125\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3417:3429  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3403  _approve */\n      tag_126\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3395:3430  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_123:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3324:3437  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":792:941  function SetTradeManagementSC(address _trademgmtsc) external onlyOwner{... */\n    tag_49:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":920:932  _trademgmtsc */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":873:888  TradeManagement */\n      0x09\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":873:933  TradeManagement = ITradeManagementRawMaterials(_trademgmtsc) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":792:941  function SetTradeManagementSC(address _trademgmtsc) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4144:4722  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_53:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4252:4253  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4238:4254  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4238:4240  to */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4238:4254  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4234:4321  if (to == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4307:4308  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4277:4310  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4234:4321  if (to == address(0)) {... */\n    tag_132:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4539:4560  address previousOwner */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4563:4597  _update(to, tokenId, _msgSender()) */\n      tag_134\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4571:4573  to */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4575:4582  tokenId */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4584:4596  _msgSender() */\n      tag_135\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4584:4594  _msgSender */\n      tag_125\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4584:4596  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4563:4570  _update */\n      tag_136\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4563:4597  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_134:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4539:4597  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4628:4632  from */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4611:4632  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4611:4624  previousOwner */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4611:4632  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4716  if (previousOwner != from) {... */\n      tag_137\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4676:4680  from */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4682:4689  tokenId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4691:4704  previousOwner */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4655:4705  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4607:4716  if (previousOwner != from) {... */\n    tag_137:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4224:4722  {... */\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4144:4722  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4788:4920  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_56:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4874:4913  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_141\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4891:4895  from */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4897:4899  to */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4901:4908  tokenId */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4874:4913  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4874:4890  safeTransferFrom */\n      tag_84\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4874:4913  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_141:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4788:4920  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2186:2304  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_59:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2249:2256  address */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2275:2297  _requireOwned(tokenId) */\n      tag_143\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2289:2296  tokenId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2275:2288  _requireOwned */\n      tag_119\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2275:2297  _requireOwned(tokenId) */\n      jump\t// in\n    tag_143:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2268:2297  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2186:2304  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1921:2129  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_63:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1984:1991  uint256 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2024:2025  0 */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2007:2026  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2007:2012  owner */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2007:2026  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2003:2090  if (owner == address(0)) {... */\n      tag_145\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2076:2077  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2049:2079  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2003:2090  if (owner == address(0)) {... */\n    tag_145:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2106:2115  _balances */\n      0x03\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2106:2122  _balances[owner] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2116:2121  owner */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2106:2122  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2099:2122  return _balances[owner] */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1921:2129  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_67:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_148\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_150\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_151\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_150:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_69:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2519:2612  function symbol() public view virtual returns (string memory) {... */\n    tag_72:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2566:2579  string memory */\n      0x60\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2598:2605  _symbol */\n      0x01\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2591:2605  return _symbol */\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_112\n      jump\t// in\n    tag_154:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_155\n      swap1\n      tag_112\n      jump\t// in\n    tag_155:\n      dup1\n      iszero\n      tag_156\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_157\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_156)\n    tag_157:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_158:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_158\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2519:2612  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":523:548  uint256 public tokenCount */\n    tag_75:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3863  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_80:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3804:3856  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_160\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3823:3835  _msgSender() */\n      tag_161\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3823:3833  _msgSender */\n      tag_125\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3823:3835  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3837:3845  operator */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3847:3855  approved */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3804:3822  _setApprovalForAll */\n      tag_162\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3804:3856  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_160:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3719:3863  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4986:5194  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_84:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5099:5130  transferFrom(from, to, tokenId) */\n      tag_164\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5112:5116  from */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5118:5120  to */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5122:5129  tokenId */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5099:5111  transferFrom */\n      tag_53\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5099:5130  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5140:5187  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_165\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5163:5167  from */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5169:5171  to */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5173:5180  tokenId */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5182:5186  data */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5140:5162  _checkOnERC721Received */\n      tag_166\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5140:5187  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_165:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4986:5194  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1211:1804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_87:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1284:1297  string memory */\n      0x60\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1309:1331  _requireOwned(tokenId) */\n      tag_168\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1323:1330  tokenId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1309:1322  _requireOwned */\n      tag_119\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1309:1331  _requireOwned(tokenId) */\n      jump\t// in\n    tag_168:\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1342:1365  string memory _tokenURI */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1378  _tokenURIs */\n      0x06\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1387  _tokenURIs[tokenId] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1379:1386  tokenId */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1387  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1342:1387  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_112\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_112\n      jump\t// in\n    tag_170:\n      dup1\n      iszero\n      tag_171\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_172\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_171)\n    tag_172:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_173:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_173\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1397:1415  string memory base */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1418:1428  _baseURI() */\n      tag_174\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1418:1426  _baseURI */\n      tag_175\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1418:1428  _baseURI() */\n      jump\t// in\n    tag_174:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1397:1428  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1523:1524  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1507:1511  base */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1501:1519  bytes(base).length */\n      mload\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1501:1524  bytes(base).length == 0 */\n      sub\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1497:1567  if (bytes(base).length == 0) {... */\n      tag_176\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1547:1556  _tokenURI */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1540:1556  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_167)\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1497:1567  if (bytes(base).length == 0) {... */\n    tag_176:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1692:1693  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1672:1681  _tokenURI */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1666:1689  bytes(_tokenURI).length */\n      mload\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1666:1693  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1662:1757  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1730:1734  base */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1736:1745  _tokenURI */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1716:1746  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_178\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1709:1746  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_167)\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1662:1757  if (bytes(_tokenURI).length > 0) {... */\n    tag_177:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1774:1797  super.tokenURI(tokenId) */\n      tag_180\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1789:1796  tokenId */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1774:1788  super.tokenURI */\n      tag_181\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1774:1797  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_180:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1767:1797  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1211:1804  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_167:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1000:1482  function mint(string memory _tokenURI) external returns(uint256){... */\n    tag_92:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1056:1063  uint256 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1183:1184  0 */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1135:1150  TradeManagement */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1135:1159  TradeManagement.Supplier */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4b297269\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1160:1170  msg.sender */\n      caller\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1135:1171  TradeManagement.Supplier(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_183:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1129:1179  bytes(TradeManagement.Supplier(msg.sender)).length */\n      mload\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1129:1184  bytes(TradeManagement.Supplier(msg.sender)).length != 0 */\n      sub\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1121:1244  require(bytes(TradeManagement.Supplier(msg.sender)).length != 0, \"Only authorized suppliers can mint packaged product NFT\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1278:1288  tokenCount */\n      0x08\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1278:1290  tokenCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1338:1371  _safeMint(msg.sender, tokenCount) */\n      tag_193\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1348:1358  msg.sender */\n      caller\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1360:1370  tokenCount */\n      sload(0x08)\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1338:1347  _safeMint */\n      tag_194\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1338:1371  _safeMint(msg.sender, tokenCount) */\n      jump\t// in\n    tag_193:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1383:1418  _setTokenURI(tokenCount, _tokenURI) */\n      tag_195\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1396:1406  tokenCount */\n      sload(0x08)\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1408:1417  _tokenURI */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1383:1395  _setTokenURI */\n      tag_196\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1383:1418  _setTokenURI(tokenCount, _tokenURI) */\n      jump\t// in\n    tag_195:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1463:1473  tokenCount */\n      sload(0x08)\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1456:1474  return(tokenCount) */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":1000:1482  function mint(string memory _tokenURI) external returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3929:4082  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_97:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4017:4021  bool */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4040:4058  _operatorApprovals */\n      0x05\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4040:4065  _operatorApprovals[owner] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4059:4064  owner */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4040:4065  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4040:4075  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4066:4074  operator */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4040:4075  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4033:4075  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3929:4082  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":597:648  ITradeManagementRawMaterials public TradeManagement */\n    tag_100:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_105:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_199\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_129\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_201:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_203\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_151\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_203:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1562:1862  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_109:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1664:1668  bool */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1714:1739  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1699:1739  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1699:1710  interfaceId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1699:1739  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1699:1803  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_205\n      jumpi\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1770:1803  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1755:1803  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1755:1766  interfaceId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1755:1803  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1699:1803  interfaceId == type(IERC721).interfaceId ||... */\n    tag_205:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1699:1855  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_206\n      jumpi\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1819:1855  super.supportsInterface(interfaceId) */\n      tag_207\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1843:1854  interfaceId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1819:1842  super.supportsInterface */\n      tag_208\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1819:1855  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_207:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1699:1855  interfaceId == type(IERC721).interfaceId ||... */\n    tag_206:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1680:1855  return... */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1562:1862  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16141:16382  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_119:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16204:16211  address */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16223:16236  address owner */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16239:16256  _ownerOf(tokenId) */\n      tag_210\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16248:16255  tokenId */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16239:16247  _ownerOf */\n      tag_211\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16239:16256  _ownerOf(tokenId) */\n      jump\t// in\n    tag_210:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16223:16256  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16287:16288  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16270:16289  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16270:16275  owner */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16270:16289  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16266:16354  if (owner == address(0)) {... */\n      tag_212\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16335:16342  tokenId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16312:16343  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16266:16354  if (owner == address(0)) {... */\n    tag_212:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16370:16375  owner */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16363:16375  return owner */\n      swap2\n      pop\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16141:16382  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5940:6067  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_121:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6010:6017  address */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6036:6051  _tokenApprovals */\n      0x04\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6036:6060  _tokenApprovals[tokenId] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6052:6059  tokenId */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6036:6060  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6029:6060  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5940:6067  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_125:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14421:14541  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_126:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14501:14534  _approve(to, tokenId, auth, true) */\n      tag_217\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14510:14512  to */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14514:14521  tokenId */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14523:14527  auth */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14529:14533  true */\n      0x01\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14501:14509  _approve */\n      tag_218\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14501:14534  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_217:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14421:14541  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_129:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_220\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_125\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_220:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_221\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_69\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_221:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_222\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_223\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_125\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_222:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8840:9635  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_136:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8926:8933  address */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8945:8957  address from */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8960:8977  _ownerOf(tokenId) */\n      tag_226\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8969:8976  tokenId */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8960:8968  _ownerOf */\n      tag_211\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8960:8977  _ownerOf(tokenId) */\n      jump\t// in\n    tag_226:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8945:8977  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9053:9054  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9037:9055  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9037:9041  auth */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9037:9055  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9033:9119  if (auth != address(0)) {... */\n      tag_227\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9071:9108  _checkAuthorized(from, auth, tokenId) */\n      tag_228\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9088:9092  from */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9094:9098  auth */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9100:9107  tokenId */\n      dup7\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9071:9087  _checkAuthorized */\n      tag_229\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9071:9108  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_228:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9033:9119  if (auth != address(0)) {... */\n    tag_227:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9179:9180  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9163:9181  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9163:9167  from */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9163:9181  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9159:9415  if (from != address(0)) {... */\n      tag_230\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9279:9327  _approve(address(0), tokenId, address(0), false) */\n      tag_231\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9296:9297  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9300:9307  tokenId */\n      dup6\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9317:9318  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9321:9326  false */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9279:9287  _approve */\n      tag_218\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9279:9327  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_231:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9389:9390  1 */\n      0x01\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9370:9379  _balances */\n      0x03\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9370:9385  _balances[from] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9380:9384  from */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9370:9385  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9370:9390  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9159:9415  if (from != address(0)) {... */\n    tag_230:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9443:9444  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9429:9445  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9429:9431  to */\n      dup6\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9429:9445  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9425:9532  if (to != address(0)) {... */\n      tag_232\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9506:9507  1 */\n      0x01\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9489:9498  _balances */\n      0x03\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9489:9502  _balances[to] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9499:9501  to */\n      dup8\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9489:9502  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9489:9507  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9425:9532  if (to != address(0)) {... */\n    tag_232:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9561:9563  to */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9542:9549  _owners */\n      0x02\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9542:9558  _owners[tokenId] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9550:9557  tokenId */\n      dup7\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9542:9558  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9542:9563  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9598:9605  tokenId */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9594:9596  to */\n      dup6\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9579:9606  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9588:9592  from */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9579:9606  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9624:9628  from */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9617:9628  return from */\n      swap2\n      pop\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8840:9635  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_151:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x07\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15594:15906  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_162:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15721:15722  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15701:15723  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15701:15709  operator */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15701:15723  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15697:15788  if (operator == address(0)) {... */\n      tag_235\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15768:15776  operator */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15746:15777  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15697:15788  if (operator == address(0)) {... */\n    tag_235:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15835:15843  approved */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15797:15815  _operatorApprovals */\n      0x05\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15797:15822  _operatorApprovals[owner] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15816:15821  owner */\n      dup6\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15797:15822  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15797:15832  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15823:15831  operator */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15797:15832  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15797:15843  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15880:15888  operator */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15858:15899  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15873:15878  owner */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15858:15899  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15890:15898  approved */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15858:15899  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_237\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15594:15906  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16921:17703  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_166:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17054:17055  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17037:17039  to */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17037:17051  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17037:17055  to.code.length > 0 */\n      gt\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17033:17697  if (to.code.length > 0) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17091:17093  to */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17075:17111  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17112:17124  _msgSender() */\n      tag_240\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17112:17122  _msgSender */\n      tag_125\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17112:17124  _msgSender() */\n      jump\t// in\n    tag_240:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17126:17130  from */\n      dup7\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17132:17139  tokenId */\n      dup6\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17141:17145  data */\n      dup6\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17075:17146  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_243\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      0x01\n    tag_243:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17071:17687  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_246\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_251\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_250)\n    tag_251:\n      0x60\n      swap2\n      pop\n    tag_250:\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17401:17402  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17384:17390  reason */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17384:17397  reason.length */\n      mload\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17384:17402  reason.length == 0 */\n      sub\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17380:17673  if (reason.length == 0) {... */\n      tag_252\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17455:17457  to */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17433:17458  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17380:17673  if (reason.length == 0) {... */\n    tag_252:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17625:17631  reason */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17619:17632  mload(reason) */\n      mload\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17610:17616  reason */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17606:17608  32 */\n      0x20\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17602:17617  add(32, reason) */\n      add\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17595:17633  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17071:17687  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_246:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17203:17244  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17193:17244  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17193:17199  retval */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17193:17244  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17189:17319  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_256\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17297:17299  to */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17275:17300  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17189:17319  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_256:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17147:17333  returns (bytes4 retval) {... */\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17033:17697  if (to.code.length > 0) {... */\n    tag_239:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16921:17703  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3175:3267  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_175:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3226:3239  string memory */\n      0x60\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3251:3260  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3175:3267  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2678:2933  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_181:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2742:2755  string memory */\n      0x60\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2767:2789  _requireOwned(tokenId) */\n      tag_260\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2781:2788  tokenId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2767:2780  _requireOwned */\n      tag_119\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2767:2789  _requireOwned(tokenId) */\n      jump\t// in\n    tag_260:\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2800:2821  string memory baseURI */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2824:2834  _baseURI() */\n      tag_261\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2824:2832  _baseURI */\n      tag_175\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2824:2834  _baseURI() */\n      jump\t// in\n    tag_261:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2800:2834  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2875:2876  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2857:2864  baseURI */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2851:2872  bytes(baseURI).length */\n      mload\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2851:2876  bytes(baseURI).length > 0 */\n      gt\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2851:2926  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_262\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_263)\n    tag_262:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2893:2900  baseURI */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2902:2920  tokenId.toString() */\n      tag_264\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2902:2909  tokenId */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2902:2918  tokenId.toString */\n      tag_265\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2902:2920  tokenId.toString() */\n      jump\t// in\n    tag_264:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2879:2921  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_266\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2851:2926  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_263:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2844:2926  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2678:2933  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10635:10735  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_194:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10702:10728  _safeMint(to, tokenId, \"\") */\n      tag_268\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10712:10714  to */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10716:10723  tokenId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10702:10728  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10702:10711  _safeMint */\n      tag_269\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10702:10728  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_268:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10635:10735  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1923:2090  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_196:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2036:2045  _tokenURI */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2014:2024  _tokenURIs */\n      0x06\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2014:2033  _tokenURIs[tokenId] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2025:2032  tokenId */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2014:2033  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2014:2045  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_271\n      swap2\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2060:2083  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2075:2082  tokenId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2060:2083  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_273\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1923:2090  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_208:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5709:5824  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_211:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5775:5782  address */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5801:5808  _owners */\n      0x02\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5801:5817  _owners[tokenId] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5809:5816  tokenId */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5801:5817  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5794:5817  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5709:5824  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14723:15385  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_218:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14883:14892  emitEvent */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14883:14914  emitEvent || auth != address(0) */\n      dup1\n      tag_277\n      jumpi\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14912:14913  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14896:14914  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14896:14900  auth */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14896:14914  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14883:14914  emitEvent || auth != address(0) */\n    tag_277:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14879:15339  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14930:14943  address owner */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14946:14968  _requireOwned(tokenId) */\n      tag_279\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14960:14967  tokenId */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14946:14959  _requireOwned */\n      tag_119\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14946:14968  _requireOwned(tokenId) */\n      jump\t// in\n    tag_279:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14930:14968  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15112:15113  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15096:15114  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15096:15100  auth */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15096:15114  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15096:15131  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_280\n      jumpi\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15127:15131  auth */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15118:15131  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15118:15123  owner */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15118:15131  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15096:15131  auth != address(0) && owner != auth */\n    tag_280:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15096:15165  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_281\n      jumpi\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15136:15165  isApprovedForAll(owner, auth) */\n      tag_282\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15153:15158  owner */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15160:15164  auth */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15136:15152  isApprovedForAll */\n      tag_97\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15136:15165  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_282:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15135:15165  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15096:15165  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_281:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15092:15234  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15214:15218  auth */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15192:15219  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15092:15234  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_283:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15252:15261  emitEvent */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15248:15329  if (emitEvent) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15306:15313  tokenId */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15302:15304  to */\n      dup6\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15286:15314  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15295:15300  owner */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15286:15314  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15248:15329  if (emitEvent) {... */\n    tag_285:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14916:15339  {... */\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14879:15339  if (emitEvent || auth != address(0)) {... */\n    tag_278:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15376:15378  to */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15349:15364  _tokenApprovals */\n      0x04\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15349:15373  _tokenApprovals[tokenId] */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15365:15372  tokenId */\n      dup6\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15349:15373  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15349:15378  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14723:15385  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7084:7452  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_229:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7196:7234  _isAuthorized(owner, spender, tokenId) */\n      tag_287\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7210:7215  owner */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7217:7224  spender */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7226:7233  tokenId */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7196:7209  _isAuthorized */\n      tag_288\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7196:7234  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_287:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7191:7446  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_289\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7271:7272  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7254:7273  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7254:7259  owner */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7254:7273  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7250:7436  if (owner == address(0)) {... */\n      tag_290\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7323:7330  tokenId */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7300:7331  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7250:7436  if (owner == address(0)) {... */\n    tag_290:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7404:7411  spender */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7413:7420  tokenId */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7377:7421  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7191:7446  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_289:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7084:7452  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_265:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_296\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_297\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_296:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_298\n      jumpi\n      tag_299\n      tag_300\n      jump\t// in\n    tag_299:\n    tag_298:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_301\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_301:\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_302:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_304\n      jumpi\n      tag_305\n      tag_306\n      jump\t// in\n    tag_305:\n    tag_304:\n      div\n      swap5\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_302\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_303:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10956:11138  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_269:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11050:11068  _mint(to, tokenId) */\n      tag_309\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11056:11058  to */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11060:11067  tokenId */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11050:11055  _mint */\n      tag_310\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11050:11068  _mint(to, tokenId) */\n      jump\t// in\n    tag_309:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11078:11131  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_311\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11109:11110  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11113:11115  to */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11117:11124  tokenId */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11126:11130  data */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11078:11100  _checkOnERC721Received */\n      tag_166\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":11078:11131  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_311:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10956:11138  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6378:6650  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_288:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6481:6485  bool */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6535:6536  0 */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6516:6537  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6516:6523  spender */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6516:6537  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6516:6643  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_313\n      jumpi\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6563:6570  spender */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6554:6570  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6554:6559  owner */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6554:6570  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6554:6606  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_314\n      jumpi\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6606  isApprovedForAll(owner, spender) */\n      tag_315\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6591:6596  owner */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6598:6605  spender */\n      dup5\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6590  isApprovedForAll */\n      tag_97\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6574:6606  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_315:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6554:6606  owner == spender || isApprovedForAll(owner, spender) */\n    tag_314:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6554:6642  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_316\n      jumpi\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6635:6642  spender */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6610:6642  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6610:6631  _getApproved(tokenId) */\n      tag_317\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6623:6630  tokenId */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6610:6622  _getApproved */\n      tag_121\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6610:6631  _getApproved(tokenId) */\n      jump\t// in\n    tag_317:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6610:6642  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6554:6642  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_316:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6516:6643  spender != address(0) &&... */\n    tag_313:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6497:6643  return... */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6378:6650  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12690:13606  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_297:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12743:12750  uint256 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12762:12776  uint256 result */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12779:12780  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12762:12780  uint256 result = 0 */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12827:12835  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12818:12823  value */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12818:12835  value >= 10 ** 64 */\n      lt\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12814:12917  if (value >= 10 ** 64) {... */\n      tag_319\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12864:12872  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12855:12872  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_320\n      jumpi\n      tag_321\n      tag_306\n      jump\t// in\n    tag_321:\n    tag_320:\n      div\n      swap3\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12900:12902  64 */\n      0x40\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12890:12902  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12814:12917  if (value >= 10 ** 64) {... */\n    tag_319:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12943:12951  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12934:12939  value */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12934:12951  value >= 10 ** 32 */\n      lt\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12930:13033  if (value >= 10 ** 32) {... */\n      tag_322\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12980:12988  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12971:12988  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_323\n      jumpi\n      tag_324\n      tag_306\n      jump\t// in\n    tag_324:\n    tag_323:\n      div\n      swap3\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13016:13018  32 */\n      0x20\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13006:13018  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12930:13033  if (value >= 10 ** 32) {... */\n    tag_322:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13059:13067  10 ** 16 */\n      0x2386f26fc10000\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13050:13055  value */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13050:13067  value >= 10 ** 16 */\n      lt\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13046:13149  if (value >= 10 ** 16) {... */\n      tag_325\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13096:13104  10 ** 16 */\n      0x2386f26fc10000\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13087:13104  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_326\n      jumpi\n      tag_327\n      tag_306\n      jump\t// in\n    tag_327:\n    tag_326:\n      div\n      swap3\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13132:13134  16 */\n      0x10\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13122:13134  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13046:13149  if (value >= 10 ** 16) {... */\n    tag_325:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13175:13182  10 ** 8 */\n      0x05f5e100\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13166:13171  value */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13166:13182  value >= 10 ** 8 */\n      lt\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13162:13262  if (value >= 10 ** 8) {... */\n      tag_328\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13211:13218  10 ** 8 */\n      0x05f5e100\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13202:13218  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_329\n      jumpi\n      tag_330\n      tag_306\n      jump\t// in\n    tag_330:\n    tag_329:\n      div\n      swap3\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13246:13247  8 */\n      0x08\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13236:13247  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13162:13262  if (value >= 10 ** 8) {... */\n    tag_328:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13288:13295  10 ** 4 */\n      0x2710\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13279:13284  value */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13279:13295  value >= 10 ** 4 */\n      lt\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13275:13375  if (value >= 10 ** 4) {... */\n      tag_331\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13324:13331  10 ** 4 */\n      0x2710\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13315:13331  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_332\n      jumpi\n      tag_333\n      tag_306\n      jump\t// in\n    tag_333:\n    tag_332:\n      div\n      swap3\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13359:13360  4 */\n      0x04\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13349:13360  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13275:13375  if (value >= 10 ** 4) {... */\n    tag_331:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13401:13408  10 ** 2 */\n      0x64\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13392:13397  value */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13392:13408  value >= 10 ** 2 */\n      lt\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13388:13488  if (value >= 10 ** 2) {... */\n      tag_334\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13437:13444  10 ** 2 */\n      0x64\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13428:13444  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_335\n      jumpi\n      tag_336\n      tag_306\n      jump\t// in\n    tag_336:\n    tag_335:\n      div\n      swap3\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13472:13473  2 */\n      0x02\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13462:13473  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13388:13488  if (value >= 10 ** 2) {... */\n    tag_334:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13514:13521  10 ** 1 */\n      0x0a\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13505:13510  value */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13505:13521  value >= 10 ** 1 */\n      lt\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13501:13567  if (value >= 10 ** 1) {... */\n      tag_337\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13551:13552  1 */\n      0x01\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13541:13552  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13501:13567  if (value >= 10 ** 1) {... */\n    tag_337:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13593:13599  result */\n      dup1\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":13586:13599  return result */\n      swap2\n      pop\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":12690:13606  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9957:10284  function _mint(address to, uint256 tokenId) internal {... */\n    tag_310:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10038:10039  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10024:10040  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10024:10026  to */\n      dup3\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10024:10040  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10020:10107  if (to == address(0)) {... */\n      tag_339\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10093:10094  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10063:10096  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_340\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_340:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10020:10107  if (to == address(0)) {... */\n    tag_339:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10116:10137  address previousOwner */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10140:10172  _update(to, tokenId, address(0)) */\n      tag_341\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10148:10150  to */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10152:10159  tokenId */\n      dup4\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10169:10170  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10140:10147  _update */\n      tag_136\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10140:10172  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_341:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10116:10172  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10211:10212  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10186:10213  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10186:10199  previousOwner */\n      dup2\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10186:10213  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10182:10278  if (previousOwner != address(0)) {... */\n      tag_342\n      jumpi\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10264:10265  0 */\n      0x00\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10236:10267  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_343\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10182:10278  if (previousOwner != address(0)) {... */\n    tag_342:\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":10010:10284  {... */\n      pop\n        /* \"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":9957:10284  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_344:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_345:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_346:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_347:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_348:\n        /* \"#utility.yul\":561:584   */\n      tag_416\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_347\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_417:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_349:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_419\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_348\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_28:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_422\n      tag_345\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":833:952   */\n    tag_421:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_423\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_349\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_350:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_351:\n        /* \"#utility.yul\":1268:1289   */\n      tag_426\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_350\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_31:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_428\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_351\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_352:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_353:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_354:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_432:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_432)\n    tag_434:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_355:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_356:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_437\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_352\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":2329:2400   */\n      tag_438\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_353\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_439\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_354\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":2499:2528   */\n      tag_440\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_355\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_35:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_442\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_356\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_357:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_358:\n        /* \"#utility.yul\":3016:3040   */\n      tag_445\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_357\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_446:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_359:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_448\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_358\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_38:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_451\n      tag_345\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":3292:3411   */\n    tag_450:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_452\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_359\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_360:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_361:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_455\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_360\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_362:\n        /* \"#utility.yul\":3872:3896   */\n      tag_457\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_361\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_41:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_459\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_362\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_363:\n        /* \"#utility.yul\":4210:4234   */\n      tag_461\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_361\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_462:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_364:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_464\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_363\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_44:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_467\n      tag_345\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":4503:4622   */\n    tag_466:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_468\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_364\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_469\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_359\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5219   */\n    tag_48:\n        /* \"#utility.yul\":4949:4955   */\n      0x00\n        /* \"#utility.yul\":4998:5000   */\n      0x20\n        /* \"#utility.yul\":4986:4995   */\n      dup3\n        /* \"#utility.yul\":4977:4984   */\n      dup5\n        /* \"#utility.yul\":4973:4996   */\n      sub\n        /* \"#utility.yul\":4969:5001   */\n      slt\n        /* \"#utility.yul\":4966:5085   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":5004:5083   */\n      tag_472\n      tag_345\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":4966:5085   */\n    tag_471:\n        /* \"#utility.yul\":5124:5125   */\n      0x00\n        /* \"#utility.yul\":5149:5202   */\n      tag_473\n        /* \"#utility.yul\":5194:5201   */\n      dup5\n        /* \"#utility.yul\":5185:5191   */\n      dup3\n        /* \"#utility.yul\":5174:5183   */\n      dup6\n        /* \"#utility.yul\":5170:5192   */\n      add\n        /* \"#utility.yul\":5149:5202   */\n      tag_364\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":5139:5202   */\n      swap2\n      pop\n        /* \"#utility.yul\":5095:5212   */\n      pop\n        /* \"#utility.yul\":4890:5219   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5225:5844   */\n    tag_52:\n        /* \"#utility.yul\":5302:5308   */\n      0x00\n        /* \"#utility.yul\":5310:5316   */\n      dup1\n        /* \"#utility.yul\":5318:5324   */\n      0x00\n        /* \"#utility.yul\":5367:5369   */\n      0x60\n        /* \"#utility.yul\":5355:5364   */\n      dup5\n        /* \"#utility.yul\":5346:5353   */\n      dup7\n        /* \"#utility.yul\":5342:5365   */\n      sub\n        /* \"#utility.yul\":5338:5370   */\n      slt\n        /* \"#utility.yul\":5335:5454   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":5373:5452   */\n      tag_476\n      tag_345\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":5335:5454   */\n    tag_475:\n        /* \"#utility.yul\":5493:5494   */\n      0x00\n        /* \"#utility.yul\":5518:5571   */\n      tag_477\n        /* \"#utility.yul\":5563:5570   */\n      dup7\n        /* \"#utility.yul\":5554:5560   */\n      dup3\n        /* \"#utility.yul\":5543:5552   */\n      dup8\n        /* \"#utility.yul\":5539:5561   */\n      add\n        /* \"#utility.yul\":5518:5571   */\n      tag_364\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":5508:5571   */\n      swap4\n      pop\n        /* \"#utility.yul\":5464:5581   */\n      pop\n        /* \"#utility.yul\":5620:5622   */\n      0x20\n        /* \"#utility.yul\":5646:5699   */\n      tag_478\n        /* \"#utility.yul\":5691:5698   */\n      dup7\n        /* \"#utility.yul\":5682:5688   */\n      dup3\n        /* \"#utility.yul\":5671:5680   */\n      dup8\n        /* \"#utility.yul\":5667:5689   */\n      add\n        /* \"#utility.yul\":5646:5699   */\n      tag_364\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":5636:5699   */\n      swap3\n      pop\n        /* \"#utility.yul\":5591:5709   */\n      pop\n        /* \"#utility.yul\":5748:5750   */\n      0x40\n        /* \"#utility.yul\":5774:5827   */\n      tag_479\n        /* \"#utility.yul\":5819:5826   */\n      dup7\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup8\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_359\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5719:5837   */\n      pop\n        /* \"#utility.yul\":5225:5844   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_365:\n        /* \"#utility.yul\":5937:5961   */\n      tag_481\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_357\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_65:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_483\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_365\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_366:\n        /* \"#utility.yul\":6272:6293   */\n      tag_485\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_350\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_486:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_367:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_488\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_366\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_79:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_491\n      tag_345\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":6553:6672   */\n    tag_490:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_492\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_364\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_493\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_367\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_368:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_369:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_300:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_370:\n        /* \"#utility.yul\":7452:7479   */\n      tag_498\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_355\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_500\n      tag_300\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":7525:7613   */\n    tag_499:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_371:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_502\n      tag_344\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_503\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_370\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_372:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_506\n      tag_300\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":7928:7984   */\n    tag_505:\n        /* \"#utility.yul\":8002:8031   */\n      tag_507\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_355\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_373:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_374:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_510\n        /* \"#utility.yul\":8374:8422   */\n      tag_511\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_372\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":8358:8423   */\n      tag_371\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_513\n      tag_369\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":8498:8610   */\n    tag_512:\n        /* \"#utility.yul\":8619:8673   */\n      tag_514\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_373\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_375:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_517\n      tag_368\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":8769:8891   */\n    tag_516:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_518\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_374\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_83:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_521\n      tag_345\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":9178:9298   */\n    tag_520:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_522\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_364\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_523\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_364\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_524\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_359\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_526\n      tag_346\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":9765:9882   */\n    tag_525:\n        /* \"#utility.yul\":9906:9968   */\n      tag_527\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_375\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10299   */\n    tag_376:\n        /* \"#utility.yul\":10053:10057   */\n      0x00\n        /* \"#utility.yul\":10143:10161   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10135:10141   */\n      dup3\n        /* \"#utility.yul\":10132:10162   */\n      gt\n        /* \"#utility.yul\":10129:10185   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":10165:10183   */\n      tag_530\n      tag_300\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":10129:10185   */\n    tag_529:\n        /* \"#utility.yul\":10203:10232   */\n      tag_531\n        /* \"#utility.yul\":10225:10231   */\n      dup3\n        /* \"#utility.yul\":10203:10232   */\n      tag_355\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":10195:10232   */\n      swap1\n      pop\n        /* \"#utility.yul\":10287:10291   */\n      0x20\n        /* \"#utility.yul\":10281:10285   */\n      dup2\n        /* \"#utility.yul\":10277:10292   */\n      add\n        /* \"#utility.yul\":10269:10292   */\n      swap1\n      pop\n        /* \"#utility.yul\":9991:10299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10305:10730   */\n    tag_377:\n        /* \"#utility.yul\":10383:10388   */\n      0x00\n        /* \"#utility.yul\":10408:10474   */\n      tag_533\n        /* \"#utility.yul\":10424:10473   */\n      tag_534\n        /* \"#utility.yul\":10466:10472   */\n      dup5\n        /* \"#utility.yul\":10424:10473   */\n      tag_376\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":10408:10474   */\n      tag_371\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":10399:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10497:10503   */\n      dup3\n        /* \"#utility.yul\":10490:10495   */\n      dup2\n        /* \"#utility.yul\":10483:10504   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x20\n        /* \"#utility.yul\":10528:10533   */\n      dup2\n        /* \"#utility.yul\":10524:10540   */\n      add\n        /* \"#utility.yul\":10573:10576   */\n      dup5\n        /* \"#utility.yul\":10564:10570   */\n      dup5\n        /* \"#utility.yul\":10559:10562   */\n      dup5\n        /* \"#utility.yul\":10555:10571   */\n      add\n        /* \"#utility.yul\":10552:10577   */\n      gt\n        /* \"#utility.yul\":10549:10661   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":10580:10659   */\n      tag_536\n      tag_369\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":10549:10661   */\n    tag_535:\n        /* \"#utility.yul\":10670:10724   */\n      tag_537\n        /* \"#utility.yul\":10717:10723   */\n      dup5\n        /* \"#utility.yul\":10712:10715   */\n      dup3\n        /* \"#utility.yul\":10707:10710   */\n      dup6\n        /* \"#utility.yul\":10670:10724   */\n      tag_373\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":10389:10730   */\n      pop\n        /* \"#utility.yul\":10305:10730   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10750:11090   */\n    tag_378:\n        /* \"#utility.yul\":10806:10811   */\n      0x00\n        /* \"#utility.yul\":10855:10858   */\n      dup3\n        /* \"#utility.yul\":10848:10852   */\n      0x1f\n        /* \"#utility.yul\":10840:10846   */\n      dup4\n        /* \"#utility.yul\":10836:10853   */\n      add\n        /* \"#utility.yul\":10832:10859   */\n      slt\n        /* \"#utility.yul\":10822:10944   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":10863:10942   */\n      tag_540\n      tag_368\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":10822:10944   */\n    tag_539:\n        /* \"#utility.yul\":10980:10986   */\n      dup2\n        /* \"#utility.yul\":10967:10987   */\n      calldataload\n        /* \"#utility.yul\":11005:11084   */\n      tag_541\n        /* \"#utility.yul\":11080:11083   */\n      dup5\n        /* \"#utility.yul\":11072:11078   */\n      dup3\n        /* \"#utility.yul\":11065:11069   */\n      0x20\n        /* \"#utility.yul\":11057:11063   */\n      dup7\n        /* \"#utility.yul\":11053:11070   */\n      add\n        /* \"#utility.yul\":11005:11084   */\n      tag_377\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":10996:11084   */\n      swap2\n      pop\n        /* \"#utility.yul\":10812:11090   */\n      pop\n        /* \"#utility.yul\":10750:11090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11096:11605   */\n    tag_91:\n        /* \"#utility.yul\":11165:11171   */\n      0x00\n        /* \"#utility.yul\":11214:11216   */\n      0x20\n        /* \"#utility.yul\":11202:11211   */\n      dup3\n        /* \"#utility.yul\":11193:11200   */\n      dup5\n        /* \"#utility.yul\":11189:11212   */\n      sub\n        /* \"#utility.yul\":11185:11217   */\n      slt\n        /* \"#utility.yul\":11182:11301   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":11220:11299   */\n      tag_544\n      tag_345\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":11182:11301   */\n    tag_543:\n        /* \"#utility.yul\":11368:11369   */\n      0x00\n        /* \"#utility.yul\":11357:11366   */\n      dup3\n        /* \"#utility.yul\":11353:11370   */\n      add\n        /* \"#utility.yul\":11340:11371   */\n      calldataload\n        /* \"#utility.yul\":11398:11416   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11390:11396   */\n      dup2\n        /* \"#utility.yul\":11387:11417   */\n      gt\n        /* \"#utility.yul\":11384:11501   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":11420:11499   */\n      tag_546\n      tag_346\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":11384:11501   */\n    tag_545:\n        /* \"#utility.yul\":11525:11588   */\n      tag_547\n        /* \"#utility.yul\":11580:11587   */\n      dup5\n        /* \"#utility.yul\":11571:11577   */\n      dup3\n        /* \"#utility.yul\":11560:11569   */\n      dup6\n        /* \"#utility.yul\":11556:11578   */\n      add\n        /* \"#utility.yul\":11525:11588   */\n      tag_378\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":11515:11588   */\n      swap2\n      pop\n        /* \"#utility.yul\":11311:11598   */\n      pop\n        /* \"#utility.yul\":11096:11605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11611:12085   */\n    tag_96:\n        /* \"#utility.yul\":11679:11685   */\n      0x00\n        /* \"#utility.yul\":11687:11693   */\n      dup1\n        /* \"#utility.yul\":11736:11738   */\n      0x40\n        /* \"#utility.yul\":11724:11733   */\n      dup4\n        /* \"#utility.yul\":11715:11722   */\n      dup6\n        /* \"#utility.yul\":11711:11734   */\n      sub\n        /* \"#utility.yul\":11707:11739   */\n      slt\n        /* \"#utility.yul\":11704:11823   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":11742:11821   */\n      tag_550\n      tag_345\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":11704:11823   */\n    tag_549:\n        /* \"#utility.yul\":11862:11863   */\n      0x00\n        /* \"#utility.yul\":11887:11940   */\n      tag_551\n        /* \"#utility.yul\":11932:11939   */\n      dup6\n        /* \"#utility.yul\":11923:11929   */\n      dup3\n        /* \"#utility.yul\":11912:11921   */\n      dup7\n        /* \"#utility.yul\":11908:11930   */\n      add\n        /* \"#utility.yul\":11887:11940   */\n      tag_364\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":11877:11940   */\n      swap3\n      pop\n        /* \"#utility.yul\":11833:11950   */\n      pop\n        /* \"#utility.yul\":11989:11991   */\n      0x20\n        /* \"#utility.yul\":12015:12068   */\n      tag_552\n        /* \"#utility.yul\":12060:12067   */\n      dup6\n        /* \"#utility.yul\":12051:12057   */\n      dup3\n        /* \"#utility.yul\":12040:12049   */\n      dup7\n        /* \"#utility.yul\":12036:12058   */\n      add\n        /* \"#utility.yul\":12015:12068   */\n      tag_364\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":12005:12068   */\n      swap2\n      pop\n        /* \"#utility.yul\":11960:12078   */\n      pop\n        /* \"#utility.yul\":11611:12085   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12091:12151   */\n    tag_379:\n        /* \"#utility.yul\":12119:12122   */\n      0x00\n        /* \"#utility.yul\":12140:12145   */\n      dup2\n        /* \"#utility.yul\":12133:12145   */\n      swap1\n      pop\n        /* \"#utility.yul\":12091:12151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12157:12299   */\n    tag_380:\n        /* \"#utility.yul\":12207:12216   */\n      0x00\n        /* \"#utility.yul\":12240:12293   */\n      tag_555\n        /* \"#utility.yul\":12258:12292   */\n      tag_556\n        /* \"#utility.yul\":12267:12291   */\n      tag_557\n        /* \"#utility.yul\":12285:12290   */\n      dup5\n        /* \"#utility.yul\":12267:12291   */\n      tag_360\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":12258:12292   */\n      tag_379\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":12240:12293   */\n      tag_360\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":12227:12293   */\n      swap1\n      pop\n        /* \"#utility.yul\":12157:12299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12305:12431   */\n    tag_381:\n        /* \"#utility.yul\":12355:12364   */\n      0x00\n        /* \"#utility.yul\":12388:12425   */\n      tag_559\n        /* \"#utility.yul\":12419:12424   */\n      dup3\n        /* \"#utility.yul\":12388:12425   */\n      tag_380\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":12375:12425   */\n      swap1\n      pop\n        /* \"#utility.yul\":12305:12431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12437:12600   */\n    tag_382:\n        /* \"#utility.yul\":12524:12533   */\n      0x00\n        /* \"#utility.yul\":12557:12594   */\n      tag_561\n        /* \"#utility.yul\":12588:12593   */\n      dup3\n        /* \"#utility.yul\":12557:12594   */\n      tag_381\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":12544:12594   */\n      swap1\n      pop\n        /* \"#utility.yul\":12437:12600   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12606:12811   */\n    tag_383:\n        /* \"#utility.yul\":12730:12804   */\n      tag_563\n        /* \"#utility.yul\":12798:12803   */\n      dup2\n        /* \"#utility.yul\":12730:12804   */\n      tag_382\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":12725:12728   */\n      dup3\n        /* \"#utility.yul\":12718:12805   */\n      mstore\n        /* \"#utility.yul\":12606:12811   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12817:13113   */\n    tag_102:\n        /* \"#utility.yul\":12947:12951   */\n      0x00\n        /* \"#utility.yul\":12985:12987   */\n      0x20\n        /* \"#utility.yul\":12974:12983   */\n      dup3\n        /* \"#utility.yul\":12970:12988   */\n      add\n        /* \"#utility.yul\":12962:12988   */\n      swap1\n      pop\n        /* \"#utility.yul\":12998:13106   */\n      tag_565\n        /* \"#utility.yul\":13103:13104   */\n      0x00\n        /* \"#utility.yul\":13092:13101   */\n      dup4\n        /* \"#utility.yul\":13088:13105   */\n      add\n        /* \"#utility.yul\":13079:13085   */\n      dup5\n        /* \"#utility.yul\":12998:13106   */\n      tag_383\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":12817:13113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13119:13299   */\n    tag_384:\n        /* \"#utility.yul\":13167:13244   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13164:13165   */\n      0x00\n        /* \"#utility.yul\":13157:13245   */\n      mstore\n        /* \"#utility.yul\":13264:13268   */\n      0x22\n        /* \"#utility.yul\":13261:13262   */\n      0x04\n        /* \"#utility.yul\":13254:13269   */\n      mstore\n        /* \"#utility.yul\":13288:13292   */\n      0x24\n        /* \"#utility.yul\":13285:13286   */\n      0x00\n        /* \"#utility.yul\":13278:13293   */\n      revert\n        /* \"#utility.yul\":13305:13625   */\n    tag_112:\n        /* \"#utility.yul\":13349:13355   */\n      0x00\n        /* \"#utility.yul\":13386:13387   */\n      0x02\n        /* \"#utility.yul\":13380:13384   */\n      dup3\n        /* \"#utility.yul\":13376:13388   */\n      div\n        /* \"#utility.yul\":13366:13388   */\n      swap1\n      pop\n        /* \"#utility.yul\":13433:13434   */\n      0x01\n        /* \"#utility.yul\":13427:13431   */\n      dup3\n        /* \"#utility.yul\":13423:13435   */\n      and\n        /* \"#utility.yul\":13454:13472   */\n      dup1\n        /* \"#utility.yul\":13444:13525   */\n      tag_568\n      jumpi\n        /* \"#utility.yul\":13510:13514   */\n      0x7f\n        /* \"#utility.yul\":13502:13508   */\n      dup3\n        /* \"#utility.yul\":13498:13515   */\n      and\n        /* \"#utility.yul\":13488:13515   */\n      swap2\n      pop\n        /* \"#utility.yul\":13444:13525   */\n    tag_568:\n        /* \"#utility.yul\":13572:13574   */\n      0x20\n        /* \"#utility.yul\":13564:13570   */\n      dup3\n        /* \"#utility.yul\":13561:13575   */\n      lt\n        /* \"#utility.yul\":13541:13559   */\n      dup2\n        /* \"#utility.yul\":13538:13576   */\n      sub\n        /* \"#utility.yul\":13535:13619   */\n      tag_569\n      jumpi\n        /* \"#utility.yul\":13591:13609   */\n      tag_570\n      tag_384\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":13535:13619   */\n    tag_569:\n        /* \"#utility.yul\":13356:13625   */\n      pop\n        /* \"#utility.yul\":13305:13625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13631:14073   */\n    tag_139:\n        /* \"#utility.yul\":13780:13784   */\n      0x00\n        /* \"#utility.yul\":13818:13820   */\n      0x60\n        /* \"#utility.yul\":13807:13816   */\n      dup3\n        /* \"#utility.yul\":13803:13821   */\n      add\n        /* \"#utility.yul\":13795:13821   */\n      swap1\n      pop\n        /* \"#utility.yul\":13831:13902   */\n      tag_572\n        /* \"#utility.yul\":13899:13900   */\n      0x00\n        /* \"#utility.yul\":13888:13897   */\n      dup4\n        /* \"#utility.yul\":13884:13901   */\n      add\n        /* \"#utility.yul\":13875:13881   */\n      dup7\n        /* \"#utility.yul\":13831:13902   */\n      tag_362\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":13912:13984   */\n      tag_573\n        /* \"#utility.yul\":13980:13982   */\n      0x20\n        /* \"#utility.yul\":13969:13978   */\n      dup4\n        /* \"#utility.yul\":13965:13983   */\n      add\n        /* \"#utility.yul\":13956:13962   */\n      dup6\n        /* \"#utility.yul\":13912:13984   */\n      tag_365\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":13994:14066   */\n      tag_574\n        /* \"#utility.yul\":14062:14064   */\n      0x40\n        /* \"#utility.yul\":14051:14060   */\n      dup4\n        /* \"#utility.yul\":14047:14065   */\n      add\n        /* \"#utility.yul\":14038:14044   */\n      dup5\n        /* \"#utility.yul\":13994:14066   */\n      tag_362\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":13631:14073   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14079:14227   */\n    tag_385:\n        /* \"#utility.yul\":14181:14192   */\n      0x00\n        /* \"#utility.yul\":14218:14221   */\n      dup2\n        /* \"#utility.yul\":14203:14221   */\n      swap1\n      pop\n        /* \"#utility.yul\":14079:14227   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14233:14623   */\n    tag_386:\n        /* \"#utility.yul\":14339:14342   */\n      0x00\n        /* \"#utility.yul\":14367:14406   */\n      tag_577\n        /* \"#utility.yul\":14400:14405   */\n      dup3\n        /* \"#utility.yul\":14367:14406   */\n      tag_352\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":14422:14511   */\n      tag_578\n        /* \"#utility.yul\":14504:14510   */\n      dup2\n        /* \"#utility.yul\":14499:14502   */\n      dup6\n        /* \"#utility.yul\":14422:14511   */\n      tag_385\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":14415:14511   */\n      swap4\n      pop\n        /* \"#utility.yul\":14520:14585   */\n      tag_579\n        /* \"#utility.yul\":14578:14584   */\n      dup2\n        /* \"#utility.yul\":14573:14576   */\n      dup6\n        /* \"#utility.yul\":14566:14570   */\n      0x20\n        /* \"#utility.yul\":14559:14564   */\n      dup7\n        /* \"#utility.yul\":14555:14571   */\n      add\n        /* \"#utility.yul\":14520:14585   */\n      tag_354\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":14610:14616   */\n      dup1\n        /* \"#utility.yul\":14605:14608   */\n      dup5\n        /* \"#utility.yul\":14601:14617   */\n      add\n        /* \"#utility.yul\":14594:14617   */\n      swap2\n      pop\n        /* \"#utility.yul\":14343:14623   */\n      pop\n        /* \"#utility.yul\":14233:14623   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14629:15064   */\n    tag_179:\n        /* \"#utility.yul\":14809:14812   */\n      0x00\n        /* \"#utility.yul\":14831:14926   */\n      tag_581\n        /* \"#utility.yul\":14922:14925   */\n      dup3\n        /* \"#utility.yul\":14913:14919   */\n      dup6\n        /* \"#utility.yul\":14831:14926   */\n      tag_386\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":14824:14926   */\n      swap2\n      pop\n        /* \"#utility.yul\":14943:15038   */\n      tag_582\n        /* \"#utility.yul\":15034:15037   */\n      dup3\n        /* \"#utility.yul\":15025:15031   */\n      dup5\n        /* \"#utility.yul\":14943:15038   */\n      tag_386\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":14936:15038   */\n      swap2\n      pop\n        /* \"#utility.yul\":15055:15058   */\n      dup2\n        /* \"#utility.yul\":15048:15058   */\n      swap1\n      pop\n        /* \"#utility.yul\":14629:15064   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15070:15504   */\n    tag_387:\n        /* \"#utility.yul\":15159:15164   */\n      0x00\n        /* \"#utility.yul\":15184:15250   */\n      tag_584\n        /* \"#utility.yul\":15200:15249   */\n      tag_585\n        /* \"#utility.yul\":15242:15248   */\n      dup5\n        /* \"#utility.yul\":15200:15249   */\n      tag_376\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":15184:15250   */\n      tag_371\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":15175:15250   */\n      swap1\n      pop\n        /* \"#utility.yul\":15273:15279   */\n      dup3\n        /* \"#utility.yul\":15266:15271   */\n      dup2\n        /* \"#utility.yul\":15259:15280   */\n      mstore\n        /* \"#utility.yul\":15311:15315   */\n      0x20\n        /* \"#utility.yul\":15304:15309   */\n      dup2\n        /* \"#utility.yul\":15300:15316   */\n      add\n        /* \"#utility.yul\":15349:15352   */\n      dup5\n        /* \"#utility.yul\":15340:15346   */\n      dup5\n        /* \"#utility.yul\":15335:15338   */\n      dup5\n        /* \"#utility.yul\":15331:15347   */\n      add\n        /* \"#utility.yul\":15328:15353   */\n      gt\n        /* \"#utility.yul\":15325:15437   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":15356:15435   */\n      tag_587\n      tag_369\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":15325:15437   */\n    tag_586:\n        /* \"#utility.yul\":15446:15498   */\n      tag_588\n        /* \"#utility.yul\":15491:15497   */\n      dup5\n        /* \"#utility.yul\":15486:15489   */\n      dup3\n        /* \"#utility.yul\":15481:15484   */\n      dup6\n        /* \"#utility.yul\":15446:15498   */\n      tag_354\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":15165:15504   */\n      pop\n        /* \"#utility.yul\":15070:15504   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15524:15879   */\n    tag_388:\n        /* \"#utility.yul\":15591:15596   */\n      0x00\n        /* \"#utility.yul\":15640:15643   */\n      dup3\n        /* \"#utility.yul\":15633:15637   */\n      0x1f\n        /* \"#utility.yul\":15625:15631   */\n      dup4\n        /* \"#utility.yul\":15621:15638   */\n      add\n        /* \"#utility.yul\":15617:15644   */\n      slt\n        /* \"#utility.yul\":15607:15729   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":15648:15727   */\n      tag_591\n      tag_368\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":15607:15729   */\n    tag_590:\n        /* \"#utility.yul\":15758:15764   */\n      dup2\n        /* \"#utility.yul\":15752:15765   */\n      mload\n        /* \"#utility.yul\":15783:15873   */\n      tag_592\n        /* \"#utility.yul\":15869:15872   */\n      dup5\n        /* \"#utility.yul\":15861:15867   */\n      dup3\n        /* \"#utility.yul\":15854:15858   */\n      0x20\n        /* \"#utility.yul\":15846:15852   */\n      dup7\n        /* \"#utility.yul\":15842:15859   */\n      add\n        /* \"#utility.yul\":15783:15873   */\n      tag_387\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":15774:15873   */\n      swap2\n      pop\n        /* \"#utility.yul\":15597:15879   */\n      pop\n        /* \"#utility.yul\":15524:15879   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15885:16409   */\n    tag_187:\n        /* \"#utility.yul\":15965:15971   */\n      0x00\n        /* \"#utility.yul\":16014:16016   */\n      0x20\n        /* \"#utility.yul\":16002:16011   */\n      dup3\n        /* \"#utility.yul\":15993:16000   */\n      dup5\n        /* \"#utility.yul\":15989:16012   */\n      sub\n        /* \"#utility.yul\":15985:16017   */\n      slt\n        /* \"#utility.yul\":15982:16101   */\n      iszero\n      tag_594\n      jumpi\n        /* \"#utility.yul\":16020:16099   */\n      tag_595\n      tag_345\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":15982:16101   */\n    tag_594:\n        /* \"#utility.yul\":16161:16162   */\n      0x00\n        /* \"#utility.yul\":16150:16159   */\n      dup3\n        /* \"#utility.yul\":16146:16163   */\n      add\n        /* \"#utility.yul\":16140:16164   */\n      mload\n        /* \"#utility.yul\":16191:16209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16183:16189   */\n      dup2\n        /* \"#utility.yul\":16180:16210   */\n      gt\n        /* \"#utility.yul\":16177:16294   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":16213:16292   */\n      tag_597\n      tag_346\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":16177:16294   */\n    tag_596:\n        /* \"#utility.yul\":16318:16392   */\n      tag_598\n        /* \"#utility.yul\":16384:16391   */\n      dup5\n        /* \"#utility.yul\":16375:16381   */\n      dup3\n        /* \"#utility.yul\":16364:16373   */\n      dup6\n        /* \"#utility.yul\":16360:16382   */\n      add\n        /* \"#utility.yul\":16318:16392   */\n      tag_388\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":16308:16392   */\n      swap2\n      pop\n        /* \"#utility.yul\":16111:16402   */\n      pop\n        /* \"#utility.yul\":15885:16409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16415:16657   */\n    tag_389:\n        /* \"#utility.yul\":16555:16589   */\n      0x4f6e6c7920617574686f72697a656420737570706c696572732063616e206d69\n        /* \"#utility.yul\":16551:16552   */\n      0x00\n        /* \"#utility.yul\":16543:16549   */\n      dup3\n        /* \"#utility.yul\":16539:16553   */\n      add\n        /* \"#utility.yul\":16532:16590   */\n      mstore\n        /* \"#utility.yul\":16624:16649   */\n      0x6e74207061636b616765642070726f64756374204e4654000000000000000000\n        /* \"#utility.yul\":16619:16621   */\n      0x20\n        /* \"#utility.yul\":16611:16617   */\n      dup3\n        /* \"#utility.yul\":16607:16622   */\n      add\n        /* \"#utility.yul\":16600:16650   */\n      mstore\n        /* \"#utility.yul\":16415:16657   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16663:17029   */\n    tag_390:\n        /* \"#utility.yul\":16805:16808   */\n      0x00\n        /* \"#utility.yul\":16826:16893   */\n      tag_601\n        /* \"#utility.yul\":16890:16892   */\n      0x37\n        /* \"#utility.yul\":16885:16888   */\n      dup4\n        /* \"#utility.yul\":16826:16893   */\n      tag_353\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":16819:16893   */\n      swap2\n      pop\n        /* \"#utility.yul\":16902:16995   */\n      tag_602\n        /* \"#utility.yul\":16991:16994   */\n      dup3\n        /* \"#utility.yul\":16902:16995   */\n      tag_389\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":17020:17022   */\n      0x40\n        /* \"#utility.yul\":17015:17018   */\n      dup3\n        /* \"#utility.yul\":17011:17023   */\n      add\n        /* \"#utility.yul\":17004:17023   */\n      swap1\n      pop\n        /* \"#utility.yul\":16663:17029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17035:17454   */\n    tag_190:\n        /* \"#utility.yul\":17201:17205   */\n      0x00\n        /* \"#utility.yul\":17239:17241   */\n      0x20\n        /* \"#utility.yul\":17228:17237   */\n      dup3\n        /* \"#utility.yul\":17224:17242   */\n      add\n        /* \"#utility.yul\":17216:17242   */\n      swap1\n      pop\n        /* \"#utility.yul\":17288:17297   */\n      dup2\n        /* \"#utility.yul\":17282:17286   */\n      dup2\n        /* \"#utility.yul\":17278:17298   */\n      sub\n        /* \"#utility.yul\":17274:17275   */\n      0x00\n        /* \"#utility.yul\":17263:17272   */\n      dup4\n        /* \"#utility.yul\":17259:17276   */\n      add\n        /* \"#utility.yul\":17252:17299   */\n      mstore\n        /* \"#utility.yul\":17316:17447   */\n      tag_604\n        /* \"#utility.yul\":17442:17446   */\n      dup2\n        /* \"#utility.yul\":17316:17447   */\n      tag_390\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":17308:17447   */\n      swap1\n      pop\n        /* \"#utility.yul\":17035:17454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17460:17640   */\n    tag_391:\n        /* \"#utility.yul\":17508:17585   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17505:17506   */\n      0x00\n        /* \"#utility.yul\":17498:17586   */\n      mstore\n        /* \"#utility.yul\":17605:17609   */\n      0x11\n        /* \"#utility.yul\":17602:17603   */\n      0x04\n        /* \"#utility.yul\":17595:17610   */\n      mstore\n        /* \"#utility.yul\":17629:17633   */\n      0x24\n        /* \"#utility.yul\":17626:17627   */\n      0x00\n        /* \"#utility.yul\":17619:17634   */\n      revert\n        /* \"#utility.yul\":17646:17879   */\n    tag_192:\n        /* \"#utility.yul\":17685:17688   */\n      0x00\n        /* \"#utility.yul\":17708:17732   */\n      tag_607\n        /* \"#utility.yul\":17726:17731   */\n      dup3\n        /* \"#utility.yul\":17708:17732   */\n      tag_357\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":17699:17732   */\n      swap2\n      pop\n        /* \"#utility.yul\":17754:17820   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17747:17752   */\n      dup3\n        /* \"#utility.yul\":17744:17821   */\n      sub\n        /* \"#utility.yul\":17741:17844   */\n      tag_608\n      jumpi\n        /* \"#utility.yul\":17824:17842   */\n      tag_609\n      tag_391\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":17741:17844   */\n    tag_608:\n        /* \"#utility.yul\":17871:17872   */\n      0x01\n        /* \"#utility.yul\":17864:17869   */\n      dup3\n        /* \"#utility.yul\":17860:17873   */\n      add\n        /* \"#utility.yul\":17853:17873   */\n      swap1\n      pop\n        /* \"#utility.yul\":17646:17879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17885:17983   */\n    tag_392:\n        /* \"#utility.yul\":17936:17942   */\n      0x00\n        /* \"#utility.yul\":17970:17975   */\n      dup2\n        /* \"#utility.yul\":17964:17976   */\n      mload\n        /* \"#utility.yul\":17954:17976   */\n      swap1\n      pop\n        /* \"#utility.yul\":17885:17983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17989:18157   */\n    tag_393:\n        /* \"#utility.yul\":18072:18083   */\n      0x00\n        /* \"#utility.yul\":18106:18112   */\n      dup3\n        /* \"#utility.yul\":18101:18104   */\n      dup3\n        /* \"#utility.yul\":18094:18113   */\n      mstore\n        /* \"#utility.yul\":18146:18150   */\n      0x20\n        /* \"#utility.yul\":18141:18144   */\n      dup3\n        /* \"#utility.yul\":18137:18151   */\n      add\n        /* \"#utility.yul\":18122:18151   */\n      swap1\n      pop\n        /* \"#utility.yul\":17989:18157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18163:18536   */\n    tag_394:\n        /* \"#utility.yul\":18249:18252   */\n      0x00\n        /* \"#utility.yul\":18277:18315   */\n      tag_613\n        /* \"#utility.yul\":18309:18314   */\n      dup3\n        /* \"#utility.yul\":18277:18315   */\n      tag_392\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":18331:18401   */\n      tag_614\n        /* \"#utility.yul\":18394:18400   */\n      dup2\n        /* \"#utility.yul\":18389:18392   */\n      dup6\n        /* \"#utility.yul\":18331:18401   */\n      tag_393\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":18324:18401   */\n      swap4\n      pop\n        /* \"#utility.yul\":18410:18475   */\n      tag_615\n        /* \"#utility.yul\":18468:18474   */\n      dup2\n        /* \"#utility.yul\":18463:18466   */\n      dup6\n        /* \"#utility.yul\":18456:18460   */\n      0x20\n        /* \"#utility.yul\":18449:18454   */\n      dup7\n        /* \"#utility.yul\":18445:18461   */\n      add\n        /* \"#utility.yul\":18410:18475   */\n      tag_354\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":18500:18529   */\n      tag_616\n        /* \"#utility.yul\":18522:18528   */\n      dup2\n        /* \"#utility.yul\":18500:18529   */\n      tag_355\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":18495:18498   */\n      dup5\n        /* \"#utility.yul\":18491:18530   */\n      add\n        /* \"#utility.yul\":18484:18530   */\n      swap2\n      pop\n        /* \"#utility.yul\":18253:18536   */\n      pop\n        /* \"#utility.yul\":18163:18536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18542:19182   */\n    tag_242:\n        /* \"#utility.yul\":18737:18741   */\n      0x00\n        /* \"#utility.yul\":18775:18778   */\n      0x80\n        /* \"#utility.yul\":18764:18773   */\n      dup3\n        /* \"#utility.yul\":18760:18779   */\n      add\n        /* \"#utility.yul\":18752:18779   */\n      swap1\n      pop\n        /* \"#utility.yul\":18789:18860   */\n      tag_618\n        /* \"#utility.yul\":18857:18858   */\n      0x00\n        /* \"#utility.yul\":18846:18855   */\n      dup4\n        /* \"#utility.yul\":18842:18859   */\n      add\n        /* \"#utility.yul\":18833:18839   */\n      dup8\n        /* \"#utility.yul\":18789:18860   */\n      tag_362\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":18870:18942   */\n      tag_619\n        /* \"#utility.yul\":18938:18940   */\n      0x20\n        /* \"#utility.yul\":18927:18936   */\n      dup4\n        /* \"#utility.yul\":18923:18941   */\n      add\n        /* \"#utility.yul\":18914:18920   */\n      dup7\n        /* \"#utility.yul\":18870:18942   */\n      tag_362\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":18952:19024   */\n      tag_620\n        /* \"#utility.yul\":19020:19022   */\n      0x40\n        /* \"#utility.yul\":19009:19018   */\n      dup4\n        /* \"#utility.yul\":19005:19023   */\n      add\n        /* \"#utility.yul\":18996:19002   */\n      dup6\n        /* \"#utility.yul\":18952:19024   */\n      tag_365\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":19071:19080   */\n      dup2\n        /* \"#utility.yul\":19065:19069   */\n      dup2\n        /* \"#utility.yul\":19061:19081   */\n      sub\n        /* \"#utility.yul\":19056:19058   */\n      0x60\n        /* \"#utility.yul\":19045:19054   */\n      dup4\n        /* \"#utility.yul\":19041:19059   */\n      add\n        /* \"#utility.yul\":19034:19082   */\n      mstore\n        /* \"#utility.yul\":19099:19175   */\n      tag_621\n        /* \"#utility.yul\":19170:19174   */\n      dup2\n        /* \"#utility.yul\":19161:19167   */\n      dup5\n        /* \"#utility.yul\":19099:19175   */\n      tag_394\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":19091:19175   */\n      swap1\n      pop\n        /* \"#utility.yul\":18542:19182   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19188:19329   */\n    tag_395:\n        /* \"#utility.yul\":19244:19249   */\n      0x00\n        /* \"#utility.yul\":19275:19281   */\n      dup2\n        /* \"#utility.yul\":19269:19282   */\n      mload\n        /* \"#utility.yul\":19260:19282   */\n      swap1\n      pop\n        /* \"#utility.yul\":19291:19323   */\n      tag_623\n        /* \"#utility.yul\":19317:19322   */\n      dup2\n        /* \"#utility.yul\":19291:19323   */\n      tag_348\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":19188:19329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19335:19684   */\n    tag_245:\n        /* \"#utility.yul\":19404:19410   */\n      0x00\n        /* \"#utility.yul\":19453:19455   */\n      0x20\n        /* \"#utility.yul\":19441:19450   */\n      dup3\n        /* \"#utility.yul\":19432:19439   */\n      dup5\n        /* \"#utility.yul\":19428:19451   */\n      sub\n        /* \"#utility.yul\":19424:19456   */\n      slt\n        /* \"#utility.yul\":19421:19540   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":19459:19538   */\n      tag_626\n      tag_345\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":19421:19540   */\n    tag_625:\n        /* \"#utility.yul\":19579:19580   */\n      0x00\n        /* \"#utility.yul\":19604:19667   */\n      tag_627\n        /* \"#utility.yul\":19659:19666   */\n      dup5\n        /* \"#utility.yul\":19650:19656   */\n      dup3\n        /* \"#utility.yul\":19639:19648   */\n      dup6\n        /* \"#utility.yul\":19635:19657   */\n      add\n        /* \"#utility.yul\":19604:19667   */\n      tag_395\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":19594:19667   */\n      swap2\n      pop\n        /* \"#utility.yul\":19550:19677   */\n      pop\n        /* \"#utility.yul\":19335:19684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19690:19831   */\n    tag_396:\n        /* \"#utility.yul\":19739:19743   */\n      0x00\n        /* \"#utility.yul\":19762:19765   */\n      dup2\n        /* \"#utility.yul\":19754:19765   */\n      swap1\n      pop\n        /* \"#utility.yul\":19785:19788   */\n      dup2\n        /* \"#utility.yul\":19782:19783   */\n      0x00\n        /* \"#utility.yul\":19775:19789   */\n      mstore\n        /* \"#utility.yul\":19819:19823   */\n      0x20\n        /* \"#utility.yul\":19816:19817   */\n      0x00\n        /* \"#utility.yul\":19806:19824   */\n      keccak256\n        /* \"#utility.yul\":19798:19824   */\n      swap1\n      pop\n        /* \"#utility.yul\":19690:19831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19837:19930   */\n    tag_397:\n        /* \"#utility.yul\":19874:19880   */\n      0x00\n        /* \"#utility.yul\":19921:19923   */\n      0x20\n        /* \"#utility.yul\":19916:19918   */\n      0x1f\n        /* \"#utility.yul\":19909:19914   */\n      dup4\n        /* \"#utility.yul\":19905:19919   */\n      add\n        /* \"#utility.yul\":19901:19924   */\n      div\n        /* \"#utility.yul\":19891:19924   */\n      swap1\n      pop\n        /* \"#utility.yul\":19837:19930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19936:20043   */\n    tag_398:\n        /* \"#utility.yul\":19980:19988   */\n      0x00\n        /* \"#utility.yul\":20030:20035   */\n      dup3\n        /* \"#utility.yul\":20024:20028   */\n      dup3\n        /* \"#utility.yul\":20020:20036   */\n      shl\n        /* \"#utility.yul\":19999:20036   */\n      swap1\n      pop\n        /* \"#utility.yul\":19936:20043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20049:20442   */\n    tag_399:\n        /* \"#utility.yul\":20118:20124   */\n      0x00\n        /* \"#utility.yul\":20168:20169   */\n      0x08\n        /* \"#utility.yul\":20156:20166   */\n      dup4\n        /* \"#utility.yul\":20152:20170   */\n      mul\n        /* \"#utility.yul\":20191:20288   */\n      tag_632\n        /* \"#utility.yul\":20221:20287   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20210:20219   */\n      dup3\n        /* \"#utility.yul\":20191:20288   */\n      tag_398\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":20309:20348   */\n      tag_633\n        /* \"#utility.yul\":20339:20347   */\n      dup7\n        /* \"#utility.yul\":20328:20337   */\n      dup4\n        /* \"#utility.yul\":20309:20348   */\n      tag_398\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":20297:20348   */\n      swap6\n      pop\n        /* \"#utility.yul\":20381:20385   */\n      dup1\n        /* \"#utility.yul\":20377:20386   */\n      not\n        /* \"#utility.yul\":20370:20375   */\n      dup5\n        /* \"#utility.yul\":20366:20387   */\n      and\n        /* \"#utility.yul\":20357:20387   */\n      swap4\n      pop\n        /* \"#utility.yul\":20430:20434   */\n      dup1\n        /* \"#utility.yul\":20420:20428   */\n      dup7\n        /* \"#utility.yul\":20416:20435   */\n      and\n        /* \"#utility.yul\":20409:20414   */\n      dup5\n        /* \"#utility.yul\":20406:20436   */\n      or\n        /* \"#utility.yul\":20396:20436   */\n      swap3\n      pop\n        /* \"#utility.yul\":20125:20442   */\n      pop\n      pop\n        /* \"#utility.yul\":20049:20442   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20448:20590   */\n    tag_400:\n        /* \"#utility.yul\":20498:20507   */\n      0x00\n        /* \"#utility.yul\":20531:20584   */\n      tag_635\n        /* \"#utility.yul\":20549:20583   */\n      tag_636\n        /* \"#utility.yul\":20558:20582   */\n      tag_637\n        /* \"#utility.yul\":20576:20581   */\n      dup5\n        /* \"#utility.yul\":20558:20582   */\n      tag_357\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":20549:20583   */\n      tag_379\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":20531:20584   */\n      tag_357\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":20518:20584   */\n      swap1\n      pop\n        /* \"#utility.yul\":20448:20590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20596:20671   */\n    tag_401:\n        /* \"#utility.yul\":20639:20642   */\n      0x00\n        /* \"#utility.yul\":20660:20665   */\n      dup2\n        /* \"#utility.yul\":20653:20665   */\n      swap1\n      pop\n        /* \"#utility.yul\":20596:20671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20677:20946   */\n    tag_402:\n        /* \"#utility.yul\":20787:20826   */\n      tag_640\n        /* \"#utility.yul\":20818:20825   */\n      dup4\n        /* \"#utility.yul\":20787:20826   */\n      tag_400\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":20848:20939   */\n      tag_641\n        /* \"#utility.yul\":20897:20938   */\n      tag_642\n        /* \"#utility.yul\":20921:20937   */\n      dup3\n        /* \"#utility.yul\":20897:20938   */\n      tag_401\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":20889:20895   */\n      dup5\n        /* \"#utility.yul\":20882:20886   */\n      dup5\n        /* \"#utility.yul\":20876:20887   */\n      sload\n        /* \"#utility.yul\":20848:20939   */\n      tag_399\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":20842:20846   */\n      dup3\n        /* \"#utility.yul\":20835:20940   */\n      sstore\n        /* \"#utility.yul\":20753:20946   */\n      pop\n        /* \"#utility.yul\":20677:20946   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20952:21025   */\n    tag_403:\n        /* \"#utility.yul\":20997:21000   */\n      0x00\n        /* \"#utility.yul\":20952:21025   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":21031:21220   */\n    tag_404:\n        /* \"#utility.yul\":21108:21140   */\n      tag_645\n      tag_403\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":21149:21214   */\n      tag_646\n        /* \"#utility.yul\":21207:21213   */\n      dup2\n        /* \"#utility.yul\":21199:21205   */\n      dup5\n        /* \"#utility.yul\":21193:21197   */\n      dup5\n        /* \"#utility.yul\":21149:21214   */\n      tag_402\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":21084:21220   */\n      pop\n        /* \"#utility.yul\":21031:21220   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21226:21412   */\n    tag_405:\n        /* \"#utility.yul\":21286:21406   */\n    tag_648:\n        /* \"#utility.yul\":21303:21306   */\n      dup2\n        /* \"#utility.yul\":21296:21301   */\n      dup2\n        /* \"#utility.yul\":21293:21307   */\n      lt\n        /* \"#utility.yul\":21286:21406   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":21357:21396   */\n      tag_651\n        /* \"#utility.yul\":21394:21395   */\n      0x00\n        /* \"#utility.yul\":21387:21392   */\n      dup3\n        /* \"#utility.yul\":21357:21396   */\n      tag_404\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":21330:21331   */\n      0x01\n        /* \"#utility.yul\":21323:21328   */\n      dup2\n        /* \"#utility.yul\":21319:21332   */\n      add\n        /* \"#utility.yul\":21310:21332   */\n      swap1\n      pop\n        /* \"#utility.yul\":21286:21406   */\n      jump(tag_648)\n    tag_650:\n        /* \"#utility.yul\":21226:21412   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21418:21961   */\n    tag_406:\n        /* \"#utility.yul\":21519:21521   */\n      0x1f\n        /* \"#utility.yul\":21514:21517   */\n      dup3\n        /* \"#utility.yul\":21511:21522   */\n      gt\n        /* \"#utility.yul\":21508:21954   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":21553:21591   */\n      tag_654\n        /* \"#utility.yul\":21585:21590   */\n      dup2\n        /* \"#utility.yul\":21553:21591   */\n      tag_396\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":21637:21666   */\n      tag_655\n        /* \"#utility.yul\":21655:21665   */\n      dup5\n        /* \"#utility.yul\":21637:21666   */\n      tag_397\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":21627:21635   */\n      dup2\n        /* \"#utility.yul\":21623:21667   */\n      add\n        /* \"#utility.yul\":21820:21822   */\n      0x20\n        /* \"#utility.yul\":21808:21818   */\n      dup6\n        /* \"#utility.yul\":21805:21823   */\n      lt\n        /* \"#utility.yul\":21802:21851   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":21841:21849   */\n      dup2\n        /* \"#utility.yul\":21826:21849   */\n      swap1\n      pop\n        /* \"#utility.yul\":21802:21851   */\n    tag_656:\n        /* \"#utility.yul\":21864:21944   */\n      tag_657\n        /* \"#utility.yul\":21920:21942   */\n      tag_658\n        /* \"#utility.yul\":21938:21941   */\n      dup6\n        /* \"#utility.yul\":21920:21942   */\n      tag_397\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":21910:21918   */\n      dup4\n        /* \"#utility.yul\":21906:21943   */\n      add\n        /* \"#utility.yul\":21893:21904   */\n      dup3\n        /* \"#utility.yul\":21864:21944   */\n      tag_405\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":21523:21954   */\n      pop\n      pop\n        /* \"#utility.yul\":21508:21954   */\n    tag_653:\n        /* \"#utility.yul\":21418:21961   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21967:22084   */\n    tag_407:\n        /* \"#utility.yul\":22021:22029   */\n      0x00\n        /* \"#utility.yul\":22071:22076   */\n      dup3\n        /* \"#utility.yul\":22065:22069   */\n      dup3\n        /* \"#utility.yul\":22061:22077   */\n      shr\n        /* \"#utility.yul\":22040:22077   */\n      swap1\n      pop\n        /* \"#utility.yul\":21967:22084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22090:22259   */\n    tag_408:\n        /* \"#utility.yul\":22134:22140   */\n      0x00\n        /* \"#utility.yul\":22167:22218   */\n      tag_661\n        /* \"#utility.yul\":22215:22216   */\n      0x00\n        /* \"#utility.yul\":22211:22217   */\n      not\n        /* \"#utility.yul\":22203:22208   */\n      dup5\n        /* \"#utility.yul\":22200:22201   */\n      0x08\n        /* \"#utility.yul\":22196:22209   */\n      mul\n        /* \"#utility.yul\":22167:22218   */\n      tag_407\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":22163:22219   */\n      not\n        /* \"#utility.yul\":22248:22252   */\n      dup1\n        /* \"#utility.yul\":22242:22246   */\n      dup4\n        /* \"#utility.yul\":22238:22253   */\n      and\n        /* \"#utility.yul\":22228:22253   */\n      swap2\n      pop\n        /* \"#utility.yul\":22141:22259   */\n      pop\n        /* \"#utility.yul\":22090:22259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22264:22559   */\n    tag_409:\n        /* \"#utility.yul\":22340:22344   */\n      0x00\n        /* \"#utility.yul\":22486:22515   */\n      tag_663\n        /* \"#utility.yul\":22511:22514   */\n      dup4\n        /* \"#utility.yul\":22505:22509   */\n      dup4\n        /* \"#utility.yul\":22486:22515   */\n      tag_408\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":22478:22515   */\n      swap2\n      pop\n        /* \"#utility.yul\":22548:22551   */\n      dup3\n        /* \"#utility.yul\":22545:22546   */\n      0x02\n        /* \"#utility.yul\":22541:22552   */\n      mul\n        /* \"#utility.yul\":22535:22539   */\n      dup3\n        /* \"#utility.yul\":22532:22553   */\n      or\n        /* \"#utility.yul\":22524:22553   */\n      swap1\n      pop\n        /* \"#utility.yul\":22264:22559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22564:23959   */\n    tag_272:\n        /* \"#utility.yul\":22681:22718   */\n      tag_665\n        /* \"#utility.yul\":22714:22717   */\n      dup3\n        /* \"#utility.yul\":22681:22718   */\n      tag_352\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":22783:22801   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":22775:22781   */\n      dup2\n        /* \"#utility.yul\":22772:22802   */\n      gt\n        /* \"#utility.yul\":22769:22825   */\n      iszero\n      tag_666\n      jumpi\n        /* \"#utility.yul\":22805:22823   */\n      tag_667\n      tag_300\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":22769:22825   */\n    tag_666:\n        /* \"#utility.yul\":22849:22887   */\n      tag_668\n        /* \"#utility.yul\":22881:22885   */\n      dup3\n        /* \"#utility.yul\":22875:22886   */\n      sload\n        /* \"#utility.yul\":22849:22887   */\n      tag_112\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":22934:23001   */\n      tag_669\n        /* \"#utility.yul\":22994:23000   */\n      dup3\n        /* \"#utility.yul\":22986:22992   */\n      dup3\n        /* \"#utility.yul\":22980:22984   */\n      dup6\n        /* \"#utility.yul\":22934:23001   */\n      tag_406\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":23028:23029   */\n      0x00\n        /* \"#utility.yul\":23052:23056   */\n      0x20\n        /* \"#utility.yul\":23039:23056   */\n      swap1\n      pop\n        /* \"#utility.yul\":23084:23086   */\n      0x1f\n        /* \"#utility.yul\":23076:23082   */\n      dup4\n        /* \"#utility.yul\":23073:23087   */\n      gt\n        /* \"#utility.yul\":23101:23102   */\n      0x01\n        /* \"#utility.yul\":23096:23714   */\n      dup2\n      eq\n      tag_671\n      jumpi\n        /* \"#utility.yul\":23758:23759   */\n      0x00\n        /* \"#utility.yul\":23775:23781   */\n      dup5\n        /* \"#utility.yul\":23772:23849   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":23824:23833   */\n      dup3\n        /* \"#utility.yul\":23819:23822   */\n      dup8\n        /* \"#utility.yul\":23815:23834   */\n      add\n        /* \"#utility.yul\":23809:23835   */\n      mload\n        /* \"#utility.yul\":23800:23835   */\n      swap1\n      pop\n        /* \"#utility.yul\":23772:23849   */\n    tag_672:\n        /* \"#utility.yul\":23875:23942   */\n      tag_673\n        /* \"#utility.yul\":23935:23941   */\n      dup6\n        /* \"#utility.yul\":23928:23933   */\n      dup3\n        /* \"#utility.yul\":23875:23942   */\n      tag_409\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":23869:23873   */\n      dup7\n        /* \"#utility.yul\":23862:23943   */\n      sstore\n        /* \"#utility.yul\":23731:23953   */\n      pop\n        /* \"#utility.yul\":23066:23953   */\n      jump(tag_670)\n        /* \"#utility.yul\":23096:23714   */\n    tag_671:\n        /* \"#utility.yul\":23148:23152   */\n      0x1f\n        /* \"#utility.yul\":23144:23153   */\n      not\n        /* \"#utility.yul\":23136:23142   */\n      dup5\n        /* \"#utility.yul\":23132:23154   */\n      and\n        /* \"#utility.yul\":23182:23219   */\n      tag_674\n        /* \"#utility.yul\":23214:23218   */\n      dup7\n        /* \"#utility.yul\":23182:23219   */\n      tag_396\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":23241:23242   */\n      0x00\n        /* \"#utility.yul\":23255:23463   */\n    tag_675:\n        /* \"#utility.yul\":23269:23276   */\n      dup3\n        /* \"#utility.yul\":23266:23267   */\n      dup2\n        /* \"#utility.yul\":23263:23277   */\n      lt\n        /* \"#utility.yul\":23255:23463   */\n      iszero\n      tag_677\n      jumpi\n        /* \"#utility.yul\":23348:23357   */\n      dup5\n        /* \"#utility.yul\":23343:23346   */\n      dup10\n        /* \"#utility.yul\":23339:23358   */\n      add\n        /* \"#utility.yul\":23333:23359   */\n      mload\n        /* \"#utility.yul\":23325:23331   */\n      dup3\n        /* \"#utility.yul\":23318:23360   */\n      sstore\n        /* \"#utility.yul\":23399:23400   */\n      0x01\n        /* \"#utility.yul\":23391:23397   */\n      dup3\n        /* \"#utility.yul\":23387:23401   */\n      add\n        /* \"#utility.yul\":23377:23401   */\n      swap2\n      pop\n        /* \"#utility.yul\":23446:23448   */\n      0x20\n        /* \"#utility.yul\":23435:23444   */\n      dup6\n        /* \"#utility.yul\":23431:23449   */\n      add\n        /* \"#utility.yul\":23418:23449   */\n      swap5\n      pop\n        /* \"#utility.yul\":23292:23296   */\n      0x20\n        /* \"#utility.yul\":23289:23290   */\n      dup2\n        /* \"#utility.yul\":23285:23297   */\n      add\n        /* \"#utility.yul\":23280:23297   */\n      swap1\n      pop\n        /* \"#utility.yul\":23255:23463   */\n      jump(tag_675)\n    tag_677:\n        /* \"#utility.yul\":23491:23497   */\n      dup7\n        /* \"#utility.yul\":23482:23489   */\n      dup4\n        /* \"#utility.yul\":23479:23498   */\n      lt\n        /* \"#utility.yul\":23476:23655   */\n      iszero\n      tag_678\n      jumpi\n        /* \"#utility.yul\":23549:23558   */\n      dup5\n        /* \"#utility.yul\":23544:23547   */\n      dup10\n        /* \"#utility.yul\":23540:23559   */\n      add\n        /* \"#utility.yul\":23534:23560   */\n      mload\n        /* \"#utility.yul\":23592:23640   */\n      tag_679\n        /* \"#utility.yul\":23634:23638   */\n      0x1f\n        /* \"#utility.yul\":23626:23632   */\n      dup10\n        /* \"#utility.yul\":23622:23639   */\n      and\n        /* \"#utility.yul\":23611:23620   */\n      dup3\n        /* \"#utility.yul\":23592:23640   */\n      tag_408\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":23584:23590   */\n      dup4\n        /* \"#utility.yul\":23577:23641   */\n      sstore\n        /* \"#utility.yul\":23499:23655   */\n      pop\n        /* \"#utility.yul\":23476:23655   */\n    tag_678:\n        /* \"#utility.yul\":23701:23702   */\n      0x01\n        /* \"#utility.yul\":23697:23698   */\n      0x02\n        /* \"#utility.yul\":23689:23695   */\n      dup9\n        /* \"#utility.yul\":23685:23699   */\n      mul\n        /* \"#utility.yul\":23681:23703   */\n      add\n        /* \"#utility.yul\":23675:23679   */\n      dup9\n        /* \"#utility.yul\":23668:23704   */\n      sstore\n        /* \"#utility.yul\":23103:23714   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23066:23953   */\n    tag_670:\n      pop\n        /* \"#utility.yul\":22656:23959   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22564:23959   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23965:24297   */\n    tag_294:\n        /* \"#utility.yul\":24086:24090   */\n      0x00\n        /* \"#utility.yul\":24124:24126   */\n      0x40\n        /* \"#utility.yul\":24113:24122   */\n      dup3\n        /* \"#utility.yul\":24109:24127   */\n      add\n        /* \"#utility.yul\":24101:24127   */\n      swap1\n      pop\n        /* \"#utility.yul\":24137:24208   */\n      tag_681\n        /* \"#utility.yul\":24205:24206   */\n      0x00\n        /* \"#utility.yul\":24194:24203   */\n      dup4\n        /* \"#utility.yul\":24190:24207   */\n      add\n        /* \"#utility.yul\":24181:24187   */\n      dup6\n        /* \"#utility.yul\":24137:24208   */\n      tag_362\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":24218:24290   */\n      tag_682\n        /* \"#utility.yul\":24286:24288   */\n      0x20\n        /* \"#utility.yul\":24275:24284   */\n      dup4\n        /* \"#utility.yul\":24271:24289   */\n      add\n        /* \"#utility.yul\":24262:24268   */\n      dup5\n        /* \"#utility.yul\":24218:24290   */\n      tag_365\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":23965:24297   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24303:24483   */\n    tag_306:\n        /* \"#utility.yul\":24351:24428   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24348:24349   */\n      0x00\n        /* \"#utility.yul\":24341:24429   */\n      mstore\n        /* \"#utility.yul\":24448:24452   */\n      0x12\n        /* \"#utility.yul\":24445:24446   */\n      0x04\n        /* \"#utility.yul\":24438:24453   */\n      mstore\n        /* \"#utility.yul\":24472:24476   */\n      0x24\n        /* \"#utility.yul\":24469:24470   */\n      0x00\n        /* \"#utility.yul\":24462:24477   */\n      revert\n\n    auxdata: 0xa2646970667358221220d6354318d3bd023da9107a00b49d88542ee7e1547771ed2fd2a6c4d5acce439e64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3158": {
									"entryPoint": null,
									"id": 3158,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 302,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:18",
										"nodeType": "YulBlock",
										"src": "0:5817:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:18",
													"nodeType": "YulBlock",
													"src": "66:40:18",
													"statements": [
														{
															"nativeSrc": "77:22:18",
															"nodeType": "YulAssignment",
															"src": "77:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:18"
																},
																"nativeSrc": "87:12:18",
																"nodeType": "YulFunctionCall",
																"src": "87:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:18",
														"nodeType": "YulTypedName",
														"src": "49:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:18",
														"nodeType": "YulTypedName",
														"src": "59:6:18",
														"type": ""
													}
												],
												"src": "7:99:18"
											},
											{
												"body": {
													"nativeSrc": "140:152:18",
													"nodeType": "YulBlock",
													"src": "140:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:18",
																		"nodeType": "YulLiteral",
																		"src": "157:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:18",
																		"nodeType": "YulLiteral",
																		"src": "160:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:18"
																},
																"nativeSrc": "150:88:18",
																"nodeType": "YulFunctionCall",
																"src": "150:88:18"
															},
															"nativeSrc": "150:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:18",
																		"nodeType": "YulLiteral",
																		"src": "254:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:18",
																		"nodeType": "YulLiteral",
																		"src": "257:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:18"
																},
																"nativeSrc": "247:15:18",
																"nodeType": "YulFunctionCall",
																"src": "247:15:18"
															},
															"nativeSrc": "247:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:18",
																		"nodeType": "YulLiteral",
																		"src": "278:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:18",
																		"nodeType": "YulLiteral",
																		"src": "281:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:18"
																},
																"nativeSrc": "271:15:18",
																"nodeType": "YulFunctionCall",
																"src": "271:15:18"
															},
															"nativeSrc": "271:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:18"
											},
											{
												"body": {
													"nativeSrc": "326:152:18",
													"nodeType": "YulBlock",
													"src": "326:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:18",
																		"nodeType": "YulLiteral",
																		"src": "343:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:18",
																		"nodeType": "YulLiteral",
																		"src": "346:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:18"
																},
																"nativeSrc": "336:88:18",
																"nodeType": "YulFunctionCall",
																"src": "336:88:18"
															},
															"nativeSrc": "336:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:18",
																		"nodeType": "YulLiteral",
																		"src": "440:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:18",
																		"nodeType": "YulLiteral",
																		"src": "443:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:18"
																},
																"nativeSrc": "433:15:18",
																"nodeType": "YulFunctionCall",
																"src": "433:15:18"
															},
															"nativeSrc": "433:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:18",
																		"nodeType": "YulLiteral",
																		"src": "464:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:18",
																		"nodeType": "YulLiteral",
																		"src": "467:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:18"
																},
																"nativeSrc": "457:15:18",
																"nodeType": "YulFunctionCall",
																"src": "457:15:18"
															},
															"nativeSrc": "457:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:18"
											},
											{
												"body": {
													"nativeSrc": "535:269:18",
													"nodeType": "YulBlock",
													"src": "535:269:18",
													"statements": [
														{
															"nativeSrc": "545:22:18",
															"nodeType": "YulAssignment",
															"src": "545:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:18",
																		"nodeType": "YulLiteral",
																		"src": "565:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:18"
																},
																"nativeSrc": "555:12:18",
																"nodeType": "YulFunctionCall",
																"src": "555:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:18"
																}
															]
														},
														{
															"nativeSrc": "576:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:18",
																		"nodeType": "YulLiteral",
																		"src": "612:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:18"
																},
																"nativeSrc": "602:12:18",
																"nodeType": "YulFunctionCall",
																"src": "602:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:18",
																	"nodeType": "YulTypedName",
																	"src": "580:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:18",
																"nodeType": "YulBlock",
																"src": "653:51:18",
																"statements": [
																	{
																		"nativeSrc": "667:27:18",
																		"nodeType": "YulAssignment",
																		"src": "667:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:18",
																					"nodeType": "YulLiteral",
																					"src": "689:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:18"
																			},
																			"nativeSrc": "677:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:18"
																},
																"nativeSrc": "626:26:18",
																"nodeType": "YulFunctionCall",
																"src": "626:26:18"
															},
															"nativeSrc": "623:81:18",
															"nodeType": "YulIf",
															"src": "623:81:18"
														},
														{
															"body": {
																"nativeSrc": "756:42:18",
																"nodeType": "YulBlock",
																"src": "756:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:18"
																			},
																			"nativeSrc": "770:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:18"
																		},
																		"nativeSrc": "770:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:18",
																				"nodeType": "YulLiteral",
																				"src": "751:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:18"
																		},
																		"nativeSrc": "740:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:18"
																},
																"nativeSrc": "717:38:18",
																"nodeType": "YulFunctionCall",
																"src": "717:38:18"
															},
															"nativeSrc": "714:84:18",
															"nodeType": "YulIf",
															"src": "714:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:18",
														"nodeType": "YulTypedName",
														"src": "519:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:18",
														"nodeType": "YulTypedName",
														"src": "528:6:18",
														"type": ""
													}
												],
												"src": "484:320:18"
											},
											{
												"body": {
													"nativeSrc": "864:87:18",
													"nodeType": "YulBlock",
													"src": "864:87:18",
													"statements": [
														{
															"nativeSrc": "874:11:18",
															"nodeType": "YulAssignment",
															"src": "874:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:18",
																"nodeType": "YulIdentifier",
																"src": "882:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:18",
																		"nodeType": "YulLiteral",
																		"src": "902:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:18"
																},
																"nativeSrc": "895:14:18",
																"nodeType": "YulFunctionCall",
																"src": "895:14:18"
															},
															"nativeSrc": "895:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:18"
														},
														{
															"nativeSrc": "918:26:18",
															"nodeType": "YulAssignment",
															"src": "918:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:18",
																		"nodeType": "YulLiteral",
																		"src": "936:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:18",
																		"nodeType": "YulLiteral",
																		"src": "939:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:18"
																},
																"nativeSrc": "926:18:18",
																"nodeType": "YulFunctionCall",
																"src": "926:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:18",
														"nodeType": "YulTypedName",
														"src": "851:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:18",
														"nodeType": "YulTypedName",
														"src": "859:4:18",
														"type": ""
													}
												],
												"src": "810:141:18"
											},
											{
												"body": {
													"nativeSrc": "1001:49:18",
													"nodeType": "YulBlock",
													"src": "1001:49:18",
													"statements": [
														{
															"nativeSrc": "1011:33:18",
															"nodeType": "YulAssignment",
															"src": "1011:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:18"
																		},
																		"nativeSrc": "1025:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:18"
																},
																"nativeSrc": "1021:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:18",
														"nodeType": "YulTypedName",
														"src": "984:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:18",
														"nodeType": "YulTypedName",
														"src": "994:6:18",
														"type": ""
													}
												],
												"src": "957:93:18"
											},
											{
												"body": {
													"nativeSrc": "1109:54:18",
													"nodeType": "YulBlock",
													"src": "1109:54:18",
													"statements": [
														{
															"nativeSrc": "1119:37:18",
															"nodeType": "YulAssignment",
															"src": "1119:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:18"
																},
																"nativeSrc": "1140:16:18",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:18",
														"nodeType": "YulTypedName",
														"src": "1084:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:18",
														"nodeType": "YulTypedName",
														"src": "1090:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:18",
														"nodeType": "YulTypedName",
														"src": "1100:8:18",
														"type": ""
													}
												],
												"src": "1056:107:18"
											},
											{
												"body": {
													"nativeSrc": "1245:317:18",
													"nodeType": "YulBlock",
													"src": "1245:317:18",
													"statements": [
														{
															"nativeSrc": "1255:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:18"
																},
																"nativeSrc": "1272:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:18",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:18",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:18"
																},
																"nativeSrc": "1311:97:18",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:18",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:18",
															"nodeType": "YulAssignment",
															"src": "1417:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:18"
																},
																"nativeSrc": "1429:39:18",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:18"
																}
															]
														},
														{
															"nativeSrc": "1477:30:18",
															"nodeType": "YulAssignment",
															"src": "1477:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:18"
																		},
																		"nativeSrc": "1497:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:18"
																},
																"nativeSrc": "1486:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:18"
																}
															]
														},
														{
															"nativeSrc": "1516:40:18",
															"nodeType": "YulAssignment",
															"src": "1516:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:18"
																		},
																		"nativeSrc": "1536:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:18"
																},
																"nativeSrc": "1526:30:18",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:18",
														"nodeType": "YulTypedName",
														"src": "1206:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:18",
														"nodeType": "YulTypedName",
														"src": "1213:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:18",
														"nodeType": "YulTypedName",
														"src": "1225:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:18",
														"nodeType": "YulTypedName",
														"src": "1238:6:18",
														"type": ""
													}
												],
												"src": "1169:393:18"
											},
											{
												"body": {
													"nativeSrc": "1613:32:18",
													"nodeType": "YulBlock",
													"src": "1613:32:18",
													"statements": [
														{
															"nativeSrc": "1623:16:18",
															"nodeType": "YulAssignment",
															"src": "1623:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:18",
																"nodeType": "YulIdentifier",
																"src": "1634:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:18",
														"nodeType": "YulTypedName",
														"src": "1595:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:18",
														"nodeType": "YulTypedName",
														"src": "1605:7:18",
														"type": ""
													}
												],
												"src": "1568:77:18"
											},
											{
												"body": {
													"nativeSrc": "1683:28:18",
													"nodeType": "YulBlock",
													"src": "1683:28:18",
													"statements": [
														{
															"nativeSrc": "1693:12:18",
															"nodeType": "YulAssignment",
															"src": "1693:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:18",
																"nodeType": "YulIdentifier",
																"src": "1700:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:18",
														"nodeType": "YulTypedName",
														"src": "1669:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:18",
														"nodeType": "YulTypedName",
														"src": "1679:3:18",
														"type": ""
													}
												],
												"src": "1651:60:18"
											},
											{
												"body": {
													"nativeSrc": "1777:82:18",
													"nodeType": "YulBlock",
													"src": "1777:82:18",
													"statements": [
														{
															"nativeSrc": "1787:66:18",
															"nodeType": "YulAssignment",
															"src": "1787:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:18"
																				},
																				"nativeSrc": "1827:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:18"
																		},
																		"nativeSrc": "1818:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:18"
																},
																"nativeSrc": "1800:53:18",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:18",
														"nodeType": "YulTypedName",
														"src": "1757:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:18",
														"nodeType": "YulTypedName",
														"src": "1767:9:18",
														"type": ""
													}
												],
												"src": "1717:142:18"
											},
											{
												"body": {
													"nativeSrc": "1912:28:18",
													"nodeType": "YulBlock",
													"src": "1912:28:18",
													"statements": [
														{
															"nativeSrc": "1922:12:18",
															"nodeType": "YulAssignment",
															"src": "1922:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:18",
																"nodeType": "YulIdentifier",
																"src": "1929:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:18",
														"nodeType": "YulTypedName",
														"src": "1898:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:18",
														"nodeType": "YulTypedName",
														"src": "1908:3:18",
														"type": ""
													}
												],
												"src": "1865:75:18"
											},
											{
												"body": {
													"nativeSrc": "2022:193:18",
													"nodeType": "YulBlock",
													"src": "2022:193:18",
													"statements": [
														{
															"nativeSrc": "2032:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:18"
																},
																"nativeSrc": "2056:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:18",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:18"
																				},
																				"nativeSrc": "2145:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:18"
																				},
																				"nativeSrc": "2166:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:18"
																		},
																		"nativeSrc": "2117:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:18"
																},
																"nativeSrc": "2104:105:18",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:18"
															},
															"nativeSrc": "2104:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:18",
														"nodeType": "YulTypedName",
														"src": "1999:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:18",
														"nodeType": "YulTypedName",
														"src": "2005:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:18",
														"nodeType": "YulTypedName",
														"src": "2013:7:18",
														"type": ""
													}
												],
												"src": "1946:269:18"
											},
											{
												"body": {
													"nativeSrc": "2270:24:18",
													"nodeType": "YulBlock",
													"src": "2270:24:18",
													"statements": [
														{
															"nativeSrc": "2280:8:18",
															"nodeType": "YulAssignment",
															"src": "2280:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:18",
																"nodeType": "YulLiteral",
																"src": "2287:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:18",
														"nodeType": "YulTypedName",
														"src": "2266:3:18",
														"type": ""
													}
												],
												"src": "2221:73:18"
											},
											{
												"body": {
													"nativeSrc": "2353:136:18",
													"nodeType": "YulBlock",
													"src": "2353:136:18",
													"statements": [
														{
															"nativeSrc": "2363:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:18"
																},
																"nativeSrc": "2377:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:18"
																},
																"nativeSrc": "2418:65:18",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:18"
															},
															"nativeSrc": "2418:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:18",
														"nodeType": "YulTypedName",
														"src": "2339:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:18",
														"nodeType": "YulTypedName",
														"src": "2345:6:18",
														"type": ""
													}
												],
												"src": "2300:189:18"
											},
											{
												"body": {
													"nativeSrc": "2545:136:18",
													"nodeType": "YulBlock",
													"src": "2545:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:18",
																"nodeType": "YulBlock",
																"src": "2612:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:18"
																			},
																			"nativeSrc": "2626:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:18"
																		},
																		"nativeSrc": "2626:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:18"
																},
																"nativeSrc": "2562:14:18",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:18"
															},
															"nativeSrc": "2555:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:18",
																"nodeType": "YulBlock",
																"src": "2577:26:18",
																"statements": [
																	{
																		"nativeSrc": "2579:22:18",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:18"
																			},
																			"nativeSrc": "2588:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:18",
																"nodeType": "YulBlock",
																"src": "2559:2:18",
																"statements": []
															},
															"src": "2555:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:18",
														"nodeType": "YulTypedName",
														"src": "2533:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:18",
														"nodeType": "YulTypedName",
														"src": "2540:3:18",
														"type": ""
													}
												],
												"src": "2495:186:18"
											},
											{
												"body": {
													"nativeSrc": "2766:464:18",
													"nodeType": "YulBlock",
													"src": "2766:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:18",
																"nodeType": "YulBlock",
																"src": "2792:431:18",
																"statements": [
																	{
																		"nativeSrc": "2806:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:18"
																			},
																			"nativeSrc": "2822:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:18",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:18"
																					},
																					"nativeSrc": "2906:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:18"
																			},
																			"nativeSrc": "2892:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:18",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:18",
																			"nodeType": "YulBlock",
																			"src": "3093:27:18",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:18",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:18",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:18"
																			},
																			"nativeSrc": "3074:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:18"
																		},
																		"nativeSrc": "3071:49:18",
																		"nodeType": "YulIf",
																		"src": "3071:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:18"
																							},
																							"nativeSrc": "3189:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:18"
																					},
																					"nativeSrc": "3175:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:18"
																			},
																			"nativeSrc": "3133:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:18"
																		},
																		"nativeSrc": "3133:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:18"
																},
																"nativeSrc": "2780:11:18",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:18"
															},
															"nativeSrc": "2777:446:18",
															"nodeType": "YulIf",
															"src": "2777:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:18",
														"nodeType": "YulTypedName",
														"src": "2742:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:18",
														"nodeType": "YulTypedName",
														"src": "2749:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:18",
														"nodeType": "YulTypedName",
														"src": "2754:10:18",
														"type": ""
													}
												],
												"src": "2687:543:18"
											},
											{
												"body": {
													"nativeSrc": "3299:54:18",
													"nodeType": "YulBlock",
													"src": "3299:54:18",
													"statements": [
														{
															"nativeSrc": "3309:37:18",
															"nodeType": "YulAssignment",
															"src": "3309:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:18"
																},
																"nativeSrc": "3330:16:18",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:18",
														"nodeType": "YulTypedName",
														"src": "3274:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:18",
														"nodeType": "YulTypedName",
														"src": "3280:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:18",
														"nodeType": "YulTypedName",
														"src": "3290:8:18",
														"type": ""
													}
												],
												"src": "3236:117:18"
											},
											{
												"body": {
													"nativeSrc": "3410:118:18",
													"nodeType": "YulBlock",
													"src": "3410:118:18",
													"statements": [
														{
															"nativeSrc": "3420:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:18",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:18"
																				},
																				"nativeSrc": "3465:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:18",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:18"
																				},
																				"nativeSrc": "3480:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:18"
																		},
																		"nativeSrc": "3436:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:18"
																},
																"nativeSrc": "3432:56:18",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:18",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:18",
															"nodeType": "YulAssignment",
															"src": "3497:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:18"
																},
																"nativeSrc": "3507:15:18",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:18",
														"nodeType": "YulTypedName",
														"src": "3387:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:18",
														"nodeType": "YulTypedName",
														"src": "3393:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:18",
														"nodeType": "YulTypedName",
														"src": "3403:6:18",
														"type": ""
													}
												],
												"src": "3359:169:18"
											},
											{
												"body": {
													"nativeSrc": "3614:214:18",
													"nodeType": "YulBlock",
													"src": "3614:214:18",
													"statements": [
														{
															"nativeSrc": "3747:37:18",
															"nodeType": "YulAssignment",
															"src": "3747:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:18"
																},
																"nativeSrc": "3755:29:18",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:18"
																}
															]
														},
														{
															"nativeSrc": "3793:29:18",
															"nodeType": "YulAssignment",
															"src": "3793:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:18",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:18"
																		},
																		"nativeSrc": "3810:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:18"
																},
																"nativeSrc": "3801:21:18",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:18",
														"nodeType": "YulTypedName",
														"src": "3595:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:18",
														"nodeType": "YulTypedName",
														"src": "3601:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:18",
														"nodeType": "YulTypedName",
														"src": "3609:4:18",
														"type": ""
													}
												],
												"src": "3533:295:18"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:18",
													"nodeType": "YulBlock",
													"src": "3925:1303:18",
													"statements": [
														{
															"nativeSrc": "3936:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:18"
																},
																"nativeSrc": "3950:37:18",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:18",
																"nodeType": "YulBlock",
																"src": "4072:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:18"
																			},
																			"nativeSrc": "4074:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:18"
																		},
																		"nativeSrc": "4074:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:18",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:18"
																},
																"nativeSrc": "4041:30:18",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:18"
															},
															"nativeSrc": "4038:56:18",
															"nodeType": "YulIf",
															"src": "4038:56:18"
														},
														{
															"nativeSrc": "4104:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:18"
																		},
																		"nativeSrc": "4144:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:18"
																},
																"nativeSrc": "4118:38:18",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:18",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:18"
																},
																"nativeSrc": "4203:67:18",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:18"
															},
															"nativeSrc": "4203:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:18"
														},
														{
															"nativeSrc": "4280:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:18",
																"nodeType": "YulLiteral",
																"src": "4297:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:18",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:18",
															"nodeType": "YulAssignment",
															"src": "4308:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:18",
																"nodeType": "YulLiteral",
																"src": "4321:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:18",
																		"nodeType": "YulBlock",
																		"src": "4372:611:18",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:18",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:18"
																							},
																							"nativeSrc": "4413:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:18"
																					},
																					"nativeSrc": "4401:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:18",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:18"
																					},
																					"nativeSrc": "4451:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:18",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:18",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:18",
																					"nodeType": "YulBlock",
																					"src": "4569:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:18"
																												},
																												"nativeSrc": "4608:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:18"
																										},
																										"nativeSrc": "4602:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:18"
																								},
																								"nativeSrc": "4587:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:18"
																							},
																							"nativeSrc": "4587:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:18"
																						},
																						{
																							"nativeSrc": "4646:24:18",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:18",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:18"
																								},
																								"nativeSrc": "4656:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:18",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:18",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:18"
																								},
																								"nativeSrc": "4700:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:18"
																					},
																					"nativeSrc": "4532:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:18"
																				},
																				"nativeSrc": "4524:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:18",
																					"nodeType": "YulBlock",
																					"src": "4547:21:18",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:18",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:18",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:18"
																								},
																								"nativeSrc": "4554:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:18",
																					"nodeType": "YulBlock",
																					"src": "4528:3:18",
																					"statements": []
																				},
																				"src": "4524:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:18",
																					"nodeType": "YulBlock",
																					"src": "4768:156:18",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:18"
																										},
																										"nativeSrc": "4809:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:18"
																								},
																								"nativeSrc": "4803:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:18",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:18",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:18"
																												},
																												"nativeSrc": "4891:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:18"
																										},
																										"nativeSrc": "4861:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:18"
																								},
																								"nativeSrc": "4846:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:18"
																							},
																							"nativeSrc": "4846:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:18"
																					},
																					"nativeSrc": "4748:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:18"
																				},
																				"nativeSrc": "4745:179:18",
																				"nodeType": "YulIf",
																				"src": "4745:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:18",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:18"
																									},
																									"nativeSrc": "4954:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:18",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:18"
																							},
																							"nativeSrc": "4950:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:18"
																					},
																					"nativeSrc": "4937:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:18"
																				},
																				"nativeSrc": "4937:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:18"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:18",
																	"nodeType": "YulCase",
																	"src": "4365:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:18",
																		"nodeType": "YulBlock",
																		"src": "5000:222:18",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:18",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:18",
																					"nodeType": "YulBlock",
																					"src": "5051:67:18",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:18",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:18"
																										},
																										"nativeSrc": "5084:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:18"
																								},
																								"nativeSrc": "5078:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:18"
																				},
																				"nativeSrc": "5041:77:18",
																				"nodeType": "YulIf",
																				"src": "5041:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:18"
																							},
																							"nativeSrc": "5144:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:18"
																					},
																					"nativeSrc": "5131:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:18"
																				},
																				"nativeSrc": "5131:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:18"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:18",
																	"nodeType": "YulCase",
																	"src": "4992:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:18"
																},
																"nativeSrc": "4342:14:18",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:18"
															},
															"nativeSrc": "4335:887:18",
															"nodeType": "YulSwitch",
															"src": "4335:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:18",
														"nodeType": "YulTypedName",
														"src": "3914:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:18",
														"nodeType": "YulTypedName",
														"src": "3920:3:18",
														"type": ""
													}
												],
												"src": "3833:1395:18"
											},
											{
												"body": {
													"nativeSrc": "5279:81:18",
													"nodeType": "YulBlock",
													"src": "5279:81:18",
													"statements": [
														{
															"nativeSrc": "5289:65:18",
															"nodeType": "YulAssignment",
															"src": "5289:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:18",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:18"
																},
																"nativeSrc": "5300:54:18",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:18",
														"nodeType": "YulTypedName",
														"src": "5261:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:18",
														"nodeType": "YulTypedName",
														"src": "5271:7:18",
														"type": ""
													}
												],
												"src": "5234:126:18"
											},
											{
												"body": {
													"nativeSrc": "5411:51:18",
													"nodeType": "YulBlock",
													"src": "5411:51:18",
													"statements": [
														{
															"nativeSrc": "5421:35:18",
															"nodeType": "YulAssignment",
															"src": "5421:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:18"
																},
																"nativeSrc": "5432:24:18",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:18",
														"nodeType": "YulTypedName",
														"src": "5393:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:18",
														"nodeType": "YulTypedName",
														"src": "5403:7:18",
														"type": ""
													}
												],
												"src": "5366:96:18"
											},
											{
												"body": {
													"nativeSrc": "5533:53:18",
													"nodeType": "YulBlock",
													"src": "5533:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:18"
																		},
																		"nativeSrc": "5555:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:18"
																},
																"nativeSrc": "5543:37:18",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:18"
															},
															"nativeSrc": "5543:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:18",
														"nodeType": "YulTypedName",
														"src": "5521:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:18",
														"nodeType": "YulTypedName",
														"src": "5528:3:18",
														"type": ""
													}
												],
												"src": "5468:118:18"
											},
											{
												"body": {
													"nativeSrc": "5690:124:18",
													"nodeType": "YulBlock",
													"src": "5690:124:18",
													"statements": [
														{
															"nativeSrc": "5700:26:18",
															"nodeType": "YulAssignment",
															"src": "5700:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:18"
																},
																"nativeSrc": "5708:18:18",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:18",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:18"
																		},
																		"nativeSrc": "5789:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:18"
																},
																"nativeSrc": "5736:71:18",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:18"
															},
															"nativeSrc": "5736:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:18",
														"nodeType": "YulTypedName",
														"src": "5662:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:18",
														"nodeType": "YulTypedName",
														"src": "5674:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:18",
														"nodeType": "YulTypedName",
														"src": "5685:4:18",
														"type": ""
													}
												],
												"src": "5592:222:18"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50336040518060400160405280600c81526020017f5261774d6174657269616c7300000000000000000000000000000000000000008152506040518060400160405280600281526020017f524d000000000000000000000000000000000000000000000000000000000000815250815f90816200008e919062000455565b508060019081620000a0919062000455565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000116575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200010d91906200057c565b60405180910390fd5b62000127816200012e60201b60201c565b5062000597565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200026d57607f821691505b60208210810362000283576200028262000228565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002aa565b620002f38683620002aa565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200033d6200033762000331846200030b565b62000314565b6200030b565b9050919050565b5f819050919050565b62000358836200031d565b62000370620003678262000344565b848454620002b6565b825550505050565b5f90565b6200038662000378565b620003938184846200034d565b505050565b5b81811015620003ba57620003ae5f826200037c565b60018101905062000399565b5050565b601f8211156200040957620003d38162000289565b620003de846200029b565b81016020851015620003ee578190505b62000406620003fd856200029b565b83018262000398565b50505b505050565b5f82821c905092915050565b5f6200042b5f19846008026200040e565b1980831691505092915050565b5f6200044583836200041a565b9150826002028217905092915050565b6200046082620001f1565b67ffffffffffffffff8111156200047c576200047b620001fb565b5b62000488825462000255565b62000495828285620003be565b5f60209050601f831160018114620004cb575f8415620004b6578287015190505b620004c2858262000438565b86555062000531565b601f198416620004db8662000289565b5f5b828110156200050457848901518255600182019150602085019450602081019050620004dd565b8683101562000524578489015162000520601f8916826200041a565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620005648262000539565b9050919050565b620005768162000558565b82525050565b5f602082019050620005915f8301846200056b565b92915050565b61290180620005a55f395ff3fe608060405234801561000f575f80fd5b506004361061012a575f3560e01c80638da5cb5b116100ab578063c87b56dd1161006f578063c87b56dd14610318578063d85d3d2714610348578063e985e9c514610378578063f0f9ee46146103a8578063f2fde38b146103c65761012a565b80638da5cb5b1461028657806395d89b41146102a45780639f181b5e146102c2578063a22cb465146102e0578063b88d4fde146102fc5761012a565b806323b872dd116100f257806323b872dd146101e457806342842e0e146102005780636352211e1461021c57806370a082311461024c578063715018a61461027c5761012a565b806301ffc9a71461012e57806306fdde031461015e578063081812fc1461017c578063095ea7b3146101ac5780630fffc4cf146101c8575b5f80fd5b61014860048036038101906101439190611c1f565b6103e2565b6040516101559190611c64565b60405180910390f35b610166610442565b6040516101739190611d07565b60405180910390f35b61019660048036038101906101919190611d5a565b6104d1565b6040516101a39190611dc4565b60405180910390f35b6101c660048036038101906101c19190611e07565b6104ec565b005b6101e260048036038101906101dd9190611e45565b610502565b005b6101fe60048036038101906101f99190611e70565b61054d565b005b61021a60048036038101906102159190611e70565b61064c565b005b61023660048036038101906102319190611d5a565b61066b565b6040516102439190611dc4565b60405180910390f35b61026660048036038101906102619190611e45565b61067c565b6040516102739190611ecf565b60405180910390f35b610284610732565b005b61028e610745565b60405161029b9190611dc4565b60405180910390f35b6102ac61076d565b6040516102b99190611d07565b60405180910390f35b6102ca6107fd565b6040516102d79190611ecf565b60405180910390f35b6102fa60048036038101906102f59190611f12565b610803565b005b6103166004803603810190610311919061207c565b610819565b005b610332600480360381019061032d9190611d5a565b610836565b60405161033f9190611d07565b60405180910390f35b610362600480360381019061035d919061219a565b610941565b60405161036f9190611ecf565b60405180910390f35b610392600480360381019061038d91906121e1565b610a59565b60405161039f9190611c64565b60405180910390f35b6103b0610ae7565b6040516103bd919061227a565b60405180910390f35b6103e060048036038101906103db9190611e45565b610b0c565b005b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043b575061043a82610b90565b5b9050919050565b60605f8054610450906122c0565b80601f016020809104026020016040519081016040528092919081815260200182805461047c906122c0565b80156104c75780601f1061049e576101008083540402835291602001916104c7565b820191905f5260205f20905b8154815290600101906020018083116104aa57829003601f168201915b5050505050905090565b5f6104db82610c71565b506104e582610cf7565b9050919050565b6104fe82826104f9610d30565b610d37565b5050565b61050a610d49565b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105bd575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105b49190611dc4565b60405180910390fd5b5f6105d083836105cb610d30565b610dd0565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610646578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161063d939291906122f0565b60405180910390fd5b50505050565b61066683838360405180602001604052805f815250610819565b505050565b5f61067582610c71565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106ed575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106e49190611dc4565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61073a610d49565b6107435f610fdb565b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461077c906122c0565b80601f01602080910402602001604051908101604052809291908181526020018280546107a8906122c0565b80156107f35780601f106107ca576101008083540402835291602001916107f3565b820191905f5260205f20905b8154815290600101906020018083116107d657829003601f168201915b5050505050905090565b60085481565b61081561080e610d30565b838361109e565b5050565b61082484848461054d565b61083084848484611207565b50505050565b606061084182610c71565b505f60065f8481526020019081526020015f20805461085f906122c0565b80601f016020809104026020016040519081016040528092919081815260200182805461088b906122c0565b80156108d65780601f106108ad576101008083540402835291602001916108d6565b820191905f5260205f20905b8154815290600101906020018083116108b957829003601f168201915b505050505090505f6108e66113b9565b90505f8151036108fa57819250505061093c565b5f8251111561092e57808260405160200161091692919061235f565b6040516020818303038152906040529250505061093c565b610937846113cf565b925050505b919050565b5f8060095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634b297269336040518263ffffffff1660e01b815260040161099d9190611dc4565b5f60405180830381865afa1580156109b7573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906109df91906123f0565b5103610a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a17906124a7565b60405180910390fd5b60085f815480929190610a32906124f2565b9190505550610a4333600854611435565b610a4f60085483611452565b6008549050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b14610d49565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b84575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b7b9190611dc4565b60405180910390fd5b610b8d81610fdb565b50565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c5a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610c6a5750610c69826114ac565b5b9050919050565b5f80610c7c83611515565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cee57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ce59190611ecf565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610d44838383600161154e565b505050565b610d51610d30565b73ffffffffffffffffffffffffffffffffffffffff16610d6f610745565b73ffffffffffffffffffffffffffffffffffffffff1614610dce57610d92610d30565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dc59190611dc4565b60405180910390fd5b565b5f80610ddb84611515565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e1c57610e1b81848661170d565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ea757610e5b5f855f8061154e565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f2657600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361110e57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016111059190611dc4565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111fa9190611c64565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156113b3578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261124a610d30565b8685856040518563ffffffff1660e01b815260040161126c949392919061258b565b6020604051808303815f875af19250505080156112a757506040513d601f19601f820116820180604052508101906112a491906125e9565b60015b611328573d805f81146112d5576040519150601f19603f3d011682016040523d82523d5f602084013e6112da565b606091505b505f81510361132057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113179190611dc4565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113b157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113a89190611dc4565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60606113da82610c71565b505f6113e46113b9565b90505f8151116114025760405180602001604052805f81525061142d565b8061140c846117d0565b60405160200161141d92919061235f565b6040516020818303038152906040525b915050919050565b61144e828260405180602001604052805f81525061189a565b5050565b8060065f8481526020019081526020015f20908161147091906127a8565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516114a09190611ecf565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061158657505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156116b8575f61159584610c71565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115ff57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561161257506116108184610a59565b155b1561165457826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161164b9190611dc4565b60405180910390fd5b81156116b657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6117188383836118b5565b6117cb575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361178c57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117839190611ecf565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016117c2929190612877565b60405180910390fd5b505050565b60605f60016117de84611975565b0190505f8167ffffffffffffffff8111156117fc576117fb611f58565b5b6040519080825280601f01601f19166020018201604052801561182e5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561188f578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816118845761188361289e565b5b0494505f850361183b575b819350505050919050565b6118a48383611ac6565b6118b05f848484611207565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561196c57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061192d575061192c8484610a59565b5b8061196b57508273ffffffffffffffffffffffffffffffffffffffff1661195383610cf7565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106119d1577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119c7576119c661289e565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a0e576d04ee2d6d415b85acef81000000008381611a0457611a0361289e565b5b0492506020810190505b662386f26fc100008310611a3d57662386f26fc100008381611a3357611a3261289e565b5b0492506010810190505b6305f5e1008310611a66576305f5e1008381611a5c57611a5b61289e565b5b0492506008810190505b6127108310611a8b576127108381611a8157611a8061289e565b5b0492506004810190505b60648310611aae5760648381611aa457611aa361289e565b5b0492506002810190505b600a8310611abd576001810190505b80915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b36575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611b2d9190611dc4565b60405180910390fd5b5f611b4283835f610dd0565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611bb4575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611bab9190611dc4565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bfe81611bca565b8114611c08575f80fd5b50565b5f81359050611c1981611bf5565b92915050565b5f60208284031215611c3457611c33611bc2565b5b5f611c4184828501611c0b565b91505092915050565b5f8115159050919050565b611c5e81611c4a565b82525050565b5f602082019050611c775f830184611c55565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611cb4578082015181840152602081019050611c99565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611cd982611c7d565b611ce38185611c87565b9350611cf3818560208601611c97565b611cfc81611cbf565b840191505092915050565b5f6020820190508181035f830152611d1f8184611ccf565b905092915050565b5f819050919050565b611d3981611d27565b8114611d43575f80fd5b50565b5f81359050611d5481611d30565b92915050565b5f60208284031215611d6f57611d6e611bc2565b5b5f611d7c84828501611d46565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611dae82611d85565b9050919050565b611dbe81611da4565b82525050565b5f602082019050611dd75f830184611db5565b92915050565b611de681611da4565b8114611df0575f80fd5b50565b5f81359050611e0181611ddd565b92915050565b5f8060408385031215611e1d57611e1c611bc2565b5b5f611e2a85828601611df3565b9250506020611e3b85828601611d46565b9150509250929050565b5f60208284031215611e5a57611e59611bc2565b5b5f611e6784828501611df3565b91505092915050565b5f805f60608486031215611e8757611e86611bc2565b5b5f611e9486828701611df3565b9350506020611ea586828701611df3565b9250506040611eb686828701611d46565b9150509250925092565b611ec981611d27565b82525050565b5f602082019050611ee25f830184611ec0565b92915050565b611ef181611c4a565b8114611efb575f80fd5b50565b5f81359050611f0c81611ee8565b92915050565b5f8060408385031215611f2857611f27611bc2565b5b5f611f3585828601611df3565b9250506020611f4685828601611efe565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f8e82611cbf565b810181811067ffffffffffffffff82111715611fad57611fac611f58565b5b80604052505050565b5f611fbf611bb9565b9050611fcb8282611f85565b919050565b5f67ffffffffffffffff821115611fea57611fe9611f58565b5b611ff382611cbf565b9050602081019050919050565b828183375f83830152505050565b5f61202061201b84611fd0565b611fb6565b90508281526020810184848401111561203c5761203b611f54565b5b612047848285612000565b509392505050565b5f82601f83011261206357612062611f50565b5b813561207384826020860161200e565b91505092915050565b5f805f806080858703121561209457612093611bc2565b5b5f6120a187828801611df3565b94505060206120b287828801611df3565b93505060406120c387828801611d46565b925050606085013567ffffffffffffffff8111156120e4576120e3611bc6565b5b6120f08782880161204f565b91505092959194509250565b5f67ffffffffffffffff82111561211657612115611f58565b5b61211f82611cbf565b9050602081019050919050565b5f61213e612139846120fc565b611fb6565b90508281526020810184848401111561215a57612159611f54565b5b612165848285612000565b509392505050565b5f82601f83011261218157612180611f50565b5b813561219184826020860161212c565b91505092915050565b5f602082840312156121af576121ae611bc2565b5b5f82013567ffffffffffffffff8111156121cc576121cb611bc6565b5b6121d88482850161216d565b91505092915050565b5f80604083850312156121f7576121f6611bc2565b5b5f61220485828601611df3565b925050602061221585828601611df3565b9150509250929050565b5f819050919050565b5f61224261223d61223884611d85565b61221f565b611d85565b9050919050565b5f61225382612228565b9050919050565b5f61226482612249565b9050919050565b6122748161225a565b82525050565b5f60208201905061228d5f83018461226b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806122d757607f821691505b6020821081036122ea576122e9612293565b5b50919050565b5f6060820190506123035f830186611db5565b6123106020830185611ec0565b61231d6040830184611db5565b949350505050565b5f81905092915050565b5f61233982611c7d565b6123438185612325565b9350612353818560208601611c97565b80840191505092915050565b5f61236a828561232f565b9150612376828461232f565b91508190509392505050565b5f61239461238f846120fc565b611fb6565b9050828152602081018484840111156123b0576123af611f54565b5b6123bb848285611c97565b509392505050565b5f82601f8301126123d7576123d6611f50565b5b81516123e7848260208601612382565b91505092915050565b5f6020828403121561240557612404611bc2565b5b5f82015167ffffffffffffffff81111561242257612421611bc6565b5b61242e848285016123c3565b91505092915050565b7f4f6e6c7920617574686f72697a656420737570706c696572732063616e206d695f8201527f6e74207061636b616765642070726f64756374204e4654000000000000000000602082015250565b5f612491603783611c87565b915061249c82612437565b604082019050919050565b5f6020820190508181035f8301526124be81612485565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6124fc82611d27565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361252e5761252d6124c5565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61255d82612539565b6125678185612543565b9350612577818560208601611c97565b61258081611cbf565b840191505092915050565b5f60808201905061259e5f830187611db5565b6125ab6020830186611db5565b6125b86040830185611ec0565b81810360608301526125ca8184612553565b905095945050505050565b5f815190506125e381611bf5565b92915050565b5f602082840312156125fe576125fd611bc2565b5b5f61260b848285016125d5565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026126707fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612635565b61267a8683612635565b95508019841693508086168417925050509392505050565b5f6126ac6126a76126a284611d27565b61221f565b611d27565b9050919050565b5f819050919050565b6126c583612692565b6126d96126d1826126b3565b848454612641565b825550505050565b5f90565b6126ed6126e1565b6126f88184846126bc565b505050565b5b8181101561271b576127105f826126e5565b6001810190506126fe565b5050565b601f8211156127605761273181612614565b61273a84612626565b81016020851015612749578190505b61275d61275585612626565b8301826126fd565b50505b505050565b5f82821c905092915050565b5f6127805f1984600802612765565b1980831691505092915050565b5f6127988383612771565b9150826002028217905092915050565b6127b182611c7d565b67ffffffffffffffff8111156127ca576127c9611f58565b5b6127d482546122c0565b6127df82828561271f565b5f60209050601f831160018114612810575f84156127fe578287015190505b612808858261278d565b86555061286f565b601f19841661281e86612614565b5f5b8281101561284557848901518255600182019150602085019450602081019050612820565b86831015612862578489015161285e601f891682612771565b8355505b6001600288020188555050505b505050505050565b5f60408201905061288a5f830185611db5565b6128976020830184611ec0565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220d6354318d3bd023da9107a00b49d88542ee7e1547771ed2fd2a6c4d5acce439e64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5261774D6174657269616C730000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x524D000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x8E SWAP2 SWAP1 PUSH3 0x455 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA0 SWAP2 SWAP1 PUSH3 0x455 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x116 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x10D SWAP2 SWAP1 PUSH3 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x127 DUP2 PUSH3 0x12E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x597 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x26D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x283 JUMPI PUSH3 0x282 PUSH3 0x228 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x2E7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2AA JUMP JUMPDEST PUSH3 0x2F3 DUP7 DUP4 PUSH3 0x2AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x33D PUSH3 0x337 PUSH3 0x331 DUP5 PUSH3 0x30B JUMP JUMPDEST PUSH3 0x314 JUMP JUMPDEST PUSH3 0x30B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x358 DUP4 PUSH3 0x31D JUMP JUMPDEST PUSH3 0x370 PUSH3 0x367 DUP3 PUSH3 0x344 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2B6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x386 PUSH3 0x378 JUMP JUMPDEST PUSH3 0x393 DUP2 DUP5 DUP5 PUSH3 0x34D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3BA JUMPI PUSH3 0x3AE PUSH0 DUP3 PUSH3 0x37C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x399 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x409 JUMPI PUSH3 0x3D3 DUP2 PUSH3 0x289 JUMP JUMPDEST PUSH3 0x3DE DUP5 PUSH3 0x29B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3EE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x406 PUSH3 0x3FD DUP6 PUSH3 0x29B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x398 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x42B PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x40E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x445 DUP4 DUP4 PUSH3 0x41A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x460 DUP3 PUSH3 0x1F1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x47C JUMPI PUSH3 0x47B PUSH3 0x1FB JUMP JUMPDEST JUMPDEST PUSH3 0x488 DUP3 SLOAD PUSH3 0x255 JUMP JUMPDEST PUSH3 0x495 DUP3 DUP3 DUP6 PUSH3 0x3BE JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4CB JUMPI PUSH0 DUP5 ISZERO PUSH3 0x4B6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4C2 DUP6 DUP3 PUSH3 0x438 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x531 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4DB DUP7 PUSH3 0x289 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x504 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4DD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x524 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x520 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x41A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x564 DUP3 PUSH3 0x539 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x576 DUP2 PUSH3 0x558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x591 PUSH0 DUP4 ADD DUP5 PUSH3 0x56B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2901 DUP1 PUSH3 0x5A5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xF0F9EE46 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C6 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x9F181B5E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FC JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27C JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xFFFC4CF EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1E45 JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1E45 JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x732 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28E PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x1E45 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43A DUP3 PUSH2 0xB90 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x22C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4DB DUP3 PUSH2 0xC71 JUMP JUMPDEST POP PUSH2 0x4E5 DUP3 PUSH2 0xCF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FE DUP3 DUP3 PUSH2 0x4F9 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0xD37 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x50A PUSH2 0xD49 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5BD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5D0 DUP4 DUP4 PUSH2 0x5CB PUSH2 0xD30 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x646 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x666 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x819 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x675 DUP3 PUSH2 0xC71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6ED JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73A PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x743 PUSH0 PUSH2 0xFDB JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x77C SWAP1 PUSH2 0x22C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A8 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x815 PUSH2 0x80E PUSH2 0xD30 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x109E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x824 DUP5 DUP5 DUP5 PUSH2 0x54D JUMP JUMPDEST PUSH2 0x830 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1207 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x841 DUP3 PUSH2 0xC71 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x85F SWAP1 PUSH2 0x22C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88B SWAP1 PUSH2 0x22C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x8E6 PUSH2 0x13B9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x8FA JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x93C JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x92E JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x916 SWAP3 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x93C JUMP JUMPDEST PUSH2 0x937 DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4B297269 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DF SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST MLOAD SUB PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA17 SWAP1 PUSH2 0x24A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA32 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xA43 CALLER PUSH1 0x8 SLOAD PUSH2 0x1435 JUMP JUMPDEST PUSH2 0xA4F PUSH1 0x8 SLOAD DUP4 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB14 PUSH2 0xD49 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB84 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7B SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8D DUP2 PUSH2 0xFDB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xC5A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xC6A JUMPI POP PUSH2 0xC69 DUP3 PUSH2 0x14AC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC7C DUP4 PUSH2 0x1515 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCEE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE5 SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD44 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x154E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD51 PUSH2 0xD30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD6F PUSH2 0x745 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDCE JUMPI PUSH2 0xD92 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDDB DUP5 PUSH2 0x1515 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE1C JUMPI PUSH2 0xE1B DUP2 DUP5 DUP7 PUSH2 0x170D JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEA7 JUMPI PUSH2 0xE5B PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF26 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x110E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1105 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x13B3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x124A PUSH2 0xD30 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x258B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12A7 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A4 SWAP2 SWAP1 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1328 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1320 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13B1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A8 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13DA DUP3 PUSH2 0xC71 JUMP JUMPDEST POP PUSH0 PUSH2 0x13E4 PUSH2 0x13B9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x142D JUMP JUMPDEST DUP1 PUSH2 0x140C DUP5 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x141D SWAP3 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x189A JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1470 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x14A0 SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1586 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x16B8 JUMPI PUSH0 PUSH2 0x1595 DUP5 PUSH2 0xC71 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15FF JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1612 JUMPI POP PUSH2 0x1610 DUP2 DUP5 PUSH2 0xA59 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1654 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164B SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x16B6 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1718 DUP4 DUP4 DUP4 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x17CB JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x178C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1783 SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C2 SWAP3 SWAP2 SWAP1 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x17DE DUP5 PUSH2 0x1975 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FB PUSH2 0x1F58 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x182E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x188F JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x183B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A4 DUP4 DUP4 PUSH2 0x1AC6 JUMP JUMPDEST PUSH2 0x18B0 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1207 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x196C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x192D JUMPI POP PUSH2 0x192C DUP5 DUP5 PUSH2 0xA59 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x196B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1953 DUP4 PUSH2 0xCF7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x19D1 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19C7 JUMPI PUSH2 0x19C6 PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A0E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A04 JUMPI PUSH2 0x1A03 PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A3D JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A33 JUMPI PUSH2 0x1A32 PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A66 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A5C JUMPI PUSH2 0x1A5B PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1A8B JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A81 JUMPI PUSH2 0x1A80 PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1AAE JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1AA4 JUMPI PUSH2 0x1AA3 PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1ABD JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B2D SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1B42 DUP4 DUP4 PUSH0 PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BB4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BAB SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BFE DUP2 PUSH2 0x1BCA JUMP JUMPDEST DUP2 EQ PUSH2 0x1C08 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C19 DUP2 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C41 DUP5 DUP3 DUP6 ADD PUSH2 0x1C0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C5E DUP2 PUSH2 0x1C4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C77 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CB4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C99 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD9 DUP3 PUSH2 0x1C7D JUMP JUMPDEST PUSH2 0x1CE3 DUP2 DUP6 PUSH2 0x1C87 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x1CFC DUP2 PUSH2 0x1CBF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D1F DUP2 DUP5 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D39 DUP2 PUSH2 0x1D27 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D54 DUP2 PUSH2 0x1D30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7C DUP5 DUP3 DUP6 ADD PUSH2 0x1D46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAE DUP3 PUSH2 0x1D85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DBE DUP2 PUSH2 0x1DA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE6 DUP2 PUSH2 0x1DA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E01 DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1D JUMPI PUSH2 0x1E1C PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E2A DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E3B DUP6 DUP3 DUP7 ADD PUSH2 0x1D46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E5A JUMPI PUSH2 0x1E59 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E67 DUP5 DUP3 DUP6 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E87 JUMPI PUSH2 0x1E86 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E94 DUP7 DUP3 DUP8 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EA5 DUP7 DUP3 DUP8 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1EB6 DUP7 DUP3 DUP8 ADD PUSH2 0x1D46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1EC9 DUP2 PUSH2 0x1D27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EE2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EF1 DUP2 PUSH2 0x1C4A JUMP JUMPDEST DUP2 EQ PUSH2 0x1EFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F0C DUP2 PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F28 JUMPI PUSH2 0x1F27 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F35 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F46 DUP6 DUP3 DUP7 ADD PUSH2 0x1EFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1F8E DUP3 PUSH2 0x1CBF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FAD JUMPI PUSH2 0x1FAC PUSH2 0x1F58 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FBF PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FCB DUP3 DUP3 PUSH2 0x1F85 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FEA JUMPI PUSH2 0x1FE9 PUSH2 0x1F58 JUMP JUMPDEST JUMPDEST PUSH2 0x1FF3 DUP3 PUSH2 0x1CBF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2020 PUSH2 0x201B DUP5 PUSH2 0x1FD0 JUMP JUMPDEST PUSH2 0x1FB6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x203C JUMPI PUSH2 0x203B PUSH2 0x1F54 JUMP JUMPDEST JUMPDEST PUSH2 0x2047 DUP5 DUP3 DUP6 PUSH2 0x2000 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2063 JUMPI PUSH2 0x2062 PUSH2 0x1F50 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2073 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x200E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2094 JUMPI PUSH2 0x2093 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20A1 DUP8 DUP3 DUP9 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x20B2 DUP8 DUP3 DUP9 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x20C3 DUP8 DUP3 DUP9 ADD PUSH2 0x1D46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E4 JUMPI PUSH2 0x20E3 PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST PUSH2 0x20F0 DUP8 DUP3 DUP9 ADD PUSH2 0x204F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2116 JUMPI PUSH2 0x2115 PUSH2 0x1F58 JUMP JUMPDEST JUMPDEST PUSH2 0x211F DUP3 PUSH2 0x1CBF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x213E PUSH2 0x2139 DUP5 PUSH2 0x20FC JUMP JUMPDEST PUSH2 0x1FB6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x215A JUMPI PUSH2 0x2159 PUSH2 0x1F54 JUMP JUMPDEST JUMPDEST PUSH2 0x2165 DUP5 DUP3 DUP6 PUSH2 0x2000 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2181 JUMPI PUSH2 0x2180 PUSH2 0x1F50 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2191 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x212C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21AF JUMPI PUSH2 0x21AE PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21CC JUMPI PUSH2 0x21CB PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST PUSH2 0x21D8 DUP5 DUP3 DUP6 ADD PUSH2 0x216D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21F7 JUMPI PUSH2 0x21F6 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2204 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2215 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2242 PUSH2 0x223D PUSH2 0x2238 DUP5 PUSH2 0x1D85 JUMP JUMPDEST PUSH2 0x221F JUMP JUMPDEST PUSH2 0x1D85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2253 DUP3 PUSH2 0x2228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2264 DUP3 PUSH2 0x2249 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2274 DUP2 PUSH2 0x225A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228D PUSH0 DUP4 ADD DUP5 PUSH2 0x226B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22EA JUMPI PUSH2 0x22E9 PUSH2 0x2293 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2303 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x2310 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x231D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DB5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2339 DUP3 PUSH2 0x1C7D JUMP JUMPDEST PUSH2 0x2343 DUP2 DUP6 PUSH2 0x2325 JUMP JUMPDEST SWAP4 POP PUSH2 0x2353 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C97 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x236A DUP3 DUP6 PUSH2 0x232F JUMP JUMPDEST SWAP2 POP PUSH2 0x2376 DUP3 DUP5 PUSH2 0x232F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2394 PUSH2 0x238F DUP5 PUSH2 0x20FC JUMP JUMPDEST PUSH2 0x1FB6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23B0 JUMPI PUSH2 0x23AF PUSH2 0x1F54 JUMP JUMPDEST JUMPDEST PUSH2 0x23BB DUP5 DUP3 DUP6 PUSH2 0x1C97 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23D7 JUMPI PUSH2 0x23D6 PUSH2 0x1F50 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x23E7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2382 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2405 JUMPI PUSH2 0x2404 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2422 JUMPI PUSH2 0x2421 PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST PUSH2 0x242E DUP5 DUP3 DUP6 ADD PUSH2 0x23C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920617574686F72697A656420737570706C696572732063616E206D69 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E74207061636B616765642070726F64756374204E4654000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2491 PUSH1 0x37 DUP4 PUSH2 0x1C87 JUMP JUMPDEST SWAP2 POP PUSH2 0x249C DUP3 PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24BE DUP2 PUSH2 0x2485 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x24FC DUP3 PUSH2 0x1D27 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x252E JUMPI PUSH2 0x252D PUSH2 0x24C5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x255D DUP3 PUSH2 0x2539 JUMP JUMPDEST PUSH2 0x2567 DUP2 DUP6 PUSH2 0x2543 JUMP JUMPDEST SWAP4 POP PUSH2 0x2577 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x2580 DUP2 PUSH2 0x1CBF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x259E PUSH0 DUP4 ADD DUP8 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x25AB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x25B8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EC0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x25CA DUP2 DUP5 PUSH2 0x2553 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25E3 DUP2 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25FE JUMPI PUSH2 0x25FD PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x260B DUP5 DUP3 DUP6 ADD PUSH2 0x25D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2670 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2635 JUMP JUMPDEST PUSH2 0x267A DUP7 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26AC PUSH2 0x26A7 PUSH2 0x26A2 DUP5 PUSH2 0x1D27 JUMP JUMPDEST PUSH2 0x221F JUMP JUMPDEST PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C5 DUP4 PUSH2 0x2692 JUMP JUMPDEST PUSH2 0x26D9 PUSH2 0x26D1 DUP3 PUSH2 0x26B3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2641 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x26ED PUSH2 0x26E1 JUMP JUMPDEST PUSH2 0x26F8 DUP2 DUP5 DUP5 PUSH2 0x26BC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x271B JUMPI PUSH2 0x2710 PUSH0 DUP3 PUSH2 0x26E5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26FE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2760 JUMPI PUSH2 0x2731 DUP2 PUSH2 0x2614 JUMP JUMPDEST PUSH2 0x273A DUP5 PUSH2 0x2626 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2749 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x275D PUSH2 0x2755 DUP6 PUSH2 0x2626 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x26FD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2780 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2765 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2798 DUP4 DUP4 PUSH2 0x2771 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27B1 DUP3 PUSH2 0x1C7D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27CA JUMPI PUSH2 0x27C9 PUSH2 0x1F58 JUMP JUMPDEST JUMPDEST PUSH2 0x27D4 DUP3 SLOAD PUSH2 0x22C0 JUMP JUMPDEST PUSH2 0x27DF DUP3 DUP3 DUP6 PUSH2 0x271F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2810 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x27FE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2808 DUP6 DUP3 PUSH2 0x278D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x286F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x281E DUP7 PUSH2 0x2614 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2845 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2820 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2862 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x285E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2771 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x288A PUSH0 DUP4 ADD DUP6 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x2897 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 CALLDATALOAD NUMBER XOR 0xD3 0xBD MUL RETURNDATASIZE 0xA9 LT PUSH27 0xB49D88542EE7E1547771ED2FD2A6C4D5ACCE439E64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "439:1046:17:-:0;;;661:81;;;;;;;;;;713:10;1382:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1456:5;1448;:13;;;;;;:::i;:::-;;1481:7;1471;:17;;;;;;:::i;:::-;;1382:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;439:1046:17;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:18:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;439:1046:17:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SetTradeManagementSC_3172": {
									"entryPoint": 1282,
									"id": 3172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@TradeManagement_3146": {
									"entryPoint": 2791,
									"id": 3146,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1128": {
									"entryPoint": 3383,
									"id": 1128,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1194": {
									"entryPoint": 5454,
									"id": 1194,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_521": {
									"entryPoint": 5049,
									"id": 521,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_776": {
									"entryPoint": 5901,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1324": {
									"entryPoint": 4615,
									"id": 1324,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3401,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_703": {
									"entryPoint": 3319,
									"id": 703,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_739": {
									"entryPoint": 6325,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_932": {
									"entryPoint": 6854,
									"id": 932,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1655": {
									"entryPoint": 3376,
									"id": 1655,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_690": {
									"entryPoint": 5397,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1260": {
									"entryPoint": 3185,
									"id": 1260,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_947": {
									"entryPoint": 5173,
									"id": 947,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_973": {
									"entryPoint": 6298,
									"id": 973,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1231": {
									"entryPoint": 4254,
									"id": 1231,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1614": {
									"entryPoint": 5202,
									"id": 1614,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4059,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_882": {
									"entryPoint": 3536,
									"id": 882,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_537": {
									"entryPoint": 1260,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_445": {
									"entryPoint": 1660,
									"id": 445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_554": {
									"entryPoint": 1233,
									"id": 554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_587": {
									"entryPoint": 2649,
									"id": 587,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2839": {
									"entryPoint": 6517,
									"id": 2839,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_3212": {
									"entryPoint": 2369,
									"id": 3212,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_467": {
									"entryPoint": 1090,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_458": {
									"entryPoint": 1643,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1861,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1842,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_651": {
									"entryPoint": 1612,
									"id": 651,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_677": {
									"entryPoint": 2073,
									"id": 677,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_570": {
									"entryPoint": 2051,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1538": {
									"entryPoint": 994,
									"id": 1538,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1951": {
									"entryPoint": 5292,
									"id": 1951,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_417": {
									"entryPoint": 2960,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_476": {
									"entryPoint": 1901,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1741": {
									"entryPoint": 6096,
									"id": 1741,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenCount_3143": {
									"entryPoint": 2045,
									"id": 3143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenURI_1595": {
									"entryPoint": 2102,
									"id": 1595,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_512": {
									"entryPoint": 5071,
									"id": 512,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_633": {
									"entryPoint": 1357,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2828,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8206,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 9090,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 9155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 9200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_ITradeManagementRawMaterials_$3137_to_t_address_fromStack": {
									"entryPoint": 8811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9055,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9611,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10359,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8944,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ITradeManagementRawMaterials_$3137__to_t_address__fromStack_reversed": {
									"entryPoint": 8826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10015,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_ITradeManagementRawMaterials_$3137_to_t_address": {
									"entryPoint": 8794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8192,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7319,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9413,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10398,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c": {
									"entryPoint": 9271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9793,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9916,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9953,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24486:18",
										"nodeType": "YulBlock",
										"src": "0:24486:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "378:105:18",
													"nodeType": "YulBlock",
													"src": "378:105:18",
													"statements": [
														{
															"nativeSrc": "388:89:18",
															"nodeType": "YulAssignment",
															"src": "388:89:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:18",
																		"nodeType": "YulLiteral",
																		"src": "410:66:18",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:18"
																},
																"nativeSrc": "399:78:18",
																"nodeType": "YulFunctionCall",
																"src": "399:78:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:18",
														"nodeType": "YulTypedName",
														"src": "360:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:18",
														"nodeType": "YulTypedName",
														"src": "370:7:18",
														"type": ""
													}
												],
												"src": "334:149:18"
											},
											{
												"body": {
													"nativeSrc": "531:78:18",
													"nodeType": "YulBlock",
													"src": "531:78:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:18",
																"nodeType": "YulBlock",
																"src": "587:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:18",
																					"nodeType": "YulLiteral",
																					"src": "596:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:18",
																					"nodeType": "YulLiteral",
																					"src": "599:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:18"
																			},
																			"nativeSrc": "589:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:18"
																		},
																		"nativeSrc": "589:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:18",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:18"
																				},
																				"nativeSrc": "561:23:18",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:18"
																		},
																		"nativeSrc": "551:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:18"
																},
																"nativeSrc": "544:42:18",
																"nodeType": "YulFunctionCall",
																"src": "544:42:18"
															},
															"nativeSrc": "541:62:18",
															"nodeType": "YulIf",
															"src": "541:62:18"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:18",
														"nodeType": "YulTypedName",
														"src": "524:5:18",
														"type": ""
													}
												],
												"src": "489:120:18"
											},
											{
												"body": {
													"nativeSrc": "666:86:18",
													"nodeType": "YulBlock",
													"src": "666:86:18",
													"statements": [
														{
															"nativeSrc": "676:29:18",
															"nodeType": "YulAssignment",
															"src": "676:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:18"
																},
																"nativeSrc": "685:20:18",
																"nodeType": "YulFunctionCall",
																"src": "685:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:18"
																},
																"nativeSrc": "714:32:18",
																"nodeType": "YulFunctionCall",
																"src": "714:32:18"
															},
															"nativeSrc": "714:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:18",
														"nodeType": "YulTypedName",
														"src": "644:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:18",
														"nodeType": "YulTypedName",
														"src": "652:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:18",
														"nodeType": "YulTypedName",
														"src": "660:5:18",
														"type": ""
													}
												],
												"src": "615:137:18"
											},
											{
												"body": {
													"nativeSrc": "823:262:18",
													"nodeType": "YulBlock",
													"src": "823:262:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:18",
																"nodeType": "YulBlock",
																"src": "869:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:18"
																			},
																			"nativeSrc": "871:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:18"
																		},
																		"nativeSrc": "871:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:18"
																		},
																		"nativeSrc": "840:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:18",
																		"nodeType": "YulLiteral",
																		"src": "865:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:18"
																},
																"nativeSrc": "836:32:18",
																"nodeType": "YulFunctionCall",
																"src": "836:32:18"
															},
															"nativeSrc": "833:119:18",
															"nodeType": "YulIf",
															"src": "833:119:18"
														},
														{
															"nativeSrc": "962:116:18",
															"nodeType": "YulBlock",
															"src": "962:116:18",
															"statements": [
																{
																	"nativeSrc": "977:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:18",
																		"nodeType": "YulLiteral",
																		"src": "991:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:18",
																			"nodeType": "YulTypedName",
																			"src": "981:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:18",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:18"
																				},
																				"nativeSrc": "1036:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:18",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:18"
																		},
																		"nativeSrc": "1016:52:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:18",
														"nodeType": "YulTypedName",
														"src": "793:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:18",
														"nodeType": "YulTypedName",
														"src": "804:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:18",
														"nodeType": "YulTypedName",
														"src": "816:6:18",
														"type": ""
													}
												],
												"src": "758:327:18"
											},
											{
												"body": {
													"nativeSrc": "1133:48:18",
													"nodeType": "YulBlock",
													"src": "1133:48:18",
													"statements": [
														{
															"nativeSrc": "1143:32:18",
															"nodeType": "YulAssignment",
															"src": "1143:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:18"
																		},
																		"nativeSrc": "1161:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:18"
																},
																"nativeSrc": "1154:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:18",
														"nodeType": "YulTypedName",
														"src": "1115:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:18",
														"nodeType": "YulTypedName",
														"src": "1125:7:18",
														"type": ""
													}
												],
												"src": "1091:90:18"
											},
											{
												"body": {
													"nativeSrc": "1246:50:18",
													"nodeType": "YulBlock",
													"src": "1246:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:18"
																		},
																		"nativeSrc": "1268:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:18"
																},
																"nativeSrc": "1256:34:18",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:18"
															},
															"nativeSrc": "1256:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:18",
														"nodeType": "YulTypedName",
														"src": "1234:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:18",
														"nodeType": "YulTypedName",
														"src": "1241:3:18",
														"type": ""
													}
												],
												"src": "1187:109:18"
											},
											{
												"body": {
													"nativeSrc": "1394:118:18",
													"nodeType": "YulBlock",
													"src": "1394:118:18",
													"statements": [
														{
															"nativeSrc": "1404:26:18",
															"nodeType": "YulAssignment",
															"src": "1404:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:18"
																},
																"nativeSrc": "1412:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:18"
																		},
																		"nativeSrc": "1487:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:18"
																},
																"nativeSrc": "1440:65:18",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:18"
															},
															"nativeSrc": "1440:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:18",
														"nodeType": "YulTypedName",
														"src": "1366:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:18",
														"nodeType": "YulTypedName",
														"src": "1378:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:18",
														"nodeType": "YulTypedName",
														"src": "1389:4:18",
														"type": ""
													}
												],
												"src": "1302:210:18"
											},
											{
												"body": {
													"nativeSrc": "1577:40:18",
													"nodeType": "YulBlock",
													"src": "1577:40:18",
													"statements": [
														{
															"nativeSrc": "1588:22:18",
															"nodeType": "YulAssignment",
															"src": "1588:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:18"
																},
																"nativeSrc": "1598:12:18",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:18",
														"nodeType": "YulTypedName",
														"src": "1560:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:18",
														"nodeType": "YulTypedName",
														"src": "1570:6:18",
														"type": ""
													}
												],
												"src": "1518:99:18"
											},
											{
												"body": {
													"nativeSrc": "1719:73:18",
													"nodeType": "YulBlock",
													"src": "1719:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:18"
																},
																"nativeSrc": "1729:19:18",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:18"
															},
															"nativeSrc": "1729:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:18"
														},
														{
															"nativeSrc": "1757:29:18",
															"nodeType": "YulAssignment",
															"src": "1757:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:18",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:18"
																},
																"nativeSrc": "1772:14:18",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:18",
														"nodeType": "YulTypedName",
														"src": "1691:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:18",
														"nodeType": "YulTypedName",
														"src": "1696:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:18",
														"nodeType": "YulTypedName",
														"src": "1707:11:18",
														"type": ""
													}
												],
												"src": "1623:169:18"
											},
											{
												"body": {
													"nativeSrc": "1860:184:18",
													"nodeType": "YulBlock",
													"src": "1860:184:18",
													"statements": [
														{
															"nativeSrc": "1870:10:18",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:18",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:18",
																"nodeType": "YulLiteral",
																"src": "1879:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:18",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:18",
																"nodeType": "YulBlock",
																"src": "1939:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:18"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:18"
																					},
																					"nativeSrc": "1960:11:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:18"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:18"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:18"
																							},
																							"nativeSrc": "1979:11:18",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:18"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:18"
																					},
																					"nativeSrc": "1973:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:18"
																			},
																			"nativeSrc": "1953:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:18"
																		},
																		"nativeSrc": "1953:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:18"
																},
																"nativeSrc": "1897:13:18",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:18"
															},
															"nativeSrc": "1889:113:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:18",
																"nodeType": "YulBlock",
																"src": "1911:19:18",
																"statements": [
																	{
																		"nativeSrc": "1913:15:18",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:18",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:18",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:18"
																			},
																			"nativeSrc": "1918:10:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:18"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:18",
																"nodeType": "YulBlock",
																"src": "1893:3:18",
																"statements": []
															},
															"src": "1889:113:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:18"
																		},
																		"nativeSrc": "2018:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:18"
																},
																"nativeSrc": "2011:27:18",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:18"
															},
															"nativeSrc": "2011:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:18",
														"nodeType": "YulTypedName",
														"src": "1842:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:18",
														"nodeType": "YulTypedName",
														"src": "1847:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:18",
														"nodeType": "YulTypedName",
														"src": "1852:6:18",
														"type": ""
													}
												],
												"src": "1798:246:18"
											},
											{
												"body": {
													"nativeSrc": "2098:54:18",
													"nodeType": "YulBlock",
													"src": "2098:54:18",
													"statements": [
														{
															"nativeSrc": "2108:38:18",
															"nodeType": "YulAssignment",
															"src": "2108:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:18"
																		},
																		"nativeSrc": "2122:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:18",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:18"
																		},
																		"nativeSrc": "2138:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:18"
																},
																"nativeSrc": "2118:28:18",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:18",
														"nodeType": "YulTypedName",
														"src": "2081:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:18",
														"nodeType": "YulTypedName",
														"src": "2091:6:18",
														"type": ""
													}
												],
												"src": "2050:102:18"
											},
											{
												"body": {
													"nativeSrc": "2250:285:18",
													"nodeType": "YulBlock",
													"src": "2250:285:18",
													"statements": [
														{
															"nativeSrc": "2260:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:18"
																},
																"nativeSrc": "2274:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:18",
															"nodeType": "YulAssignment",
															"src": "2322:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:18"
																},
																"nativeSrc": "2329:71:18",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:18",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:18"
																		},
																		"nativeSrc": "2444:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:18"
																},
																"nativeSrc": "2409:65:18",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:18"
															},
															"nativeSrc": "2409:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:18"
														},
														{
															"nativeSrc": "2483:46:18",
															"nodeType": "YulAssignment",
															"src": "2483:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:18"
																		},
																		"nativeSrc": "2499:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:18"
																},
																"nativeSrc": "2490:39:18",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:18",
														"nodeType": "YulTypedName",
														"src": "2231:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:18",
														"nodeType": "YulTypedName",
														"src": "2238:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:18",
														"nodeType": "YulTypedName",
														"src": "2246:3:18",
														"type": ""
													}
												],
												"src": "2158:377:18"
											},
											{
												"body": {
													"nativeSrc": "2659:195:18",
													"nodeType": "YulBlock",
													"src": "2659:195:18",
													"statements": [
														{
															"nativeSrc": "2669:26:18",
															"nodeType": "YulAssignment",
															"src": "2669:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:18"
																},
																"nativeSrc": "2677:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:18"
																		},
																		"nativeSrc": "2712:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:18"
																		},
																		"nativeSrc": "2731:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:18"
																},
																"nativeSrc": "2705:47:18",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:18"
															},
															"nativeSrc": "2705:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:18"
														},
														{
															"nativeSrc": "2761:86:18",
															"nodeType": "YulAssignment",
															"src": "2761:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:18"
																},
																"nativeSrc": "2769:78:18",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:18",
														"nodeType": "YulTypedName",
														"src": "2631:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:18",
														"nodeType": "YulTypedName",
														"src": "2643:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:18",
														"nodeType": "YulTypedName",
														"src": "2654:4:18",
														"type": ""
													}
												],
												"src": "2541:313:18"
											},
											{
												"body": {
													"nativeSrc": "2905:32:18",
													"nodeType": "YulBlock",
													"src": "2905:32:18",
													"statements": [
														{
															"nativeSrc": "2915:16:18",
															"nodeType": "YulAssignment",
															"src": "2915:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:18",
																"nodeType": "YulIdentifier",
																"src": "2926:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:18",
														"nodeType": "YulTypedName",
														"src": "2887:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:18",
														"nodeType": "YulTypedName",
														"src": "2897:7:18",
														"type": ""
													}
												],
												"src": "2860:77:18"
											},
											{
												"body": {
													"nativeSrc": "2986:79:18",
													"nodeType": "YulBlock",
													"src": "2986:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:18",
																"nodeType": "YulBlock",
																"src": "3043:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:18"
																			},
																			"nativeSrc": "3045:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:18"
																		},
																		"nativeSrc": "3045:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:18"
																				},
																				"nativeSrc": "3016:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:18"
																		},
																		"nativeSrc": "3006:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:18"
																},
																"nativeSrc": "2999:43:18",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:18"
															},
															"nativeSrc": "2996:63:18",
															"nodeType": "YulIf",
															"src": "2996:63:18"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:18",
														"nodeType": "YulTypedName",
														"src": "2979:5:18",
														"type": ""
													}
												],
												"src": "2943:122:18"
											},
											{
												"body": {
													"nativeSrc": "3123:87:18",
													"nodeType": "YulBlock",
													"src": "3123:87:18",
													"statements": [
														{
															"nativeSrc": "3133:29:18",
															"nodeType": "YulAssignment",
															"src": "3133:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:18"
																},
																"nativeSrc": "3142:20:18",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:18"
																},
																"nativeSrc": "3171:33:18",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:18"
															},
															"nativeSrc": "3171:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:18"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:18",
														"nodeType": "YulTypedName",
														"src": "3101:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:18",
														"nodeType": "YulTypedName",
														"src": "3109:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:18",
														"nodeType": "YulTypedName",
														"src": "3117:5:18",
														"type": ""
													}
												],
												"src": "3071:139:18"
											},
											{
												"body": {
													"nativeSrc": "3282:263:18",
													"nodeType": "YulBlock",
													"src": "3282:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:18",
																"nodeType": "YulBlock",
																"src": "3328:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:18"
																			},
																			"nativeSrc": "3330:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:18"
																		},
																		"nativeSrc": "3330:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:18"
																		},
																		"nativeSrc": "3299:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:18"
																},
																"nativeSrc": "3295:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:18"
															},
															"nativeSrc": "3292:119:18",
															"nodeType": "YulIf",
															"src": "3292:119:18"
														},
														{
															"nativeSrc": "3421:117:18",
															"nodeType": "YulBlock",
															"src": "3421:117:18",
															"statements": [
																{
																	"nativeSrc": "3436:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:18",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:18"
																				},
																				"nativeSrc": "3496:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:18"
																		},
																		"nativeSrc": "3475:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:18",
														"nodeType": "YulTypedName",
														"src": "3252:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:18",
														"nodeType": "YulTypedName",
														"src": "3263:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:18",
														"nodeType": "YulTypedName",
														"src": "3275:6:18",
														"type": ""
													}
												],
												"src": "3216:329:18"
											},
											{
												"body": {
													"nativeSrc": "3596:81:18",
													"nodeType": "YulBlock",
													"src": "3596:81:18",
													"statements": [
														{
															"nativeSrc": "3606:65:18",
															"nodeType": "YulAssignment",
															"src": "3606:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:18",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:18"
																},
																"nativeSrc": "3617:54:18",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:18",
														"nodeType": "YulTypedName",
														"src": "3578:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:18",
														"nodeType": "YulTypedName",
														"src": "3588:7:18",
														"type": ""
													}
												],
												"src": "3551:126:18"
											},
											{
												"body": {
													"nativeSrc": "3728:51:18",
													"nodeType": "YulBlock",
													"src": "3728:51:18",
													"statements": [
														{
															"nativeSrc": "3738:35:18",
															"nodeType": "YulAssignment",
															"src": "3738:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:18"
																},
																"nativeSrc": "3749:24:18",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:18",
														"nodeType": "YulTypedName",
														"src": "3710:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:18",
														"nodeType": "YulTypedName",
														"src": "3720:7:18",
														"type": ""
													}
												],
												"src": "3683:96:18"
											},
											{
												"body": {
													"nativeSrc": "3850:53:18",
													"nodeType": "YulBlock",
													"src": "3850:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:18"
																		},
																		"nativeSrc": "3872:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:18"
																},
																"nativeSrc": "3860:37:18",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:18"
															},
															"nativeSrc": "3860:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:18",
														"nodeType": "YulTypedName",
														"src": "3838:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:18",
														"nodeType": "YulTypedName",
														"src": "3845:3:18",
														"type": ""
													}
												],
												"src": "3785:118:18"
											},
											{
												"body": {
													"nativeSrc": "4007:124:18",
													"nodeType": "YulBlock",
													"src": "4007:124:18",
													"statements": [
														{
															"nativeSrc": "4017:26:18",
															"nodeType": "YulAssignment",
															"src": "4017:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:18"
																},
																"nativeSrc": "4025:18:18",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:18",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:18"
																		},
																		"nativeSrc": "4106:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:18"
																},
																"nativeSrc": "4053:71:18",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:18"
															},
															"nativeSrc": "4053:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:18",
														"nodeType": "YulTypedName",
														"src": "3979:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:18",
														"nodeType": "YulTypedName",
														"src": "3991:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:18",
														"nodeType": "YulTypedName",
														"src": "4002:4:18",
														"type": ""
													}
												],
												"src": "3909:222:18"
											},
											{
												"body": {
													"nativeSrc": "4180:79:18",
													"nodeType": "YulBlock",
													"src": "4180:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:18",
																"nodeType": "YulBlock",
																"src": "4237:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:18",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:18"
																			},
																			"nativeSrc": "4239:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:18"
																		},
																		"nativeSrc": "4239:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:18"
																				},
																				"nativeSrc": "4210:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:18"
																		},
																		"nativeSrc": "4200:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:18"
																},
																"nativeSrc": "4193:43:18",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:18"
															},
															"nativeSrc": "4190:63:18",
															"nodeType": "YulIf",
															"src": "4190:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:18",
														"nodeType": "YulTypedName",
														"src": "4173:5:18",
														"type": ""
													}
												],
												"src": "4137:122:18"
											},
											{
												"body": {
													"nativeSrc": "4317:87:18",
													"nodeType": "YulBlock",
													"src": "4317:87:18",
													"statements": [
														{
															"nativeSrc": "4327:29:18",
															"nodeType": "YulAssignment",
															"src": "4327:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:18"
																},
																"nativeSrc": "4336:20:18",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:18"
																},
																"nativeSrc": "4365:33:18",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:18"
															},
															"nativeSrc": "4365:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:18",
														"nodeType": "YulTypedName",
														"src": "4295:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:18",
														"nodeType": "YulTypedName",
														"src": "4303:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:18",
														"nodeType": "YulTypedName",
														"src": "4311:5:18",
														"type": ""
													}
												],
												"src": "4265:139:18"
											},
											{
												"body": {
													"nativeSrc": "4493:391:18",
													"nodeType": "YulBlock",
													"src": "4493:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:18",
																"nodeType": "YulBlock",
																"src": "4539:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:18"
																			},
																			"nativeSrc": "4541:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:18"
																		},
																		"nativeSrc": "4541:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:18"
																		},
																		"nativeSrc": "4510:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:18"
																},
																"nativeSrc": "4506:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:18"
															},
															"nativeSrc": "4503:119:18",
															"nodeType": "YulIf",
															"src": "4503:119:18"
														},
														{
															"nativeSrc": "4632:117:18",
															"nodeType": "YulBlock",
															"src": "4632:117:18",
															"statements": [
																{
																	"nativeSrc": "4647:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:18"
																				},
																				"nativeSrc": "4707:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:18"
																		},
																		"nativeSrc": "4686:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:18",
															"nodeType": "YulBlock",
															"src": "4759:118:18",
															"statements": [
																{
																	"nativeSrc": "4774:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:18",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:18",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:18"
																				},
																				"nativeSrc": "4835:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:18"
																		},
																		"nativeSrc": "4814:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:18",
														"nodeType": "YulTypedName",
														"src": "4455:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:18",
														"nodeType": "YulTypedName",
														"src": "4466:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:18",
														"nodeType": "YulTypedName",
														"src": "4478:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:18",
														"nodeType": "YulTypedName",
														"src": "4486:6:18",
														"type": ""
													}
												],
												"src": "4410:474:18"
											},
											{
												"body": {
													"nativeSrc": "4956:263:18",
													"nodeType": "YulBlock",
													"src": "4956:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5002:83:18",
																"nodeType": "YulBlock",
																"src": "5002:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5004:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5004:77:18"
																			},
																			"nativeSrc": "5004:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5004:79:18"
																		},
																		"nativeSrc": "5004:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5004:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4977:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "4977:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4986:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4986:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4973:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4973:3:18"
																		},
																		"nativeSrc": "4973:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4973:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4998:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4998:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4969:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4969:3:18"
																},
																"nativeSrc": "4969:32:18",
																"nodeType": "YulFunctionCall",
																"src": "4969:32:18"
															},
															"nativeSrc": "4966:119:18",
															"nodeType": "YulIf",
															"src": "4966:119:18"
														},
														{
															"nativeSrc": "5095:117:18",
															"nodeType": "YulBlock",
															"src": "5095:117:18",
															"statements": [
																{
																	"nativeSrc": "5110:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5110:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5124:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5124:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5114:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5114:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5139:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5139:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5174:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5174:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5185:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5185:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5170:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5170:3:18"
																				},
																				"nativeSrc": "5170:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5170:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5194:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5194:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5149:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5149:20:18"
																		},
																		"nativeSrc": "5149:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5149:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5139:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5139:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4890:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4926:9:18",
														"nodeType": "YulTypedName",
														"src": "4926:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4937:7:18",
														"nodeType": "YulTypedName",
														"src": "4937:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4949:6:18",
														"nodeType": "YulTypedName",
														"src": "4949:6:18",
														"type": ""
													}
												],
												"src": "4890:329:18"
											},
											{
												"body": {
													"nativeSrc": "5325:519:18",
													"nodeType": "YulBlock",
													"src": "5325:519:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5371:83:18",
																"nodeType": "YulBlock",
																"src": "5371:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5373:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5373:77:18"
																			},
																			"nativeSrc": "5373:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5373:79:18"
																		},
																		"nativeSrc": "5373:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5373:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5346:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5346:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5355:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5355:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5342:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5342:3:18"
																		},
																		"nativeSrc": "5342:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5342:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5367:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5338:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5338:3:18"
																},
																"nativeSrc": "5338:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5338:32:18"
															},
															"nativeSrc": "5335:119:18",
															"nodeType": "YulIf",
															"src": "5335:119:18"
														},
														{
															"nativeSrc": "5464:117:18",
															"nodeType": "YulBlock",
															"src": "5464:117:18",
															"statements": [
																{
																	"nativeSrc": "5479:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5479:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5493:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5493:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5483:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5483:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5508:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5508:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5543:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5543:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5554:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5554:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5539:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5539:3:18"
																				},
																				"nativeSrc": "5539:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5539:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5563:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5563:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5518:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5518:20:18"
																		},
																		"nativeSrc": "5518:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5518:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5508:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5508:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5591:118:18",
															"nodeType": "YulBlock",
															"src": "5591:118:18",
															"statements": [
																{
																	"nativeSrc": "5606:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5606:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5620:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5620:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5610:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5610:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5636:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5636:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5671:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5671:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5682:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5682:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5667:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5667:3:18"
																				},
																				"nativeSrc": "5667:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5667:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5691:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5691:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5646:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5646:20:18"
																		},
																		"nativeSrc": "5646:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5646:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5636:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5636:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5719:118:18",
															"nodeType": "YulBlock",
															"src": "5719:118:18",
															"statements": [
																{
																	"nativeSrc": "5734:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5734:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5748:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5748:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5738:6:18",
																			"nodeType": "YulTypedName",
																			"src": "5738:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:18",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:18"
																				},
																				"nativeSrc": "5795:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5774:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:18"
																		},
																		"nativeSrc": "5774:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5764:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5225:619:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5279:9:18",
														"nodeType": "YulTypedName",
														"src": "5279:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5290:7:18",
														"nodeType": "YulTypedName",
														"src": "5290:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5302:6:18",
														"nodeType": "YulTypedName",
														"src": "5302:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5310:6:18",
														"nodeType": "YulTypedName",
														"src": "5310:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5318:6:18",
														"nodeType": "YulTypedName",
														"src": "5318:6:18",
														"type": ""
													}
												],
												"src": "5225:619:18"
											},
											{
												"body": {
													"nativeSrc": "5915:53:18",
													"nodeType": "YulBlock",
													"src": "5915:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5932:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5955:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5937:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:18"
																		},
																		"nativeSrc": "5937:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:18"
																},
																"nativeSrc": "5925:37:18",
																"nodeType": "YulFunctionCall",
																"src": "5925:37:18"
															},
															"nativeSrc": "5925:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:18"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5850:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5903:5:18",
														"nodeType": "YulTypedName",
														"src": "5903:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5910:3:18",
														"nodeType": "YulTypedName",
														"src": "5910:3:18",
														"type": ""
													}
												],
												"src": "5850:118:18"
											},
											{
												"body": {
													"nativeSrc": "6072:124:18",
													"nodeType": "YulBlock",
													"src": "6072:124:18",
													"statements": [
														{
															"nativeSrc": "6082:26:18",
															"nodeType": "YulAssignment",
															"src": "6082:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:18"
																},
																"nativeSrc": "6090:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:18"
																		},
																		"nativeSrc": "6171:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6118:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:18"
																},
																"nativeSrc": "6118:71:18",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:18"
															},
															"nativeSrc": "6118:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5974:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:18",
														"nodeType": "YulTypedName",
														"src": "6044:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:18",
														"nodeType": "YulTypedName",
														"src": "6056:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:18",
														"nodeType": "YulTypedName",
														"src": "6067:4:18",
														"type": ""
													}
												],
												"src": "5974:222:18"
											},
											{
												"body": {
													"nativeSrc": "6242:76:18",
													"nodeType": "YulBlock",
													"src": "6242:76:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6296:16:18",
																"nodeType": "YulBlock",
																"src": "6296:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6305:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6308:1:18",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6298:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:18"
																			},
																			"nativeSrc": "6298:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:18"
																		},
																		"nativeSrc": "6298:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6265:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6287:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6272:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:18"
																				},
																				"nativeSrc": "6272:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6262:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:18"
																		},
																		"nativeSrc": "6262:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6255:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:18"
																},
																"nativeSrc": "6255:40:18",
																"nodeType": "YulFunctionCall",
																"src": "6255:40:18"
															},
															"nativeSrc": "6252:60:18",
															"nodeType": "YulIf",
															"src": "6252:60:18"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6202:116:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:18",
														"nodeType": "YulTypedName",
														"src": "6235:5:18",
														"type": ""
													}
												],
												"src": "6202:116:18"
											},
											{
												"body": {
													"nativeSrc": "6373:84:18",
													"nodeType": "YulBlock",
													"src": "6373:84:18",
													"statements": [
														{
															"nativeSrc": "6383:29:18",
															"nodeType": "YulAssignment",
															"src": "6383:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6405:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6392:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:18"
																},
																"nativeSrc": "6392:20:18",
																"nodeType": "YulFunctionCall",
																"src": "6392:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6383:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6445:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6421:23:18",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:18"
																},
																"nativeSrc": "6421:30:18",
																"nodeType": "YulFunctionCall",
																"src": "6421:30:18"
															},
															"nativeSrc": "6421:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:18"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6324:133:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6351:6:18",
														"nodeType": "YulTypedName",
														"src": "6351:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6359:3:18",
														"nodeType": "YulTypedName",
														"src": "6359:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6367:5:18",
														"nodeType": "YulTypedName",
														"src": "6367:5:18",
														"type": ""
													}
												],
												"src": "6324:133:18"
											},
											{
												"body": {
													"nativeSrc": "6543:388:18",
													"nodeType": "YulBlock",
													"src": "6543:388:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:83:18",
																"nodeType": "YulBlock",
																"src": "6589:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6591:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:18"
																			},
																			"nativeSrc": "6591:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:18"
																		},
																		"nativeSrc": "6591:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6564:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6560:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:18"
																		},
																		"nativeSrc": "6560:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6556:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:18"
																},
																"nativeSrc": "6556:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6556:32:18"
															},
															"nativeSrc": "6553:119:18",
															"nodeType": "YulIf",
															"src": "6553:119:18"
														},
														{
															"nativeSrc": "6682:117:18",
															"nodeType": "YulBlock",
															"src": "6682:117:18",
															"statements": [
																{
																	"nativeSrc": "6697:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6711:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6701:6:18",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6726:63:18",
																	"nodeType": "YulAssignment",
																	"src": "6726:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6761:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6757:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:18"
																				},
																				"nativeSrc": "6757:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6781:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6736:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:18"
																		},
																		"nativeSrc": "6736:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6726:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6809:115:18",
															"nodeType": "YulBlock",
															"src": "6809:115:18",
															"statements": [
																{
																	"nativeSrc": "6824:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:18",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6854:60:18",
																	"nodeType": "YulAssignment",
																	"src": "6854:60:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6886:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6897:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6882:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:18"
																				},
																				"nativeSrc": "6882:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6906:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6864:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:18"
																		},
																		"nativeSrc": "6864:50:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6854:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6463:468:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6505:9:18",
														"nodeType": "YulTypedName",
														"src": "6505:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6516:7:18",
														"nodeType": "YulTypedName",
														"src": "6516:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6528:6:18",
														"nodeType": "YulTypedName",
														"src": "6528:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6536:6:18",
														"nodeType": "YulTypedName",
														"src": "6536:6:18",
														"type": ""
													}
												],
												"src": "6463:468:18"
											},
											{
												"body": {
													"nativeSrc": "7026:28:18",
													"nodeType": "YulBlock",
													"src": "7026:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7043:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7046:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7036:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:18"
																},
																"nativeSrc": "7036:12:18",
																"nodeType": "YulFunctionCall",
																"src": "7036:12:18"
															},
															"nativeSrc": "7036:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6937:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:18"
											},
											{
												"body": {
													"nativeSrc": "7149:28:18",
													"nodeType": "YulBlock",
													"src": "7149:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7166:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7169:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7159:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:18"
																},
																"nativeSrc": "7159:12:18",
																"nodeType": "YulFunctionCall",
																"src": "7159:12:18"
															},
															"nativeSrc": "7159:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:18"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7060:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:18"
											},
											{
												"body": {
													"nativeSrc": "7211:152:18",
													"nodeType": "YulBlock",
													"src": "7211:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7228:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:77:18",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7221:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:18"
																},
																"nativeSrc": "7221:88:18",
																"nodeType": "YulFunctionCall",
																"src": "7221:88:18"
															},
															"nativeSrc": "7221:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7325:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7318:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:18"
																},
																"nativeSrc": "7318:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7318:15:18"
															},
															"nativeSrc": "7318:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7349:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7342:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:18"
																},
																"nativeSrc": "7342:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7342:15:18"
															},
															"nativeSrc": "7342:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7183:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:18"
											},
											{
												"body": {
													"nativeSrc": "7412:238:18",
													"nodeType": "YulBlock",
													"src": "7412:238:18",
													"statements": [
														{
															"nativeSrc": "7422:58:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7444:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7474:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7452:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:18"
																		},
																		"nativeSrc": "7452:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7440:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:18"
																},
																"nativeSrc": "7440:40:18",
																"nodeType": "YulFunctionCall",
																"src": "7440:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7426:10:18",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7591:22:18",
																"nodeType": "YulBlock",
																"src": "7591:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7593:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:18"
																			},
																			"nativeSrc": "7593:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:18"
																		},
																		"nativeSrc": "7593:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7534:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7546:18:18",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7531:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:18"
																		},
																		"nativeSrc": "7531:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7570:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7582:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7567:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:18"
																		},
																		"nativeSrc": "7567:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7528:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:18"
																},
																"nativeSrc": "7528:62:18",
																"nodeType": "YulFunctionCall",
																"src": "7528:62:18"
															},
															"nativeSrc": "7525:88:18",
															"nodeType": "YulIf",
															"src": "7525:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7629:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7633:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7622:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:18"
																},
																"nativeSrc": "7622:22:18",
																"nodeType": "YulFunctionCall",
																"src": "7622:22:18"
															},
															"nativeSrc": "7622:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:18"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7369:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7398:6:18",
														"nodeType": "YulTypedName",
														"src": "7398:6:18",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7406:4:18",
														"nodeType": "YulTypedName",
														"src": "7406:4:18",
														"type": ""
													}
												],
												"src": "7369:281:18"
											},
											{
												"body": {
													"nativeSrc": "7697:88:18",
													"nodeType": "YulBlock",
													"src": "7697:88:18",
													"statements": [
														{
															"nativeSrc": "7707:30:18",
															"nodeType": "YulAssignment",
															"src": "7707:30:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7717:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:18"
																},
																"nativeSrc": "7717:20:18",
																"nodeType": "YulFunctionCall",
																"src": "7717:20:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7707:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7766:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:18"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7774:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:18"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7746:19:18",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:18"
																},
																"nativeSrc": "7746:33:18",
																"nodeType": "YulFunctionCall",
																"src": "7746:33:18"
															},
															"nativeSrc": "7746:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:18"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7656:129:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7681:4:18",
														"nodeType": "YulTypedName",
														"src": "7681:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7690:6:18",
														"nodeType": "YulTypedName",
														"src": "7690:6:18",
														"type": ""
													}
												],
												"src": "7656:129:18"
											},
											{
												"body": {
													"nativeSrc": "7857:241:18",
													"nodeType": "YulBlock",
													"src": "7857:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "7962:22:18",
																"nodeType": "YulBlock",
																"src": "7962:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7964:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:18"
																			},
																			"nativeSrc": "7964:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:18"
																		},
																		"nativeSrc": "7964:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7942:18:18",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7931:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:18"
																},
																"nativeSrc": "7931:30:18",
																"nodeType": "YulFunctionCall",
																"src": "7931:30:18"
															},
															"nativeSrc": "7928:56:18",
															"nodeType": "YulIf",
															"src": "7928:56:18"
														},
														{
															"nativeSrc": "7994:37:18",
															"nodeType": "YulAssignment",
															"src": "7994:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8024:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8002:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:18"
																},
																"nativeSrc": "8002:29:18",
																"nodeType": "YulFunctionCall",
																"src": "8002:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7994:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:18"
																}
															]
														},
														{
															"nativeSrc": "8068:23:18",
															"nodeType": "YulAssignment",
															"src": "8068:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8080:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:4:18",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8076:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:18"
																},
																"nativeSrc": "8076:15:18",
																"nodeType": "YulFunctionCall",
																"src": "8076:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8068:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7791:307:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7841:6:18",
														"nodeType": "YulTypedName",
														"src": "7841:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7852:4:18",
														"nodeType": "YulTypedName",
														"src": "7852:4:18",
														"type": ""
													}
												],
												"src": "7791:307:18"
											},
											{
												"body": {
													"nativeSrc": "8168:82:18",
													"nodeType": "YulBlock",
													"src": "8168:82:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8191:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8196:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8201:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8178:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:18"
																},
																"nativeSrc": "8178:30:18",
																"nodeType": "YulFunctionCall",
																"src": "8178:30:18"
															},
															"nativeSrc": "8178:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8228:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8233:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:18"
																		},
																		"nativeSrc": "8224:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:18"
																},
																"nativeSrc": "8217:27:18",
																"nodeType": "YulFunctionCall",
																"src": "8217:27:18"
															},
															"nativeSrc": "8217:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:18"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8104:146:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8150:3:18",
														"nodeType": "YulTypedName",
														"src": "8150:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8155:3:18",
														"nodeType": "YulTypedName",
														"src": "8155:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8160:6:18",
														"nodeType": "YulTypedName",
														"src": "8160:6:18",
														"type": ""
													}
												],
												"src": "8104:146:18"
											},
											{
												"body": {
													"nativeSrc": "8339:340:18",
													"nodeType": "YulBlock",
													"src": "8339:340:18",
													"statements": [
														{
															"nativeSrc": "8349:74:18",
															"nodeType": "YulAssignment",
															"src": "8349:74:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8415:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8374:40:18",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:18"
																		},
																		"nativeSrc": "8374:48:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8358:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:18"
																},
																"nativeSrc": "8358:65:18",
																"nodeType": "YulFunctionCall",
																"src": "8358:65:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8349:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8439:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8446:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:18"
																},
																"nativeSrc": "8432:21:18",
																"nodeType": "YulFunctionCall",
																"src": "8432:21:18"
															},
															"nativeSrc": "8432:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:18"
														},
														{
															"nativeSrc": "8462:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8477:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:4:18",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8473:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:18"
																},
																"nativeSrc": "8473:16:18",
																"nodeType": "YulFunctionCall",
																"src": "8473:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8466:3:18",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8527:83:18",
																"nodeType": "YulBlock",
																"src": "8527:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8529:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:18"
																			},
																			"nativeSrc": "8529:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:18"
																		},
																		"nativeSrc": "8529:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8508:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8513:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8504:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:18"
																		},
																		"nativeSrc": "8504:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8522:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8501:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:18"
																},
																"nativeSrc": "8501:25:18",
																"nodeType": "YulFunctionCall",
																"src": "8501:25:18"
															},
															"nativeSrc": "8498:112:18",
															"nodeType": "YulIf",
															"src": "8498:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8656:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8661:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8666:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8619:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:18"
																},
																"nativeSrc": "8619:54:18",
																"nodeType": "YulFunctionCall",
																"src": "8619:54:18"
															},
															"nativeSrc": "8619:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8256:423:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8312:3:18",
														"nodeType": "YulTypedName",
														"src": "8312:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8317:6:18",
														"nodeType": "YulTypedName",
														"src": "8317:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8325:3:18",
														"nodeType": "YulTypedName",
														"src": "8325:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8333:5:18",
														"nodeType": "YulTypedName",
														"src": "8333:5:18",
														"type": ""
													}
												],
												"src": "8256:423:18"
											},
											{
												"body": {
													"nativeSrc": "8759:277:18",
													"nodeType": "YulBlock",
													"src": "8759:277:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8808:83:18",
																"nodeType": "YulBlock",
																"src": "8808:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8810:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:18"
																			},
																			"nativeSrc": "8810:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:18"
																		},
																		"nativeSrc": "8810:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8787:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8795:4:18",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8783:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:18"
																				},
																				"nativeSrc": "8783:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8802:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8779:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:18"
																		},
																		"nativeSrc": "8779:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8772:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:18"
																},
																"nativeSrc": "8772:35:18",
																"nodeType": "YulFunctionCall",
																"src": "8772:35:18"
															},
															"nativeSrc": "8769:122:18",
															"nodeType": "YulIf",
															"src": "8769:122:18"
														},
														{
															"nativeSrc": "8900:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8927:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8914:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:18"
																},
																"nativeSrc": "8914:20:18",
																"nodeType": "YulFunctionCall",
																"src": "8914:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8904:6:18",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8943:87:18",
															"nodeType": "YulAssignment",
															"src": "8943:87:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9003:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9011:4:18",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8999:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:18"
																		},
																		"nativeSrc": "8999:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9018:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9026:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8952:46:18",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:18"
																},
																"nativeSrc": "8952:78:18",
																"nodeType": "YulFunctionCall",
																"src": "8952:78:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8943:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8698:338:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8737:6:18",
														"nodeType": "YulTypedName",
														"src": "8737:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8745:3:18",
														"nodeType": "YulTypedName",
														"src": "8745:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8753:5:18",
														"nodeType": "YulTypedName",
														"src": "8753:5:18",
														"type": ""
													}
												],
												"src": "8698:338:18"
											},
											{
												"body": {
													"nativeSrc": "9168:817:18",
													"nodeType": "YulBlock",
													"src": "9168:817:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:18",
																"nodeType": "YulBlock",
																"src": "9215:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:18"
																			},
																			"nativeSrc": "9217:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:18"
																		},
																		"nativeSrc": "9217:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9189:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9198:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9185:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:18"
																		},
																		"nativeSrc": "9185:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9210:3:18",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9181:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:18"
																},
																"nativeSrc": "9181:33:18",
																"nodeType": "YulFunctionCall",
																"src": "9181:33:18"
															},
															"nativeSrc": "9178:120:18",
															"nodeType": "YulIf",
															"src": "9178:120:18"
														},
														{
															"nativeSrc": "9308:117:18",
															"nodeType": "YulBlock",
															"src": "9308:117:18",
															"statements": [
																{
																	"nativeSrc": "9323:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:18",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:18",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:18"
																				},
																				"nativeSrc": "9383:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:18"
																		},
																		"nativeSrc": "9362:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:118:18",
															"nodeType": "YulBlock",
															"src": "9435:118:18",
															"statements": [
																{
																	"nativeSrc": "9450:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:63:18",
																	"nodeType": "YulAssignment",
																	"src": "9480:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9515:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9526:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9511:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:18"
																				},
																				"nativeSrc": "9511:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9535:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9490:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:18"
																		},
																		"nativeSrc": "9490:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9563:118:18",
															"nodeType": "YulBlock",
															"src": "9563:118:18",
															"statements": [
																{
																	"nativeSrc": "9578:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9592:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:18",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9582:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9608:63:18",
																	"nodeType": "YulAssignment",
																	"src": "9608:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9643:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9654:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9639:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:18"
																				},
																				"nativeSrc": "9639:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9663:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9618:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:18"
																		},
																		"nativeSrc": "9618:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9608:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9691:287:18",
															"nodeType": "YulBlock",
															"src": "9691:287:18",
															"statements": [
																{
																	"nativeSrc": "9706:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9737:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9748:2:18",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:18",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9733:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:18"
																				},
																				"nativeSrc": "9733:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9720:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:18"
																		},
																		"nativeSrc": "9720:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9710:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9799:83:18",
																		"nodeType": "YulBlock",
																		"src": "9799:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9801:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:18"
																					},
																					"nativeSrc": "9801:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:18"
																				},
																				"nativeSrc": "9801:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9771:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9779:18:18",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9768:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:18"
																		},
																		"nativeSrc": "9768:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:18"
																	},
																	"nativeSrc": "9765:117:18",
																	"nodeType": "YulIf",
																	"src": "9765:117:18"
																},
																{
																	"nativeSrc": "9896:72:18",
																	"nodeType": "YulAssignment",
																	"src": "9896:72:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9940:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9951:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9936:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:18"
																				},
																				"nativeSrc": "9936:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9960:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9906:29:18",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:18"
																		},
																		"nativeSrc": "9906:62:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:18"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9896:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9042:943:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9114:9:18",
														"nodeType": "YulTypedName",
														"src": "9114:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9125:7:18",
														"nodeType": "YulTypedName",
														"src": "9125:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9137:6:18",
														"nodeType": "YulTypedName",
														"src": "9137:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9145:6:18",
														"nodeType": "YulTypedName",
														"src": "9145:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9153:6:18",
														"nodeType": "YulTypedName",
														"src": "9153:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9161:6:18",
														"nodeType": "YulTypedName",
														"src": "9161:6:18",
														"type": ""
													}
												],
												"src": "9042:943:18"
											},
											{
												"body": {
													"nativeSrc": "10058:241:18",
													"nodeType": "YulBlock",
													"src": "10058:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10163:22:18",
																"nodeType": "YulBlock",
																"src": "10163:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10165:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "10165:16:18"
																			},
																			"nativeSrc": "10165:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10165:18:18"
																		},
																		"nativeSrc": "10165:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10135:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10135:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10143:18:18",
																		"nodeType": "YulLiteral",
																		"src": "10143:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10132:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10132:2:18"
																},
																"nativeSrc": "10132:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10132:30:18"
															},
															"nativeSrc": "10129:56:18",
															"nodeType": "YulIf",
															"src": "10129:56:18"
														},
														{
															"nativeSrc": "10195:37:18",
															"nodeType": "YulAssignment",
															"src": "10195:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10225:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10225:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10203:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "10203:21:18"
																},
																"nativeSrc": "10203:29:18",
																"nodeType": "YulFunctionCall",
																"src": "10203:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10195:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10195:4:18"
																}
															]
														},
														{
															"nativeSrc": "10269:23:18",
															"nodeType": "YulAssignment",
															"src": "10269:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10281:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "10281:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10287:4:18",
																		"nodeType": "YulLiteral",
																		"src": "10287:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10277:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10277:3:18"
																},
																"nativeSrc": "10277:15:18",
																"nodeType": "YulFunctionCall",
																"src": "10277:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10269:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10269:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "9991:308:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10042:6:18",
														"nodeType": "YulTypedName",
														"src": "10042:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10053:4:18",
														"nodeType": "YulTypedName",
														"src": "10053:4:18",
														"type": ""
													}
												],
												"src": "9991:308:18"
											},
											{
												"body": {
													"nativeSrc": "10389:341:18",
													"nodeType": "YulBlock",
													"src": "10389:341:18",
													"statements": [
														{
															"nativeSrc": "10399:75:18",
															"nodeType": "YulAssignment",
															"src": "10399:75:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10466:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10466:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "10424:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "10424:41:18"
																		},
																		"nativeSrc": "10424:49:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10424:49:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10408:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "10408:15:18"
																},
																"nativeSrc": "10408:66:18",
																"nodeType": "YulFunctionCall",
																"src": "10408:66:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10399:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "10399:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10490:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "10490:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10497:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10497:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10483:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10483:6:18"
																},
																"nativeSrc": "10483:21:18",
																"nodeType": "YulFunctionCall",
																"src": "10483:21:18"
															},
															"nativeSrc": "10483:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "10483:21:18"
														},
														{
															"nativeSrc": "10513:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "10513:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10528:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "10528:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:18",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10524:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10524:3:18"
																},
																"nativeSrc": "10524:16:18",
																"nodeType": "YulFunctionCall",
																"src": "10524:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10517:3:18",
																	"nodeType": "YulTypedName",
																	"src": "10517:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10578:83:18",
																"nodeType": "YulBlock",
																"src": "10578:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10580:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10580:77:18"
																			},
																			"nativeSrc": "10580:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10580:79:18"
																		},
																		"nativeSrc": "10580:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10580:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10559:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10559:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10564:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10564:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10555:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10555:3:18"
																		},
																		"nativeSrc": "10555:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10555:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10573:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10573:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10552:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10552:2:18"
																},
																"nativeSrc": "10552:25:18",
																"nodeType": "YulFunctionCall",
																"src": "10552:25:18"
															},
															"nativeSrc": "10549:112:18",
															"nodeType": "YulIf",
															"src": "10549:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10707:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10707:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10712:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10712:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10717:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10717:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10670:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "10670:36:18"
																},
																"nativeSrc": "10670:54:18",
																"nodeType": "YulFunctionCall",
																"src": "10670:54:18"
															},
															"nativeSrc": "10670:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "10670:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "10305:425:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10362:3:18",
														"nodeType": "YulTypedName",
														"src": "10362:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10367:6:18",
														"nodeType": "YulTypedName",
														"src": "10367:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10375:3:18",
														"nodeType": "YulTypedName",
														"src": "10375:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10383:5:18",
														"nodeType": "YulTypedName",
														"src": "10383:5:18",
														"type": ""
													}
												],
												"src": "10305:425:18"
											},
											{
												"body": {
													"nativeSrc": "10812:278:18",
													"nodeType": "YulBlock",
													"src": "10812:278:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10861:83:18",
																"nodeType": "YulBlock",
																"src": "10861:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10863:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "10863:77:18"
																			},
																			"nativeSrc": "10863:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10863:79:18"
																		},
																		"nativeSrc": "10863:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10863:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10840:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10840:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10848:4:18",
																						"nodeType": "YulLiteral",
																						"src": "10848:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10836:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10836:3:18"
																				},
																				"nativeSrc": "10836:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10836:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10855:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10855:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10832:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10832:3:18"
																		},
																		"nativeSrc": "10832:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10832:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10825:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10825:6:18"
																},
																"nativeSrc": "10825:35:18",
																"nodeType": "YulFunctionCall",
																"src": "10825:35:18"
															},
															"nativeSrc": "10822:122:18",
															"nodeType": "YulIf",
															"src": "10822:122:18"
														},
														{
															"nativeSrc": "10953:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "10953:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10980:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10980:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10967:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "10967:12:18"
																},
																"nativeSrc": "10967:20:18",
																"nodeType": "YulFunctionCall",
																"src": "10967:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10957:6:18",
																	"nodeType": "YulTypedName",
																	"src": "10957:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10996:88:18",
															"nodeType": "YulAssignment",
															"src": "10996:88:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11057:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11057:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11065:4:18",
																				"nodeType": "YulLiteral",
																				"src": "11065:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11053:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11053:3:18"
																		},
																		"nativeSrc": "11053:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11053:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11072:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11072:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11080:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11080:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "11005:47:18",
																	"nodeType": "YulIdentifier",
																	"src": "11005:47:18"
																},
																"nativeSrc": "11005:79:18",
																"nodeType": "YulFunctionCall",
																"src": "11005:79:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10996:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "10996:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "10750:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10790:6:18",
														"nodeType": "YulTypedName",
														"src": "10790:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10798:3:18",
														"nodeType": "YulTypedName",
														"src": "10798:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10806:5:18",
														"nodeType": "YulTypedName",
														"src": "10806:5:18",
														"type": ""
													}
												],
												"src": "10750:340:18"
											},
											{
												"body": {
													"nativeSrc": "11172:433:18",
													"nodeType": "YulBlock",
													"src": "11172:433:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11218:83:18",
																"nodeType": "YulBlock",
																"src": "11218:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11220:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "11220:77:18"
																			},
																			"nativeSrc": "11220:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11220:79:18"
																		},
																		"nativeSrc": "11220:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11220:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11193:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11193:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11202:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11202:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11189:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11189:3:18"
																		},
																		"nativeSrc": "11189:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11189:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11214:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11214:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11185:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11185:3:18"
																},
																"nativeSrc": "11185:32:18",
																"nodeType": "YulFunctionCall",
																"src": "11185:32:18"
															},
															"nativeSrc": "11182:119:18",
															"nodeType": "YulIf",
															"src": "11182:119:18"
														},
														{
															"nativeSrc": "11311:287:18",
															"nodeType": "YulBlock",
															"src": "11311:287:18",
															"statements": [
																{
																	"nativeSrc": "11326:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11326:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11357:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11357:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11368:1:18",
																						"nodeType": "YulLiteral",
																						"src": "11368:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11353:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11353:3:18"
																				},
																				"nativeSrc": "11353:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11353:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11340:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "11340:12:18"
																		},
																		"nativeSrc": "11340:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11340:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11330:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11330:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11418:83:18",
																		"nodeType": "YulBlock",
																		"src": "11418:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11420:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "11420:77:18"
																					},
																					"nativeSrc": "11420:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11420:79:18"
																				},
																				"nativeSrc": "11420:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "11420:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11390:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11390:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11398:18:18",
																				"nodeType": "YulLiteral",
																				"src": "11398:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11387:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "11387:2:18"
																		},
																		"nativeSrc": "11387:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11387:30:18"
																	},
																	"nativeSrc": "11384:117:18",
																	"nodeType": "YulIf",
																	"src": "11384:117:18"
																},
																{
																	"nativeSrc": "11515:73:18",
																	"nodeType": "YulAssignment",
																	"src": "11515:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11560:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11560:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11571:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11571:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11556:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11556:3:18"
																				},
																				"nativeSrc": "11556:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11556:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11580:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11580:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "11525:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "11525:30:18"
																		},
																		"nativeSrc": "11525:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11525:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11515:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11515:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "11096:509:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11142:9:18",
														"nodeType": "YulTypedName",
														"src": "11142:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11153:7:18",
														"nodeType": "YulTypedName",
														"src": "11153:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11165:6:18",
														"nodeType": "YulTypedName",
														"src": "11165:6:18",
														"type": ""
													}
												],
												"src": "11096:509:18"
											},
											{
												"body": {
													"nativeSrc": "11694:391:18",
													"nodeType": "YulBlock",
													"src": "11694:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11740:83:18",
																"nodeType": "YulBlock",
																"src": "11740:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11742:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "11742:77:18"
																			},
																			"nativeSrc": "11742:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11742:79:18"
																		},
																		"nativeSrc": "11742:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11742:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11715:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11715:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11724:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11724:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11711:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11711:3:18"
																		},
																		"nativeSrc": "11711:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11711:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11736:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11736:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11707:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11707:3:18"
																},
																"nativeSrc": "11707:32:18",
																"nodeType": "YulFunctionCall",
																"src": "11707:32:18"
															},
															"nativeSrc": "11704:119:18",
															"nodeType": "YulIf",
															"src": "11704:119:18"
														},
														{
															"nativeSrc": "11833:117:18",
															"nodeType": "YulBlock",
															"src": "11833:117:18",
															"statements": [
																{
																	"nativeSrc": "11848:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11848:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11862:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11862:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11852:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11852:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11877:63:18",
																	"nodeType": "YulAssignment",
																	"src": "11877:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11912:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "11912:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11923:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "11923:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11908:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11908:3:18"
																				},
																				"nativeSrc": "11908:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11908:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11932:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11932:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11887:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "11887:20:18"
																		},
																		"nativeSrc": "11887:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11887:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11877:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "11877:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11960:118:18",
															"nodeType": "YulBlock",
															"src": "11960:118:18",
															"statements": [
																{
																	"nativeSrc": "11975:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11975:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11989:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11989:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11979:6:18",
																			"nodeType": "YulTypedName",
																			"src": "11979:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12005:63:18",
																	"nodeType": "YulAssignment",
																	"src": "12005:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12040:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "12040:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12051:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12051:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12036:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12036:3:18"
																				},
																				"nativeSrc": "12036:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12036:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12060:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12060:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12015:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "12015:20:18"
																		},
																		"nativeSrc": "12015:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12015:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12005:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "12005:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11611:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11656:9:18",
														"nodeType": "YulTypedName",
														"src": "11656:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11667:7:18",
														"nodeType": "YulTypedName",
														"src": "11667:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11679:6:18",
														"nodeType": "YulTypedName",
														"src": "11679:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11687:6:18",
														"nodeType": "YulTypedName",
														"src": "11687:6:18",
														"type": ""
													}
												],
												"src": "11611:474:18"
											},
											{
												"body": {
													"nativeSrc": "12123:28:18",
													"nodeType": "YulBlock",
													"src": "12123:28:18",
													"statements": [
														{
															"nativeSrc": "12133:12:18",
															"nodeType": "YulAssignment",
															"src": "12133:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "12140:5:18",
																"nodeType": "YulIdentifier",
																"src": "12140:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12133:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12133:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "12091:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12109:5:18",
														"nodeType": "YulTypedName",
														"src": "12109:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12119:3:18",
														"nodeType": "YulTypedName",
														"src": "12119:3:18",
														"type": ""
													}
												],
												"src": "12091:60:18"
											},
											{
												"body": {
													"nativeSrc": "12217:82:18",
													"nodeType": "YulBlock",
													"src": "12217:82:18",
													"statements": [
														{
															"nativeSrc": "12227:66:18",
															"nodeType": "YulAssignment",
															"src": "12227:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12285:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "12285:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "12267:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "12267:17:18"
																				},
																				"nativeSrc": "12267:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12267:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "12258:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "12258:8:18"
																		},
																		"nativeSrc": "12258:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12258:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "12240:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "12240:17:18"
																},
																"nativeSrc": "12240:53:18",
																"nodeType": "YulFunctionCall",
																"src": "12240:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12227:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "12227:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "12157:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12197:5:18",
														"nodeType": "YulTypedName",
														"src": "12197:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12207:9:18",
														"nodeType": "YulTypedName",
														"src": "12207:9:18",
														"type": ""
													}
												],
												"src": "12157:142:18"
											},
											{
												"body": {
													"nativeSrc": "12365:66:18",
													"nodeType": "YulBlock",
													"src": "12365:66:18",
													"statements": [
														{
															"nativeSrc": "12375:50:18",
															"nodeType": "YulAssignment",
															"src": "12375:50:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12419:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12419:5:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "12388:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "12388:30:18"
																},
																"nativeSrc": "12388:37:18",
																"nodeType": "YulFunctionCall",
																"src": "12388:37:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12375:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "12375:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "12305:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12345:5:18",
														"nodeType": "YulTypedName",
														"src": "12345:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12355:9:18",
														"nodeType": "YulTypedName",
														"src": "12355:9:18",
														"type": ""
													}
												],
												"src": "12305:126:18"
											},
											{
												"body": {
													"nativeSrc": "12534:66:18",
													"nodeType": "YulBlock",
													"src": "12534:66:18",
													"statements": [
														{
															"nativeSrc": "12544:50:18",
															"nodeType": "YulAssignment",
															"src": "12544:50:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12588:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "12588:5:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "12557:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "12557:30:18"
																},
																"nativeSrc": "12557:37:18",
																"nodeType": "YulFunctionCall",
																"src": "12557:37:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12544:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "12544:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ITradeManagementRawMaterials_$3137_to_t_address",
												"nativeSrc": "12437:163:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12514:5:18",
														"nodeType": "YulTypedName",
														"src": "12514:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12524:9:18",
														"nodeType": "YulTypedName",
														"src": "12524:9:18",
														"type": ""
													}
												],
												"src": "12437:163:18"
											},
											{
												"body": {
													"nativeSrc": "12708:103:18",
													"nodeType": "YulBlock",
													"src": "12708:103:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12725:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12725:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12798:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "12798:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ITradeManagementRawMaterials_$3137_to_t_address",
																			"nativeSrc": "12730:67:18",
																			"nodeType": "YulIdentifier",
																			"src": "12730:67:18"
																		},
																		"nativeSrc": "12730:74:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12730:74:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12718:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12718:6:18"
																},
																"nativeSrc": "12718:87:18",
																"nodeType": "YulFunctionCall",
																"src": "12718:87:18"
															},
															"nativeSrc": "12718:87:18",
															"nodeType": "YulExpressionStatement",
															"src": "12718:87:18"
														}
													]
												},
												"name": "abi_encode_t_contract$_ITradeManagementRawMaterials_$3137_to_t_address_fromStack",
												"nativeSrc": "12606:205:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12696:5:18",
														"nodeType": "YulTypedName",
														"src": "12696:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12703:3:18",
														"nodeType": "YulTypedName",
														"src": "12703:3:18",
														"type": ""
													}
												],
												"src": "12606:205:18"
											},
											{
												"body": {
													"nativeSrc": "12952:161:18",
													"nodeType": "YulBlock",
													"src": "12952:161:18",
													"statements": [
														{
															"nativeSrc": "12962:26:18",
															"nodeType": "YulAssignment",
															"src": "12962:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12974:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12974:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12985:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12985:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12970:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12970:3:18"
																},
																"nativeSrc": "12970:18:18",
																"nodeType": "YulFunctionCall",
																"src": "12970:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12962:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12962:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13079:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13079:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13092:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13092:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13103:1:18",
																				"nodeType": "YulLiteral",
																				"src": "13103:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13088:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13088:3:18"
																		},
																		"nativeSrc": "13088:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13088:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ITradeManagementRawMaterials_$3137_to_t_address_fromStack",
																	"nativeSrc": "12998:80:18",
																	"nodeType": "YulIdentifier",
																	"src": "12998:80:18"
																},
																"nativeSrc": "12998:108:18",
																"nodeType": "YulFunctionCall",
																"src": "12998:108:18"
															},
															"nativeSrc": "12998:108:18",
															"nodeType": "YulExpressionStatement",
															"src": "12998:108:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ITradeManagementRawMaterials_$3137__to_t_address__fromStack_reversed",
												"nativeSrc": "12817:296:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12924:9:18",
														"nodeType": "YulTypedName",
														"src": "12924:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12936:6:18",
														"nodeType": "YulTypedName",
														"src": "12936:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12947:4:18",
														"nodeType": "YulTypedName",
														"src": "12947:4:18",
														"type": ""
													}
												],
												"src": "12817:296:18"
											},
											{
												"body": {
													"nativeSrc": "13147:152:18",
													"nodeType": "YulBlock",
													"src": "13147:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13164:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13164:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13167:77:18",
																		"nodeType": "YulLiteral",
																		"src": "13167:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13157:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13157:6:18"
																},
																"nativeSrc": "13157:88:18",
																"nodeType": "YulFunctionCall",
																"src": "13157:88:18"
															},
															"nativeSrc": "13157:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "13157:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13261:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13261:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13264:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13264:4:18",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13254:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13254:6:18"
																},
																"nativeSrc": "13254:15:18",
																"nodeType": "YulFunctionCall",
																"src": "13254:15:18"
															},
															"nativeSrc": "13254:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "13254:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13285:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13285:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13288:4:18",
																		"nodeType": "YulLiteral",
																		"src": "13288:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13278:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13278:6:18"
																},
																"nativeSrc": "13278:15:18",
																"nodeType": "YulFunctionCall",
																"src": "13278:15:18"
															},
															"nativeSrc": "13278:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "13278:15:18"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13119:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "13119:180:18"
											},
											{
												"body": {
													"nativeSrc": "13356:269:18",
													"nodeType": "YulBlock",
													"src": "13356:269:18",
													"statements": [
														{
															"nativeSrc": "13366:22:18",
															"nodeType": "YulAssignment",
															"src": "13366:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13380:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "13380:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13386:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13386:1:18",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13376:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13376:3:18"
																},
																"nativeSrc": "13376:12:18",
																"nodeType": "YulFunctionCall",
																"src": "13376:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13366:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13366:6:18"
																}
															]
														},
														{
															"nativeSrc": "13397:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "13397:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13427:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "13427:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13433:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13433:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13423:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13423:3:18"
																},
																"nativeSrc": "13423:12:18",
																"nodeType": "YulFunctionCall",
																"src": "13423:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13401:18:18",
																	"nodeType": "YulTypedName",
																	"src": "13401:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13474:51:18",
																"nodeType": "YulBlock",
																"src": "13474:51:18",
																"statements": [
																	{
																		"nativeSrc": "13488:27:18",
																		"nodeType": "YulAssignment",
																		"src": "13488:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13502:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "13502:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13510:4:18",
																					"nodeType": "YulLiteral",
																					"src": "13510:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13498:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "13498:3:18"
																			},
																			"nativeSrc": "13498:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13498:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13488:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13488:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13454:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "13454:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13447:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13447:6:18"
																},
																"nativeSrc": "13447:26:18",
																"nodeType": "YulFunctionCall",
																"src": "13447:26:18"
															},
															"nativeSrc": "13444:81:18",
															"nodeType": "YulIf",
															"src": "13444:81:18"
														},
														{
															"body": {
																"nativeSrc": "13577:42:18",
																"nodeType": "YulBlock",
																"src": "13577:42:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13591:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "13591:16:18"
																			},
																			"nativeSrc": "13591:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "13591:18:18"
																		},
																		"nativeSrc": "13591:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "13591:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13541:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "13541:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13564:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "13564:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13572:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13572:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13561:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "13561:2:18"
																		},
																		"nativeSrc": "13561:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13561:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13538:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "13538:2:18"
																},
																"nativeSrc": "13538:38:18",
																"nodeType": "YulFunctionCall",
																"src": "13538:38:18"
															},
															"nativeSrc": "13535:84:18",
															"nodeType": "YulIf",
															"src": "13535:84:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13305:320:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13340:4:18",
														"nodeType": "YulTypedName",
														"src": "13340:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13349:6:18",
														"nodeType": "YulTypedName",
														"src": "13349:6:18",
														"type": ""
													}
												],
												"src": "13305:320:18"
											},
											{
												"body": {
													"nativeSrc": "13785:288:18",
													"nodeType": "YulBlock",
													"src": "13785:288:18",
													"statements": [
														{
															"nativeSrc": "13795:26:18",
															"nodeType": "YulAssignment",
															"src": "13795:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13807:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13807:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13818:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13818:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13803:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13803:3:18"
																},
																"nativeSrc": "13803:18:18",
																"nodeType": "YulFunctionCall",
																"src": "13803:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13795:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13795:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13875:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13875:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13888:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13888:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13899:1:18",
																				"nodeType": "YulLiteral",
																				"src": "13899:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13884:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13884:3:18"
																		},
																		"nativeSrc": "13884:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13884:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13831:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "13831:43:18"
																},
																"nativeSrc": "13831:71:18",
																"nodeType": "YulFunctionCall",
																"src": "13831:71:18"
															},
															"nativeSrc": "13831:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "13831:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13956:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13956:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13969:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13969:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13980:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13980:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13965:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13965:3:18"
																		},
																		"nativeSrc": "13965:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13965:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13912:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "13912:43:18"
																},
																"nativeSrc": "13912:72:18",
																"nodeType": "YulFunctionCall",
																"src": "13912:72:18"
															},
															"nativeSrc": "13912:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "13912:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14038:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14038:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14051:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14051:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14062:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14062:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14047:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14047:3:18"
																		},
																		"nativeSrc": "14047:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14047:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13994:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "13994:43:18"
																},
																"nativeSrc": "13994:72:18",
																"nodeType": "YulFunctionCall",
																"src": "13994:72:18"
															},
															"nativeSrc": "13994:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "13994:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13631:442:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13741:9:18",
														"nodeType": "YulTypedName",
														"src": "13741:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13753:6:18",
														"nodeType": "YulTypedName",
														"src": "13753:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13761:6:18",
														"nodeType": "YulTypedName",
														"src": "13761:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13769:6:18",
														"nodeType": "YulTypedName",
														"src": "13769:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13780:4:18",
														"nodeType": "YulTypedName",
														"src": "13780:4:18",
														"type": ""
													}
												],
												"src": "13631:442:18"
											},
											{
												"body": {
													"nativeSrc": "14193:34:18",
													"nodeType": "YulBlock",
													"src": "14193:34:18",
													"statements": [
														{
															"nativeSrc": "14203:18:18",
															"nodeType": "YulAssignment",
															"src": "14203:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "14218:3:18",
																"nodeType": "YulIdentifier",
																"src": "14218:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14203:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "14203:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14079:148:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14165:3:18",
														"nodeType": "YulTypedName",
														"src": "14165:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14170:6:18",
														"nodeType": "YulTypedName",
														"src": "14170:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14181:11:18",
														"nodeType": "YulTypedName",
														"src": "14181:11:18",
														"type": ""
													}
												],
												"src": "14079:148:18"
											},
											{
												"body": {
													"nativeSrc": "14343:280:18",
													"nodeType": "YulBlock",
													"src": "14343:280:18",
													"statements": [
														{
															"nativeSrc": "14353:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "14353:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14400:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "14400:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14367:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "14367:32:18"
																},
																"nativeSrc": "14367:39:18",
																"nodeType": "YulFunctionCall",
																"src": "14367:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14357:6:18",
																	"nodeType": "YulTypedName",
																	"src": "14357:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14415:96:18",
															"nodeType": "YulAssignment",
															"src": "14415:96:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14499:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14499:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14504:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14504:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14422:76:18",
																	"nodeType": "YulIdentifier",
																	"src": "14422:76:18"
																},
																"nativeSrc": "14422:89:18",
																"nodeType": "YulFunctionCall",
																"src": "14422:89:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14415:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14415:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14559:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "14559:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14566:4:18",
																				"nodeType": "YulLiteral",
																				"src": "14566:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14555:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14555:3:18"
																		},
																		"nativeSrc": "14555:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14555:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14573:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14573:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14578:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14578:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14520:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "14520:34:18"
																},
																"nativeSrc": "14520:65:18",
																"nodeType": "YulFunctionCall",
																"src": "14520:65:18"
															},
															"nativeSrc": "14520:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "14520:65:18"
														},
														{
															"nativeSrc": "14594:23:18",
															"nodeType": "YulAssignment",
															"src": "14594:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14605:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14605:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14610:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14610:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14601:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14601:3:18"
																},
																"nativeSrc": "14601:16:18",
																"nodeType": "YulFunctionCall",
																"src": "14601:16:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14594:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14594:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14233:390:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14324:5:18",
														"nodeType": "YulTypedName",
														"src": "14324:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14331:3:18",
														"nodeType": "YulTypedName",
														"src": "14331:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14339:3:18",
														"nodeType": "YulTypedName",
														"src": "14339:3:18",
														"type": ""
													}
												],
												"src": "14233:390:18"
											},
											{
												"body": {
													"nativeSrc": "14813:251:18",
													"nodeType": "YulBlock",
													"src": "14813:251:18",
													"statements": [
														{
															"nativeSrc": "14824:102:18",
															"nodeType": "YulAssignment",
															"src": "14824:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14913:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "14913:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14922:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14922:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14831:81:18",
																	"nodeType": "YulIdentifier",
																	"src": "14831:81:18"
																},
																"nativeSrc": "14831:95:18",
																"nodeType": "YulFunctionCall",
																"src": "14831:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14824:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14824:3:18"
																}
															]
														},
														{
															"nativeSrc": "14936:102:18",
															"nodeType": "YulAssignment",
															"src": "14936:102:18",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15025:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15025:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15034:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15034:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14943:81:18",
																	"nodeType": "YulIdentifier",
																	"src": "14943:81:18"
																},
																"nativeSrc": "14943:95:18",
																"nodeType": "YulFunctionCall",
																"src": "14943:95:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14936:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14936:3:18"
																}
															]
														},
														{
															"nativeSrc": "15048:10:18",
															"nodeType": "YulAssignment",
															"src": "15048:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "15055:3:18",
																"nodeType": "YulIdentifier",
																"src": "15055:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15048:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15048:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14629:435:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14784:3:18",
														"nodeType": "YulTypedName",
														"src": "14784:3:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14790:6:18",
														"nodeType": "YulTypedName",
														"src": "14790:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14798:6:18",
														"nodeType": "YulTypedName",
														"src": "14798:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14809:3:18",
														"nodeType": "YulTypedName",
														"src": "14809:3:18",
														"type": ""
													}
												],
												"src": "14629:435:18"
											},
											{
												"body": {
													"nativeSrc": "15165:339:18",
													"nodeType": "YulBlock",
													"src": "15165:339:18",
													"statements": [
														{
															"nativeSrc": "15175:75:18",
															"nodeType": "YulAssignment",
															"src": "15175:75:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15242:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15242:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "15200:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "15200:41:18"
																		},
																		"nativeSrc": "15200:49:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15200:49:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "15184:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "15184:15:18"
																},
																"nativeSrc": "15184:66:18",
																"nodeType": "YulFunctionCall",
																"src": "15184:66:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "15175:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "15175:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "15266:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "15266:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15273:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15273:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15259:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15259:6:18"
																},
																"nativeSrc": "15259:21:18",
																"nodeType": "YulFunctionCall",
																"src": "15259:21:18"
															},
															"nativeSrc": "15259:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "15259:21:18"
														},
														{
															"nativeSrc": "15289:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "15289:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "15304:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "15304:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15311:4:18",
																		"nodeType": "YulLiteral",
																		"src": "15311:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15300:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15300:3:18"
																},
																"nativeSrc": "15300:16:18",
																"nodeType": "YulFunctionCall",
																"src": "15300:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "15293:3:18",
																	"nodeType": "YulTypedName",
																	"src": "15293:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15354:83:18",
																"nodeType": "YulBlock",
																"src": "15354:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "15356:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "15356:77:18"
																			},
																			"nativeSrc": "15356:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15356:79:18"
																		},
																		"nativeSrc": "15356:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "15356:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "15335:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "15335:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "15340:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15340:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15331:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15331:3:18"
																		},
																		"nativeSrc": "15331:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15331:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15349:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15349:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15328:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "15328:2:18"
																},
																"nativeSrc": "15328:25:18",
																"nodeType": "YulFunctionCall",
																"src": "15328:25:18"
															},
															"nativeSrc": "15325:112:18",
															"nodeType": "YulIf",
															"src": "15325:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "15481:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15481:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "15486:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15486:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15491:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15491:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "15446:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "15446:34:18"
																},
																"nativeSrc": "15446:52:18",
																"nodeType": "YulFunctionCall",
																"src": "15446:52:18"
															},
															"nativeSrc": "15446:52:18",
															"nodeType": "YulExpressionStatement",
															"src": "15446:52:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "15070:434:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "15138:3:18",
														"nodeType": "YulTypedName",
														"src": "15138:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15143:6:18",
														"nodeType": "YulTypedName",
														"src": "15143:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15151:3:18",
														"nodeType": "YulTypedName",
														"src": "15151:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "15159:5:18",
														"nodeType": "YulTypedName",
														"src": "15159:5:18",
														"type": ""
													}
												],
												"src": "15070:434:18"
											},
											{
												"body": {
													"nativeSrc": "15597:282:18",
													"nodeType": "YulBlock",
													"src": "15597:282:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "15646:83:18",
																"nodeType": "YulBlock",
																"src": "15646:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "15648:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "15648:77:18"
																			},
																			"nativeSrc": "15648:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "15648:79:18"
																		},
																		"nativeSrc": "15648:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "15648:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "15625:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "15625:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15633:4:18",
																						"nodeType": "YulLiteral",
																						"src": "15633:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15621:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "15621:3:18"
																				},
																				"nativeSrc": "15621:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "15621:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "15640:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "15640:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "15617:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15617:3:18"
																		},
																		"nativeSrc": "15617:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15617:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15610:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15610:6:18"
																},
																"nativeSrc": "15610:35:18",
																"nodeType": "YulFunctionCall",
																"src": "15610:35:18"
															},
															"nativeSrc": "15607:122:18",
															"nodeType": "YulIf",
															"src": "15607:122:18"
														},
														{
															"nativeSrc": "15738:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "15738:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15758:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15758:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15752:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "15752:5:18"
																},
																"nativeSrc": "15752:13:18",
																"nodeType": "YulFunctionCall",
																"src": "15752:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15742:6:18",
																	"nodeType": "YulTypedName",
																	"src": "15742:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15774:99:18",
															"nodeType": "YulAssignment",
															"src": "15774:99:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "15846:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15846:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15854:4:18",
																				"nodeType": "YulLiteral",
																				"src": "15854:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15842:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15842:3:18"
																		},
																		"nativeSrc": "15842:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15842:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15861:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15861:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15869:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15869:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "15783:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "15783:58:18"
																},
																"nativeSrc": "15783:90:18",
																"nodeType": "YulFunctionCall",
																"src": "15783:90:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "15774:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "15774:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "15524:355:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15575:6:18",
														"nodeType": "YulTypedName",
														"src": "15575:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15583:3:18",
														"nodeType": "YulTypedName",
														"src": "15583:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "15591:5:18",
														"nodeType": "YulTypedName",
														"src": "15591:5:18",
														"type": ""
													}
												],
												"src": "15524:355:18"
											},
											{
												"body": {
													"nativeSrc": "15972:437:18",
													"nodeType": "YulBlock",
													"src": "15972:437:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "16018:83:18",
																"nodeType": "YulBlock",
																"src": "16018:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16020:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "16020:77:18"
																			},
																			"nativeSrc": "16020:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "16020:79:18"
																		},
																		"nativeSrc": "16020:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "16020:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15993:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "15993:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16002:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16002:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15989:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15989:3:18"
																		},
																		"nativeSrc": "15989:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15989:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16014:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16014:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15985:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15985:3:18"
																},
																"nativeSrc": "15985:32:18",
																"nodeType": "YulFunctionCall",
																"src": "15985:32:18"
															},
															"nativeSrc": "15982:119:18",
															"nodeType": "YulIf",
															"src": "15982:119:18"
														},
														{
															"nativeSrc": "16111:291:18",
															"nodeType": "YulBlock",
															"src": "16111:291:18",
															"statements": [
																{
																	"nativeSrc": "16126:38:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16126:38:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16150:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "16150:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16161:1:18",
																						"nodeType": "YulLiteral",
																						"src": "16161:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16146:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16146:3:18"
																				},
																				"nativeSrc": "16146:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16146:17:18"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16140:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "16140:5:18"
																		},
																		"nativeSrc": "16140:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16140:24:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16130:6:18",
																			"nodeType": "YulTypedName",
																			"src": "16130:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "16211:83:18",
																		"nodeType": "YulBlock",
																		"src": "16211:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "16213:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "16213:77:18"
																					},
																					"nativeSrc": "16213:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "16213:79:18"
																				},
																				"nativeSrc": "16213:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "16213:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16183:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16183:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16191:18:18",
																				"nodeType": "YulLiteral",
																				"src": "16191:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16180:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "16180:2:18"
																		},
																		"nativeSrc": "16180:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16180:30:18"
																	},
																	"nativeSrc": "16177:117:18",
																	"nodeType": "YulIf",
																	"src": "16177:117:18"
																},
																{
																	"nativeSrc": "16308:84:18",
																	"nodeType": "YulAssignment",
																	"src": "16308:84:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16364:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "16364:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16375:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "16375:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16360:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "16360:3:18"
																				},
																				"nativeSrc": "16360:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "16360:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16384:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "16384:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "16318:41:18",
																			"nodeType": "YulIdentifier",
																			"src": "16318:41:18"
																		},
																		"nativeSrc": "16318:74:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16318:74:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16308:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "16308:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "15885:524:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15942:9:18",
														"nodeType": "YulTypedName",
														"src": "15942:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15953:7:18",
														"nodeType": "YulTypedName",
														"src": "15953:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15965:6:18",
														"nodeType": "YulTypedName",
														"src": "15965:6:18",
														"type": ""
													}
												],
												"src": "15885:524:18"
											},
											{
												"body": {
													"nativeSrc": "16521:136:18",
													"nodeType": "YulBlock",
													"src": "16521:136:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16543:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16543:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16551:1:18",
																				"nodeType": "YulLiteral",
																				"src": "16551:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16539:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16539:3:18"
																		},
																		"nativeSrc": "16539:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16539:14:18"
																	},
																	{
																		"hexValue": "4f6e6c7920617574686f72697a656420737570706c696572732063616e206d69",
																		"kind": "string",
																		"nativeSrc": "16555:34:18",
																		"nodeType": "YulLiteral",
																		"src": "16555:34:18",
																		"type": "",
																		"value": "Only authorized suppliers can mi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16532:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16532:6:18"
																},
																"nativeSrc": "16532:58:18",
																"nodeType": "YulFunctionCall",
																"src": "16532:58:18"
															},
															"nativeSrc": "16532:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "16532:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16611:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16611:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16619:2:18",
																				"nodeType": "YulLiteral",
																				"src": "16619:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16607:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16607:3:18"
																		},
																		"nativeSrc": "16607:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16607:15:18"
																	},
																	{
																		"hexValue": "6e74207061636b616765642070726f64756374204e4654",
																		"kind": "string",
																		"nativeSrc": "16624:25:18",
																		"nodeType": "YulLiteral",
																		"src": "16624:25:18",
																		"type": "",
																		"value": "nt packaged product NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16600:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16600:6:18"
																},
																"nativeSrc": "16600:50:18",
																"nodeType": "YulFunctionCall",
																"src": "16600:50:18"
															},
															"nativeSrc": "16600:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "16600:50:18"
														}
													]
												},
												"name": "store_literal_in_memory_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c",
												"nativeSrc": "16415:242:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16513:6:18",
														"nodeType": "YulTypedName",
														"src": "16513:6:18",
														"type": ""
													}
												],
												"src": "16415:242:18"
											},
											{
												"body": {
													"nativeSrc": "16809:220:18",
													"nodeType": "YulBlock",
													"src": "16809:220:18",
													"statements": [
														{
															"nativeSrc": "16819:74:18",
															"nodeType": "YulAssignment",
															"src": "16819:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16885:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16885:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16890:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16890:2:18",
																		"type": "",
																		"value": "55"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16826:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "16826:58:18"
																},
																"nativeSrc": "16826:67:18",
																"nodeType": "YulFunctionCall",
																"src": "16826:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16819:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16819:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16991:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16991:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c",
																	"nativeSrc": "16902:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "16902:88:18"
																},
																"nativeSrc": "16902:93:18",
																"nodeType": "YulFunctionCall",
																"src": "16902:93:18"
															},
															"nativeSrc": "16902:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "16902:93:18"
														},
														{
															"nativeSrc": "17004:19:18",
															"nodeType": "YulAssignment",
															"src": "17004:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17015:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "17015:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17020:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17020:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17011:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17011:3:18"
																},
																"nativeSrc": "17011:12:18",
																"nodeType": "YulFunctionCall",
																"src": "17011:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17004:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17004:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16663:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16797:3:18",
														"nodeType": "YulTypedName",
														"src": "16797:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16805:3:18",
														"nodeType": "YulTypedName",
														"src": "16805:3:18",
														"type": ""
													}
												],
												"src": "16663:366:18"
											},
											{
												"body": {
													"nativeSrc": "17206:248:18",
													"nodeType": "YulBlock",
													"src": "17206:248:18",
													"statements": [
														{
															"nativeSrc": "17216:26:18",
															"nodeType": "YulAssignment",
															"src": "17216:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17228:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "17228:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17239:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17239:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17224:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17224:3:18"
																},
																"nativeSrc": "17224:18:18",
																"nodeType": "YulFunctionCall",
																"src": "17224:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17216:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "17216:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17263:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17263:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17274:1:18",
																				"nodeType": "YulLiteral",
																				"src": "17274:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17259:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17259:3:18"
																		},
																		"nativeSrc": "17259:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17259:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17282:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "17282:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17288:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17288:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17278:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17278:3:18"
																		},
																		"nativeSrc": "17278:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17278:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17252:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17252:6:18"
																},
																"nativeSrc": "17252:47:18",
																"nodeType": "YulFunctionCall",
																"src": "17252:47:18"
															},
															"nativeSrc": "17252:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "17252:47:18"
														},
														{
															"nativeSrc": "17308:139:18",
															"nodeType": "YulAssignment",
															"src": "17308:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17442:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "17442:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17316:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "17316:124:18"
																},
																"nativeSrc": "17316:131:18",
																"nodeType": "YulFunctionCall",
																"src": "17316:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17308:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "17308:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17035:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17186:9:18",
														"nodeType": "YulTypedName",
														"src": "17186:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17201:4:18",
														"nodeType": "YulTypedName",
														"src": "17201:4:18",
														"type": ""
													}
												],
												"src": "17035:419:18"
											},
											{
												"body": {
													"nativeSrc": "17488:152:18",
													"nodeType": "YulBlock",
													"src": "17488:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17505:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17505:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17508:77:18",
																		"nodeType": "YulLiteral",
																		"src": "17508:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17498:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17498:6:18"
																},
																"nativeSrc": "17498:88:18",
																"nodeType": "YulFunctionCall",
																"src": "17498:88:18"
															},
															"nativeSrc": "17498:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "17498:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17602:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17602:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17605:4:18",
																		"nodeType": "YulLiteral",
																		"src": "17605:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17595:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17595:6:18"
																},
																"nativeSrc": "17595:15:18",
																"nodeType": "YulFunctionCall",
																"src": "17595:15:18"
															},
															"nativeSrc": "17595:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "17595:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17626:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17626:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17629:4:18",
																		"nodeType": "YulLiteral",
																		"src": "17629:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17619:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17619:6:18"
																},
																"nativeSrc": "17619:15:18",
																"nodeType": "YulFunctionCall",
																"src": "17619:15:18"
															},
															"nativeSrc": "17619:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "17619:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "17460:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "17460:180:18"
											},
											{
												"body": {
													"nativeSrc": "17689:190:18",
													"nodeType": "YulBlock",
													"src": "17689:190:18",
													"statements": [
														{
															"nativeSrc": "17699:33:18",
															"nodeType": "YulAssignment",
															"src": "17699:33:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17726:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "17726:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17708:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "17708:17:18"
																},
																"nativeSrc": "17708:24:18",
																"nodeType": "YulFunctionCall",
																"src": "17708:24:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17699:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "17699:5:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17822:22:18",
																"nodeType": "YulBlock",
																"src": "17822:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17824:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "17824:16:18"
																			},
																			"nativeSrc": "17824:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17824:18:18"
																		},
																		"nativeSrc": "17824:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "17824:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17747:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "17747:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17754:66:18",
																		"nodeType": "YulLiteral",
																		"src": "17754:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17744:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "17744:2:18"
																},
																"nativeSrc": "17744:77:18",
																"nodeType": "YulFunctionCall",
																"src": "17744:77:18"
															},
															"nativeSrc": "17741:103:18",
															"nodeType": "YulIf",
															"src": "17741:103:18"
														},
														{
															"nativeSrc": "17853:20:18",
															"nodeType": "YulAssignment",
															"src": "17853:20:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17864:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "17864:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17871:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17871:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17860:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17860:3:18"
																},
																"nativeSrc": "17860:13:18",
																"nodeType": "YulFunctionCall",
																"src": "17860:13:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17853:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17853:3:18"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "17646:233:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17675:5:18",
														"nodeType": "YulTypedName",
														"src": "17675:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17685:3:18",
														"nodeType": "YulTypedName",
														"src": "17685:3:18",
														"type": ""
													}
												],
												"src": "17646:233:18"
											},
											{
												"body": {
													"nativeSrc": "17943:40:18",
													"nodeType": "YulBlock",
													"src": "17943:40:18",
													"statements": [
														{
															"nativeSrc": "17954:22:18",
															"nodeType": "YulAssignment",
															"src": "17954:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17970:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "17970:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17964:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "17964:5:18"
																},
																"nativeSrc": "17964:12:18",
																"nodeType": "YulFunctionCall",
																"src": "17964:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "17954:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "17954:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "17885:98:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17926:5:18",
														"nodeType": "YulTypedName",
														"src": "17926:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "17936:6:18",
														"nodeType": "YulTypedName",
														"src": "17936:6:18",
														"type": ""
													}
												],
												"src": "17885:98:18"
											},
											{
												"body": {
													"nativeSrc": "18084:73:18",
													"nodeType": "YulBlock",
													"src": "18084:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18101:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18101:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18106:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18106:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18094:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18094:6:18"
																},
																"nativeSrc": "18094:19:18",
																"nodeType": "YulFunctionCall",
																"src": "18094:19:18"
															},
															"nativeSrc": "18094:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "18094:19:18"
														},
														{
															"nativeSrc": "18122:29:18",
															"nodeType": "YulAssignment",
															"src": "18122:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18141:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18141:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18146:4:18",
																		"nodeType": "YulLiteral",
																		"src": "18146:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18137:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18137:3:18"
																},
																"nativeSrc": "18137:14:18",
																"nodeType": "YulFunctionCall",
																"src": "18137:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18122:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "18122:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "17989:168:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18056:3:18",
														"nodeType": "YulTypedName",
														"src": "18056:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18061:6:18",
														"nodeType": "YulTypedName",
														"src": "18061:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18072:11:18",
														"nodeType": "YulTypedName",
														"src": "18072:11:18",
														"type": ""
													}
												],
												"src": "17989:168:18"
											},
											{
												"body": {
													"nativeSrc": "18253:283:18",
													"nodeType": "YulBlock",
													"src": "18253:283:18",
													"statements": [
														{
															"nativeSrc": "18263:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "18263:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18309:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "18309:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "18277:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "18277:31:18"
																},
																"nativeSrc": "18277:38:18",
																"nodeType": "YulFunctionCall",
																"src": "18277:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18267:6:18",
																	"nodeType": "YulTypedName",
																	"src": "18267:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18324:77:18",
															"nodeType": "YulAssignment",
															"src": "18324:77:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18389:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18389:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18394:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18394:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "18331:57:18",
																	"nodeType": "YulIdentifier",
																	"src": "18331:57:18"
																},
																"nativeSrc": "18331:70:18",
																"nodeType": "YulFunctionCall",
																"src": "18331:70:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18324:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18324:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18449:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "18449:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18456:4:18",
																				"nodeType": "YulLiteral",
																				"src": "18456:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18445:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18445:3:18"
																		},
																		"nativeSrc": "18445:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18445:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18463:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18463:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18468:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18468:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18410:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "18410:34:18"
																},
																"nativeSrc": "18410:65:18",
																"nodeType": "YulFunctionCall",
																"src": "18410:65:18"
															},
															"nativeSrc": "18410:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "18410:65:18"
														},
														{
															"nativeSrc": "18484:46:18",
															"nodeType": "YulAssignment",
															"src": "18484:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18495:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18495:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "18522:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "18522:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "18500:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "18500:21:18"
																		},
																		"nativeSrc": "18500:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18500:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18491:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18491:3:18"
																},
																"nativeSrc": "18491:39:18",
																"nodeType": "YulFunctionCall",
																"src": "18491:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18484:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18484:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18163:373:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18234:5:18",
														"nodeType": "YulTypedName",
														"src": "18234:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18241:3:18",
														"nodeType": "YulTypedName",
														"src": "18241:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18249:3:18",
														"nodeType": "YulTypedName",
														"src": "18249:3:18",
														"type": ""
													}
												],
												"src": "18163:373:18"
											},
											{
												"body": {
													"nativeSrc": "18742:440:18",
													"nodeType": "YulBlock",
													"src": "18742:440:18",
													"statements": [
														{
															"nativeSrc": "18752:27:18",
															"nodeType": "YulAssignment",
															"src": "18752:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18764:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "18764:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18775:3:18",
																		"nodeType": "YulLiteral",
																		"src": "18775:3:18",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18760:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18760:3:18"
																},
																"nativeSrc": "18760:19:18",
																"nodeType": "YulFunctionCall",
																"src": "18760:19:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18752:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "18752:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18833:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18833:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18846:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18846:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18857:1:18",
																				"nodeType": "YulLiteral",
																				"src": "18857:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18842:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18842:3:18"
																		},
																		"nativeSrc": "18842:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18842:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18789:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "18789:43:18"
																},
																"nativeSrc": "18789:71:18",
																"nodeType": "YulFunctionCall",
																"src": "18789:71:18"
															},
															"nativeSrc": "18789:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "18789:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18914:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18914:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18927:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18927:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18938:2:18",
																				"nodeType": "YulLiteral",
																				"src": "18938:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18923:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18923:3:18"
																		},
																		"nativeSrc": "18923:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18923:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18870:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "18870:43:18"
																},
																"nativeSrc": "18870:72:18",
																"nodeType": "YulFunctionCall",
																"src": "18870:72:18"
															},
															"nativeSrc": "18870:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "18870:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18996:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "18996:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19009:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19009:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19020:2:18",
																				"nodeType": "YulLiteral",
																				"src": "19020:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19005:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19005:3:18"
																		},
																		"nativeSrc": "19005:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19005:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18952:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "18952:43:18"
																},
																"nativeSrc": "18952:72:18",
																"nodeType": "YulFunctionCall",
																"src": "18952:72:18"
															},
															"nativeSrc": "18952:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "18952:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19045:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19045:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19056:2:18",
																				"nodeType": "YulLiteral",
																				"src": "19056:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19041:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19041:3:18"
																		},
																		"nativeSrc": "19041:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19041:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19065:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "19065:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19071:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19071:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19061:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19061:3:18"
																		},
																		"nativeSrc": "19061:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19061:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19034:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19034:6:18"
																},
																"nativeSrc": "19034:48:18",
																"nodeType": "YulFunctionCall",
																"src": "19034:48:18"
															},
															"nativeSrc": "19034:48:18",
															"nodeType": "YulExpressionStatement",
															"src": "19034:48:18"
														},
														{
															"nativeSrc": "19091:84:18",
															"nodeType": "YulAssignment",
															"src": "19091:84:18",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19161:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19161:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "19170:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "19170:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "19099:61:18",
																	"nodeType": "YulIdentifier",
																	"src": "19099:61:18"
																},
																"nativeSrc": "19099:76:18",
																"nodeType": "YulFunctionCall",
																"src": "19099:76:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19091:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19091:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "18542:640:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18690:9:18",
														"nodeType": "YulTypedName",
														"src": "18690:9:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18702:6:18",
														"nodeType": "YulTypedName",
														"src": "18702:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18710:6:18",
														"nodeType": "YulTypedName",
														"src": "18710:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18718:6:18",
														"nodeType": "YulTypedName",
														"src": "18718:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18726:6:18",
														"nodeType": "YulTypedName",
														"src": "18726:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18737:4:18",
														"nodeType": "YulTypedName",
														"src": "18737:4:18",
														"type": ""
													}
												],
												"src": "18542:640:18"
											},
											{
												"body": {
													"nativeSrc": "19250:79:18",
													"nodeType": "YulBlock",
													"src": "19250:79:18",
													"statements": [
														{
															"nativeSrc": "19260:22:18",
															"nodeType": "YulAssignment",
															"src": "19260:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19275:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "19275:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19269:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "19269:5:18"
																},
																"nativeSrc": "19269:13:18",
																"nodeType": "YulFunctionCall",
																"src": "19269:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19260:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "19260:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19317:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "19317:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "19291:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "19291:25:18"
																},
																"nativeSrc": "19291:32:18",
																"nodeType": "YulFunctionCall",
																"src": "19291:32:18"
															},
															"nativeSrc": "19291:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "19291:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "19188:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19228:6:18",
														"nodeType": "YulTypedName",
														"src": "19228:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19236:3:18",
														"nodeType": "YulTypedName",
														"src": "19236:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19244:5:18",
														"nodeType": "YulTypedName",
														"src": "19244:5:18",
														"type": ""
													}
												],
												"src": "19188:141:18"
											},
											{
												"body": {
													"nativeSrc": "19411:273:18",
													"nodeType": "YulBlock",
													"src": "19411:273:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "19457:83:18",
																"nodeType": "YulBlock",
																"src": "19457:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19459:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "19459:77:18"
																			},
																			"nativeSrc": "19459:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "19459:79:18"
																		},
																		"nativeSrc": "19459:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "19459:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19432:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "19432:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19441:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19441:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19428:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19428:3:18"
																		},
																		"nativeSrc": "19428:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19428:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19453:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19453:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19424:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19424:3:18"
																},
																"nativeSrc": "19424:32:18",
																"nodeType": "YulFunctionCall",
																"src": "19424:32:18"
															},
															"nativeSrc": "19421:119:18",
															"nodeType": "YulIf",
															"src": "19421:119:18"
														},
														{
															"nativeSrc": "19550:127:18",
															"nodeType": "YulBlock",
															"src": "19550:127:18",
															"statements": [
																{
																	"nativeSrc": "19565:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19565:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19579:1:18",
																		"nodeType": "YulLiteral",
																		"src": "19579:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19569:6:18",
																			"nodeType": "YulTypedName",
																			"src": "19569:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19594:73:18",
																	"nodeType": "YulAssignment",
																	"src": "19594:73:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19639:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "19639:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19650:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "19650:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19635:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "19635:3:18"
																				},
																				"nativeSrc": "19635:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "19635:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19659:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "19659:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "19604:30:18",
																			"nodeType": "YulIdentifier",
																			"src": "19604:30:18"
																		},
																		"nativeSrc": "19604:63:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19604:63:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19594:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "19594:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "19335:349:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19381:9:18",
														"nodeType": "YulTypedName",
														"src": "19381:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19392:7:18",
														"nodeType": "YulTypedName",
														"src": "19392:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19404:6:18",
														"nodeType": "YulTypedName",
														"src": "19404:6:18",
														"type": ""
													}
												],
												"src": "19335:349:18"
											},
											{
												"body": {
													"nativeSrc": "19744:87:18",
													"nodeType": "YulBlock",
													"src": "19744:87:18",
													"statements": [
														{
															"nativeSrc": "19754:11:18",
															"nodeType": "YulAssignment",
															"src": "19754:11:18",
															"value": {
																"name": "ptr",
																"nativeSrc": "19762:3:18",
																"nodeType": "YulIdentifier",
																"src": "19762:3:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19754:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19754:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19782:1:18",
																		"nodeType": "YulLiteral",
																		"src": "19782:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "19785:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19785:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19775:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19775:6:18"
																},
																"nativeSrc": "19775:14:18",
																"nodeType": "YulFunctionCall",
																"src": "19775:14:18"
															},
															"nativeSrc": "19775:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "19775:14:18"
														},
														{
															"nativeSrc": "19798:26:18",
															"nodeType": "YulAssignment",
															"src": "19798:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19816:1:18",
																		"nodeType": "YulLiteral",
																		"src": "19816:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19819:4:18",
																		"nodeType": "YulLiteral",
																		"src": "19819:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "19806:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "19806:9:18"
																},
																"nativeSrc": "19806:18:18",
																"nodeType": "YulFunctionCall",
																"src": "19806:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19798:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19798:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "19690:141:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "19731:3:18",
														"nodeType": "YulTypedName",
														"src": "19731:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "19739:4:18",
														"nodeType": "YulTypedName",
														"src": "19739:4:18",
														"type": ""
													}
												],
												"src": "19690:141:18"
											},
											{
												"body": {
													"nativeSrc": "19881:49:18",
													"nodeType": "YulBlock",
													"src": "19881:49:18",
													"statements": [
														{
															"nativeSrc": "19891:33:18",
															"nodeType": "YulAssignment",
															"src": "19891:33:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19909:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "19909:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19916:2:18",
																				"nodeType": "YulLiteral",
																				"src": "19916:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19905:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19905:3:18"
																		},
																		"nativeSrc": "19905:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19905:14:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19921:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19921:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19901:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19901:3:18"
																},
																"nativeSrc": "19901:23:18",
																"nodeType": "YulFunctionCall",
																"src": "19901:23:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19891:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19891:6:18"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "19837:93:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19864:5:18",
														"nodeType": "YulTypedName",
														"src": "19864:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19874:6:18",
														"nodeType": "YulTypedName",
														"src": "19874:6:18",
														"type": ""
													}
												],
												"src": "19837:93:18"
											},
											{
												"body": {
													"nativeSrc": "19989:54:18",
													"nodeType": "YulBlock",
													"src": "19989:54:18",
													"statements": [
														{
															"nativeSrc": "19999:37:18",
															"nodeType": "YulAssignment",
															"src": "19999:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "20024:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "20024:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "20030:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "20030:5:18"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "20020:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20020:3:18"
																},
																"nativeSrc": "20020:16:18",
																"nodeType": "YulFunctionCall",
																"src": "20020:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "19999:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "19999:8:18"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "19936:107:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "19964:4:18",
														"nodeType": "YulTypedName",
														"src": "19964:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "19970:5:18",
														"nodeType": "YulTypedName",
														"src": "19970:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "19980:8:18",
														"nodeType": "YulTypedName",
														"src": "19980:8:18",
														"type": ""
													}
												],
												"src": "19936:107:18"
											},
											{
												"body": {
													"nativeSrc": "20125:317:18",
													"nodeType": "YulBlock",
													"src": "20125:317:18",
													"statements": [
														{
															"nativeSrc": "20135:35:18",
															"nodeType": "YulVariableDeclaration",
															"src": "20135:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "20156:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "20156:10:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20168:1:18",
																		"nodeType": "YulLiteral",
																		"src": "20168:1:18",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "20152:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20152:3:18"
																},
																"nativeSrc": "20152:18:18",
																"nodeType": "YulFunctionCall",
																"src": "20152:18:18"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "20139:9:18",
																	"nodeType": "YulTypedName",
																	"src": "20139:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20179:109:18",
															"nodeType": "YulVariableDeclaration",
															"src": "20179:109:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "20210:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "20210:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20221:66:18",
																		"nodeType": "YulLiteral",
																		"src": "20221:66:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "20191:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "20191:18:18"
																},
																"nativeSrc": "20191:97:18",
																"nodeType": "YulFunctionCall",
																"src": "20191:97:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "20183:4:18",
																	"nodeType": "YulTypedName",
																	"src": "20183:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20297:51:18",
															"nodeType": "YulAssignment",
															"src": "20297:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "20328:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "20328:9:18"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "20339:8:18",
																		"nodeType": "YulIdentifier",
																		"src": "20339:8:18"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "20309:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "20309:18:18"
																},
																"nativeSrc": "20309:39:18",
																"nodeType": "YulFunctionCall",
																"src": "20309:39:18"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "20297:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "20297:8:18"
																}
															]
														},
														{
															"nativeSrc": "20357:30:18",
															"nodeType": "YulAssignment",
															"src": "20357:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20370:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "20370:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "20381:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "20381:4:18"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "20377:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20377:3:18"
																		},
																		"nativeSrc": "20377:9:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20377:9:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20366:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20366:3:18"
																},
																"nativeSrc": "20366:21:18",
																"nodeType": "YulFunctionCall",
																"src": "20366:21:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20357:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "20357:5:18"
																}
															]
														},
														{
															"nativeSrc": "20396:40:18",
															"nodeType": "YulAssignment",
															"src": "20396:40:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20409:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "20409:5:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "20420:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "20420:8:18"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "20430:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "20430:4:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20416:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20416:3:18"
																		},
																		"nativeSrc": "20416:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20416:19:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "20406:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "20406:2:18"
																},
																"nativeSrc": "20406:30:18",
																"nodeType": "YulFunctionCall",
																"src": "20406:30:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20396:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20396:6:18"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "20049:393:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20086:5:18",
														"nodeType": "YulTypedName",
														"src": "20086:5:18",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "20093:10:18",
														"nodeType": "YulTypedName",
														"src": "20093:10:18",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "20105:8:18",
														"nodeType": "YulTypedName",
														"src": "20105:8:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20118:6:18",
														"nodeType": "YulTypedName",
														"src": "20118:6:18",
														"type": ""
													}
												],
												"src": "20049:393:18"
											},
											{
												"body": {
													"nativeSrc": "20508:82:18",
													"nodeType": "YulBlock",
													"src": "20508:82:18",
													"statements": [
														{
															"nativeSrc": "20518:66:18",
															"nodeType": "YulAssignment",
															"src": "20518:66:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20576:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "20576:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "20558:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "20558:17:18"
																				},
																				"nativeSrc": "20558:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "20558:24:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "20549:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "20549:8:18"
																		},
																		"nativeSrc": "20549:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20549:34:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20531:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "20531:17:18"
																},
																"nativeSrc": "20531:53:18",
																"nodeType": "YulFunctionCall",
																"src": "20531:53:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "20518:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "20518:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "20448:142:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20488:5:18",
														"nodeType": "YulTypedName",
														"src": "20488:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "20498:9:18",
														"nodeType": "YulTypedName",
														"src": "20498:9:18",
														"type": ""
													}
												],
												"src": "20448:142:18"
											},
											{
												"body": {
													"nativeSrc": "20643:28:18",
													"nodeType": "YulBlock",
													"src": "20643:28:18",
													"statements": [
														{
															"nativeSrc": "20653:12:18",
															"nodeType": "YulAssignment",
															"src": "20653:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "20660:5:18",
																"nodeType": "YulIdentifier",
																"src": "20660:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20653:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20653:3:18"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "20596:75:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20629:5:18",
														"nodeType": "YulTypedName",
														"src": "20629:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20639:3:18",
														"nodeType": "YulTypedName",
														"src": "20639:3:18",
														"type": ""
													}
												],
												"src": "20596:75:18"
											},
											{
												"body": {
													"nativeSrc": "20753:193:18",
													"nodeType": "YulBlock",
													"src": "20753:193:18",
													"statements": [
														{
															"nativeSrc": "20763:63:18",
															"nodeType": "YulVariableDeclaration",
															"src": "20763:63:18",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "20818:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "20818:7:18"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "20787:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "20787:30:18"
																},
																"nativeSrc": "20787:39:18",
																"nodeType": "YulFunctionCall",
																"src": "20787:39:18"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "20767:16:18",
																	"nodeType": "YulTypedName",
																	"src": "20767:16:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20842:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "20842:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "20882:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "20882:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "20876:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "20876:5:18"
																				},
																				"nativeSrc": "20876:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "20876:11:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "20889:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "20889:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "20921:16:18",
																						"nodeType": "YulIdentifier",
																						"src": "20921:16:18"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "20897:23:18",
																					"nodeType": "YulIdentifier",
																					"src": "20897:23:18"
																				},
																				"nativeSrc": "20897:41:18",
																				"nodeType": "YulFunctionCall",
																				"src": "20897:41:18"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "20848:27:18",
																			"nodeType": "YulIdentifier",
																			"src": "20848:27:18"
																		},
																		"nativeSrc": "20848:91:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20848:91:18"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "20835:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20835:6:18"
																},
																"nativeSrc": "20835:105:18",
																"nodeType": "YulFunctionCall",
																"src": "20835:105:18"
															},
															"nativeSrc": "20835:105:18",
															"nodeType": "YulExpressionStatement",
															"src": "20835:105:18"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "20677:269:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20730:4:18",
														"nodeType": "YulTypedName",
														"src": "20730:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "20736:6:18",
														"nodeType": "YulTypedName",
														"src": "20736:6:18",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "20744:7:18",
														"nodeType": "YulTypedName",
														"src": "20744:7:18",
														"type": ""
													}
												],
												"src": "20677:269:18"
											},
											{
												"body": {
													"nativeSrc": "21001:24:18",
													"nodeType": "YulBlock",
													"src": "21001:24:18",
													"statements": [
														{
															"nativeSrc": "21011:8:18",
															"nodeType": "YulAssignment",
															"src": "21011:8:18",
															"value": {
																"kind": "number",
																"nativeSrc": "21018:1:18",
																"nodeType": "YulLiteral",
																"src": "21018:1:18",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21011:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "21011:3:18"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "20952:73:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "20997:3:18",
														"nodeType": "YulTypedName",
														"src": "20997:3:18",
														"type": ""
													}
												],
												"src": "20952:73:18"
											},
											{
												"body": {
													"nativeSrc": "21084:136:18",
													"nodeType": "YulBlock",
													"src": "21084:136:18",
													"statements": [
														{
															"nativeSrc": "21094:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "21094:46:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "21108:30:18",
																	"nodeType": "YulIdentifier",
																	"src": "21108:30:18"
																},
																"nativeSrc": "21108:32:18",
																"nodeType": "YulFunctionCall",
																"src": "21108:32:18"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "21098:6:18",
																	"nodeType": "YulTypedName",
																	"src": "21098:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21193:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "21193:4:18"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "21199:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "21199:6:18"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "21207:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "21207:6:18"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "21149:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "21149:43:18"
																},
																"nativeSrc": "21149:65:18",
																"nodeType": "YulFunctionCall",
																"src": "21149:65:18"
															},
															"nativeSrc": "21149:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "21149:65:18"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "21031:189:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21070:4:18",
														"nodeType": "YulTypedName",
														"src": "21070:4:18",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "21076:6:18",
														"nodeType": "YulTypedName",
														"src": "21076:6:18",
														"type": ""
													}
												],
												"src": "21031:189:18"
											},
											{
												"body": {
													"nativeSrc": "21276:136:18",
													"nodeType": "YulBlock",
													"src": "21276:136:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "21343:63:18",
																"nodeType": "YulBlock",
																"src": "21343:63:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "21387:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "21387:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21394:1:18",
																					"nodeType": "YulLiteral",
																					"src": "21394:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "21357:29:18",
																				"nodeType": "YulIdentifier",
																				"src": "21357:29:18"
																			},
																			"nativeSrc": "21357:39:18",
																			"nodeType": "YulFunctionCall",
																			"src": "21357:39:18"
																		},
																		"nativeSrc": "21357:39:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "21357:39:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "21296:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "21296:5:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "21303:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21303:3:18"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "21293:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "21293:2:18"
																},
																"nativeSrc": "21293:14:18",
																"nodeType": "YulFunctionCall",
																"src": "21293:14:18"
															},
															"nativeSrc": "21286:120:18",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "21308:26:18",
																"nodeType": "YulBlock",
																"src": "21308:26:18",
																"statements": [
																	{
																		"nativeSrc": "21310:22:18",
																		"nodeType": "YulAssignment",
																		"src": "21310:22:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "21323:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "21323:5:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21330:1:18",
																					"nodeType": "YulLiteral",
																					"src": "21330:1:18",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "21319:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "21319:3:18"
																			},
																			"nativeSrc": "21319:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "21319:13:18"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "21310:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "21310:5:18"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "21290:2:18",
																"nodeType": "YulBlock",
																"src": "21290:2:18",
																"statements": []
															},
															"src": "21286:120:18"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "21226:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "21264:5:18",
														"nodeType": "YulTypedName",
														"src": "21264:5:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21271:3:18",
														"nodeType": "YulTypedName",
														"src": "21271:3:18",
														"type": ""
													}
												],
												"src": "21226:186:18"
											},
											{
												"body": {
													"nativeSrc": "21497:464:18",
													"nodeType": "YulBlock",
													"src": "21497:464:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "21523:431:18",
																"nodeType": "YulBlock",
																"src": "21523:431:18",
																"statements": [
																	{
																		"nativeSrc": "21537:54:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21537:54:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "21585:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "21585:5:18"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "21553:31:18",
																				"nodeType": "YulIdentifier",
																				"src": "21553:31:18"
																			},
																			"nativeSrc": "21553:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "21553:38:18"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "21541:8:18",
																				"nodeType": "YulTypedName",
																				"src": "21541:8:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "21604:63:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21604:63:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "21627:8:18",
																					"nodeType": "YulIdentifier",
																					"src": "21627:8:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "21655:10:18",
																							"nodeType": "YulIdentifier",
																							"src": "21655:10:18"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "21637:17:18",
																						"nodeType": "YulIdentifier",
																						"src": "21637:17:18"
																					},
																					"nativeSrc": "21637:29:18",
																					"nodeType": "YulFunctionCall",
																					"src": "21637:29:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "21623:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "21623:3:18"
																			},
																			"nativeSrc": "21623:44:18",
																			"nodeType": "YulFunctionCall",
																			"src": "21623:44:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "21608:11:18",
																				"nodeType": "YulTypedName",
																				"src": "21608:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "21824:27:18",
																			"nodeType": "YulBlock",
																			"src": "21824:27:18",
																			"statements": [
																				{
																					"nativeSrc": "21826:23:18",
																					"nodeType": "YulAssignment",
																					"src": "21826:23:18",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "21841:8:18",
																						"nodeType": "YulIdentifier",
																						"src": "21841:8:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "21826:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "21826:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "21808:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "21808:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21820:2:18",
																					"nodeType": "YulLiteral",
																					"src": "21820:2:18",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "21805:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "21805:2:18"
																			},
																			"nativeSrc": "21805:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "21805:18:18"
																		},
																		"nativeSrc": "21802:49:18",
																		"nodeType": "YulIf",
																		"src": "21802:49:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "21893:11:18",
																					"nodeType": "YulIdentifier",
																					"src": "21893:11:18"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "21910:8:18",
																							"nodeType": "YulIdentifier",
																							"src": "21910:8:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "21938:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "21938:3:18"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "21920:17:18",
																								"nodeType": "YulIdentifier",
																								"src": "21920:17:18"
																							},
																							"nativeSrc": "21920:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "21920:22:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "21906:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "21906:3:18"
																					},
																					"nativeSrc": "21906:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "21906:37:18"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "21864:28:18",
																				"nodeType": "YulIdentifier",
																				"src": "21864:28:18"
																			},
																			"nativeSrc": "21864:80:18",
																			"nodeType": "YulFunctionCall",
																			"src": "21864:80:18"
																		},
																		"nativeSrc": "21864:80:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "21864:80:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "21514:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "21514:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21519:2:18",
																		"nodeType": "YulLiteral",
																		"src": "21519:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21511:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "21511:2:18"
																},
																"nativeSrc": "21511:11:18",
																"nodeType": "YulFunctionCall",
																"src": "21511:11:18"
															},
															"nativeSrc": "21508:446:18",
															"nodeType": "YulIf",
															"src": "21508:446:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "21418:543:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "21473:5:18",
														"nodeType": "YulTypedName",
														"src": "21473:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "21480:3:18",
														"nodeType": "YulTypedName",
														"src": "21480:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "21485:10:18",
														"nodeType": "YulTypedName",
														"src": "21485:10:18",
														"type": ""
													}
												],
												"src": "21418:543:18"
											},
											{
												"body": {
													"nativeSrc": "22030:54:18",
													"nodeType": "YulBlock",
													"src": "22030:54:18",
													"statements": [
														{
															"nativeSrc": "22040:37:18",
															"nodeType": "YulAssignment",
															"src": "22040:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22065:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22065:4:18"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22071:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "22071:5:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "22061:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22061:3:18"
																},
																"nativeSrc": "22061:16:18",
																"nodeType": "YulFunctionCall",
																"src": "22061:16:18"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22040:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "22040:8:18"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "21967:117:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22005:4:18",
														"nodeType": "YulTypedName",
														"src": "22005:4:18",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22011:5:18",
														"nodeType": "YulTypedName",
														"src": "22011:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22021:8:18",
														"nodeType": "YulTypedName",
														"src": "22021:8:18",
														"type": ""
													}
												],
												"src": "21967:117:18"
											},
											{
												"body": {
													"nativeSrc": "22141:118:18",
													"nodeType": "YulBlock",
													"src": "22141:118:18",
													"statements": [
														{
															"nativeSrc": "22151:68:18",
															"nodeType": "YulVariableDeclaration",
															"src": "22151:68:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "22200:1:18",
																						"nodeType": "YulLiteral",
																						"src": "22200:1:18",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "22203:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "22203:5:18"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "22196:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "22196:3:18"
																				},
																				"nativeSrc": "22196:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "22196:13:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "22215:1:18",
																						"nodeType": "YulLiteral",
																						"src": "22215:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "22211:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "22211:3:18"
																				},
																				"nativeSrc": "22211:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "22211:6:18"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "22167:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "22167:28:18"
																		},
																		"nativeSrc": "22167:51:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22167:51:18"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "22163:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22163:3:18"
																},
																"nativeSrc": "22163:56:18",
																"nodeType": "YulFunctionCall",
																"src": "22163:56:18"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22155:4:18",
																	"nodeType": "YulTypedName",
																	"src": "22155:4:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22228:25:18",
															"nodeType": "YulAssignment",
															"src": "22228:25:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22242:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22242:4:18"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "22248:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22248:4:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22238:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "22238:3:18"
																},
																"nativeSrc": "22238:15:18",
																"nodeType": "YulFunctionCall",
																"src": "22238:15:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22228:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "22228:6:18"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "22090:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "22118:4:18",
														"nodeType": "YulTypedName",
														"src": "22118:4:18",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "22124:5:18",
														"nodeType": "YulTypedName",
														"src": "22124:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22134:6:18",
														"nodeType": "YulTypedName",
														"src": "22134:6:18",
														"type": ""
													}
												],
												"src": "22090:169:18"
											},
											{
												"body": {
													"nativeSrc": "22345:214:18",
													"nodeType": "YulBlock",
													"src": "22345:214:18",
													"statements": [
														{
															"nativeSrc": "22478:37:18",
															"nodeType": "YulAssignment",
															"src": "22478:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22505:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22505:4:18"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "22511:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22511:3:18"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "22486:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "22486:18:18"
																},
																"nativeSrc": "22486:29:18",
																"nodeType": "YulFunctionCall",
																"src": "22486:29:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22478:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22478:4:18"
																}
															]
														},
														{
															"nativeSrc": "22524:29:18",
															"nodeType": "YulAssignment",
															"src": "22524:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "22535:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22535:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "22545:1:18",
																				"nodeType": "YulLiteral",
																				"src": "22545:1:18",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "22548:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "22548:3:18"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "22541:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "22541:3:18"
																		},
																		"nativeSrc": "22541:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22541:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "22532:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "22532:2:18"
																},
																"nativeSrc": "22532:21:18",
																"nodeType": "YulFunctionCall",
																"src": "22532:21:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "22524:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "22524:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "22264:295:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "22326:4:18",
														"nodeType": "YulTypedName",
														"src": "22326:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "22332:3:18",
														"nodeType": "YulTypedName",
														"src": "22332:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "22340:4:18",
														"nodeType": "YulTypedName",
														"src": "22340:4:18",
														"type": ""
													}
												],
												"src": "22264:295:18"
											},
											{
												"body": {
													"nativeSrc": "22656:1303:18",
													"nodeType": "YulBlock",
													"src": "22656:1303:18",
													"statements": [
														{
															"nativeSrc": "22667:51:18",
															"nodeType": "YulVariableDeclaration",
															"src": "22667:51:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "22714:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "22714:3:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "22681:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "22681:32:18"
																},
																"nativeSrc": "22681:37:18",
																"nodeType": "YulFunctionCall",
																"src": "22681:37:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "22671:6:18",
																	"nodeType": "YulTypedName",
																	"src": "22671:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22803:22:18",
																"nodeType": "YulBlock",
																"src": "22803:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "22805:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "22805:16:18"
																			},
																			"nativeSrc": "22805:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "22805:18:18"
																		},
																		"nativeSrc": "22805:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "22805:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "22775:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "22775:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22783:18:18",
																		"nodeType": "YulLiteral",
																		"src": "22783:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22772:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "22772:2:18"
																},
																"nativeSrc": "22772:30:18",
																"nodeType": "YulFunctionCall",
																"src": "22772:30:18"
															},
															"nativeSrc": "22769:56:18",
															"nodeType": "YulIf",
															"src": "22769:56:18"
														},
														{
															"nativeSrc": "22835:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "22835:52:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "22881:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "22881:4:18"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "22875:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "22875:5:18"
																		},
																		"nativeSrc": "22875:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "22875:11:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "22849:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "22849:25:18"
																},
																"nativeSrc": "22849:38:18",
																"nodeType": "YulFunctionCall",
																"src": "22849:38:18"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "22839:6:18",
																	"nodeType": "YulTypedName",
																	"src": "22839:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22980:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "22980:4:18"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "22986:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "22986:6:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "22994:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "22994:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "22934:45:18",
																	"nodeType": "YulIdentifier",
																	"src": "22934:45:18"
																},
																"nativeSrc": "22934:67:18",
																"nodeType": "YulFunctionCall",
																"src": "22934:67:18"
															},
															"nativeSrc": "22934:67:18",
															"nodeType": "YulExpressionStatement",
															"src": "22934:67:18"
														},
														{
															"nativeSrc": "23011:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "23011:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "23028:1:18",
																"nodeType": "YulLiteral",
																"src": "23028:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "23015:9:18",
																	"nodeType": "YulTypedName",
																	"src": "23015:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23039:17:18",
															"nodeType": "YulAssignment",
															"src": "23039:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "23052:4:18",
																"nodeType": "YulLiteral",
																"src": "23052:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "23039:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "23039:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "23103:611:18",
																		"nodeType": "YulBlock",
																		"src": "23103:611:18",
																		"statements": [
																			{
																				"nativeSrc": "23117:37:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23117:37:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "23136:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "23136:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "23148:4:18",
																									"nodeType": "YulLiteral",
																									"src": "23148:4:18",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "23144:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "23144:3:18"
																							},
																							"nativeSrc": "23144:9:18",
																							"nodeType": "YulFunctionCall",
																							"src": "23144:9:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "23132:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "23132:3:18"
																					},
																					"nativeSrc": "23132:22:18",
																					"nodeType": "YulFunctionCall",
																					"src": "23132:22:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "23121:7:18",
																						"nodeType": "YulTypedName",
																						"src": "23121:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "23168:51:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23168:51:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23214:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "23214:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "23182:31:18",
																						"nodeType": "YulIdentifier",
																						"src": "23182:31:18"
																					},
																					"nativeSrc": "23182:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "23182:37:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "23172:6:18",
																						"nodeType": "YulTypedName",
																						"src": "23172:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "23232:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23232:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "23241:1:18",
																					"nodeType": "YulLiteral",
																					"src": "23241:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "23236:1:18",
																						"nodeType": "YulTypedName",
																						"src": "23236:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "23300:163:18",
																					"nodeType": "YulBlock",
																					"src": "23300:163:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23325:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "23325:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "23343:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "23343:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "23348:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "23348:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "23339:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "23339:3:18"
																												},
																												"nativeSrc": "23339:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "23339:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "23333:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "23333:5:18"
																										},
																										"nativeSrc": "23333:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "23333:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "23318:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "23318:6:18"
																								},
																								"nativeSrc": "23318:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "23318:42:18"
																							},
																							"nativeSrc": "23318:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "23318:42:18"
																						},
																						{
																							"nativeSrc": "23377:24:18",
																							"nodeType": "YulAssignment",
																							"src": "23377:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23391:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "23391:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23399:1:18",
																										"nodeType": "YulLiteral",
																										"src": "23399:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23387:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "23387:3:18"
																								},
																								"nativeSrc": "23387:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "23387:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "23377:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "23377:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "23418:31:18",
																							"nodeType": "YulAssignment",
																							"src": "23418:31:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "23435:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "23435:9:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23446:2:18",
																										"nodeType": "YulLiteral",
																										"src": "23446:2:18",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23431:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "23431:3:18"
																								},
																								"nativeSrc": "23431:18:18",
																								"nodeType": "YulFunctionCall",
																								"src": "23431:18:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "23418:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "23418:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "23266:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "23266:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "23269:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "23269:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "23263:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "23263:2:18"
																					},
																					"nativeSrc": "23263:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "23263:14:18"
																				},
																				"nativeSrc": "23255:208:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "23278:21:18",
																					"nodeType": "YulBlock",
																					"src": "23278:21:18",
																					"statements": [
																						{
																							"nativeSrc": "23280:17:18",
																							"nodeType": "YulAssignment",
																							"src": "23280:17:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "23289:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "23289:1:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23292:4:18",
																										"nodeType": "YulLiteral",
																										"src": "23292:4:18",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23285:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "23285:3:18"
																								},
																								"nativeSrc": "23285:12:18",
																								"nodeType": "YulFunctionCall",
																								"src": "23285:12:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "23280:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "23280:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "23259:3:18",
																					"nodeType": "YulBlock",
																					"src": "23259:3:18",
																					"statements": []
																				},
																				"src": "23255:208:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "23499:156:18",
																					"nodeType": "YulBlock",
																					"src": "23499:156:18",
																					"statements": [
																						{
																							"nativeSrc": "23517:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "23517:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "23544:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "23544:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "23549:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "23549:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "23540:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "23540:3:18"
																										},
																										"nativeSrc": "23540:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "23540:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "23534:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "23534:5:18"
																								},
																								"nativeSrc": "23534:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "23534:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "23521:9:18",
																									"nodeType": "YulTypedName",
																									"src": "23521:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23584:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "23584:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "23611:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "23611:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "23626:6:18",
																														"nodeType": "YulIdentifier",
																														"src": "23626:6:18"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "23634:4:18",
																														"nodeType": "YulLiteral",
																														"src": "23634:4:18",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "23622:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "23622:3:18"
																												},
																												"nativeSrc": "23622:17:18",
																												"nodeType": "YulFunctionCall",
																												"src": "23622:17:18"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "23592:18:18",
																											"nodeType": "YulIdentifier",
																											"src": "23592:18:18"
																										},
																										"nativeSrc": "23592:48:18",
																										"nodeType": "YulFunctionCall",
																										"src": "23592:48:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "23577:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "23577:6:18"
																								},
																								"nativeSrc": "23577:64:18",
																								"nodeType": "YulFunctionCall",
																								"src": "23577:64:18"
																							},
																							"nativeSrc": "23577:64:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "23577:64:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "23482:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "23482:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "23491:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "23491:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "23479:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "23479:2:18"
																					},
																					"nativeSrc": "23479:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "23479:19:18"
																				},
																				"nativeSrc": "23476:179:18",
																				"nodeType": "YulIf",
																				"src": "23476:179:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23675:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "23675:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "23689:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "23689:6:18"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "23697:1:18",
																											"nodeType": "YulLiteral",
																											"src": "23697:1:18",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "23685:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "23685:3:18"
																									},
																									"nativeSrc": "23685:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "23685:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "23701:1:18",
																									"nodeType": "YulLiteral",
																									"src": "23701:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "23681:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "23681:3:18"
																							},
																							"nativeSrc": "23681:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "23681:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "23668:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "23668:6:18"
																					},
																					"nativeSrc": "23668:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "23668:36:18"
																				},
																				"nativeSrc": "23668:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "23668:36:18"
																			}
																		]
																	},
																	"nativeSrc": "23096:618:18",
																	"nodeType": "YulCase",
																	"src": "23096:618:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23101:1:18",
																		"nodeType": "YulLiteral",
																		"src": "23101:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "23731:222:18",
																		"nodeType": "YulBlock",
																		"src": "23731:222:18",
																		"statements": [
																			{
																				"nativeSrc": "23745:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23745:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "23758:1:18",
																					"nodeType": "YulLiteral",
																					"src": "23758:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "23749:5:18",
																						"nodeType": "YulTypedName",
																						"src": "23749:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "23782:67:18",
																					"nodeType": "YulBlock",
																					"src": "23782:67:18",
																					"statements": [
																						{
																							"nativeSrc": "23800:35:18",
																							"nodeType": "YulAssignment",
																							"src": "23800:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "23819:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "23819:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "23824:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "23824:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "23815:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "23815:3:18"
																										},
																										"nativeSrc": "23815:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "23815:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "23809:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "23809:5:18"
																								},
																								"nativeSrc": "23809:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "23809:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "23800:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "23800:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "23775:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "23775:6:18"
																				},
																				"nativeSrc": "23772:77:18",
																				"nodeType": "YulIf",
																				"src": "23772:77:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23869:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "23869:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "23928:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "23928:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "23935:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "23935:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "23875:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "23875:52:18"
																							},
																							"nativeSrc": "23875:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "23875:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "23862:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "23862:6:18"
																					},
																					"nativeSrc": "23862:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "23862:81:18"
																				},
																				"nativeSrc": "23862:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "23862:81:18"
																			}
																		]
																	},
																	"nativeSrc": "23723:230:18",
																	"nodeType": "YulCase",
																	"src": "23723:230:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "23076:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "23076:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23084:2:18",
																		"nodeType": "YulLiteral",
																		"src": "23084:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23073:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "23073:2:18"
																},
																"nativeSrc": "23073:14:18",
																"nodeType": "YulFunctionCall",
																"src": "23073:14:18"
															},
															"nativeSrc": "23066:887:18",
															"nodeType": "YulSwitch",
															"src": "23066:887:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "22564:1395:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22645:4:18",
														"nodeType": "YulTypedName",
														"src": "22645:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "22651:3:18",
														"nodeType": "YulTypedName",
														"src": "22651:3:18",
														"type": ""
													}
												],
												"src": "22564:1395:18"
											},
											{
												"body": {
													"nativeSrc": "24091:206:18",
													"nodeType": "YulBlock",
													"src": "24091:206:18",
													"statements": [
														{
															"nativeSrc": "24101:26:18",
															"nodeType": "YulAssignment",
															"src": "24101:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24113:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "24113:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24124:2:18",
																		"nodeType": "YulLiteral",
																		"src": "24124:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24109:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "24109:3:18"
																},
																"nativeSrc": "24109:18:18",
																"nodeType": "YulFunctionCall",
																"src": "24109:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24101:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "24101:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24181:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24181:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24194:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "24194:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24205:1:18",
																				"nodeType": "YulLiteral",
																				"src": "24205:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24190:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "24190:3:18"
																		},
																		"nativeSrc": "24190:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24190:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24137:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "24137:43:18"
																},
																"nativeSrc": "24137:71:18",
																"nodeType": "YulFunctionCall",
																"src": "24137:71:18"
															},
															"nativeSrc": "24137:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "24137:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24262:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "24262:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24275:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "24275:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24286:2:18",
																				"nodeType": "YulLiteral",
																				"src": "24286:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24271:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "24271:3:18"
																		},
																		"nativeSrc": "24271:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "24271:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24218:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "24218:43:18"
																},
																"nativeSrc": "24218:72:18",
																"nodeType": "YulFunctionCall",
																"src": "24218:72:18"
															},
															"nativeSrc": "24218:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "24218:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23965:332:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24055:9:18",
														"nodeType": "YulTypedName",
														"src": "24055:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24067:6:18",
														"nodeType": "YulTypedName",
														"src": "24067:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24075:6:18",
														"nodeType": "YulTypedName",
														"src": "24075:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24086:4:18",
														"nodeType": "YulTypedName",
														"src": "24086:4:18",
														"type": ""
													}
												],
												"src": "23965:332:18"
											},
											{
												"body": {
													"nativeSrc": "24331:152:18",
													"nodeType": "YulBlock",
													"src": "24331:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24348:1:18",
																		"nodeType": "YulLiteral",
																		"src": "24348:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24351:77:18",
																		"nodeType": "YulLiteral",
																		"src": "24351:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24341:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "24341:6:18"
																},
																"nativeSrc": "24341:88:18",
																"nodeType": "YulFunctionCall",
																"src": "24341:88:18"
															},
															"nativeSrc": "24341:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "24341:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24445:1:18",
																		"nodeType": "YulLiteral",
																		"src": "24445:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24448:4:18",
																		"nodeType": "YulLiteral",
																		"src": "24448:4:18",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24438:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "24438:6:18"
																},
																"nativeSrc": "24438:15:18",
																"nodeType": "YulFunctionCall",
																"src": "24438:15:18"
															},
															"nativeSrc": "24438:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "24438:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24469:1:18",
																		"nodeType": "YulLiteral",
																		"src": "24469:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24472:4:18",
																		"nodeType": "YulLiteral",
																		"src": "24472:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "24462:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "24462:6:18"
																},
																"nativeSrc": "24462:15:18",
																"nodeType": "YulFunctionCall",
																"src": "24462:15:18"
															},
															"nativeSrc": "24462:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "24462:15:18"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "24303:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "24303:180:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ITradeManagementRawMaterials_$3137_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ITradeManagementRawMaterials_$3137_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ITradeManagementRawMaterials_$3137_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ITradeManagementRawMaterials_$3137__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ITradeManagementRawMaterials_$3137_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only authorized suppliers can mi\")\n\n        mstore(add(memPtr, 32), \"nt packaged product NFT\")\n\n    }\n\n    function abi_encode_t_stringliteral_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061012a575f3560e01c80638da5cb5b116100ab578063c87b56dd1161006f578063c87b56dd14610318578063d85d3d2714610348578063e985e9c514610378578063f0f9ee46146103a8578063f2fde38b146103c65761012a565b80638da5cb5b1461028657806395d89b41146102a45780639f181b5e146102c2578063a22cb465146102e0578063b88d4fde146102fc5761012a565b806323b872dd116100f257806323b872dd146101e457806342842e0e146102005780636352211e1461021c57806370a082311461024c578063715018a61461027c5761012a565b806301ffc9a71461012e57806306fdde031461015e578063081812fc1461017c578063095ea7b3146101ac5780630fffc4cf146101c8575b5f80fd5b61014860048036038101906101439190611c1f565b6103e2565b6040516101559190611c64565b60405180910390f35b610166610442565b6040516101739190611d07565b60405180910390f35b61019660048036038101906101919190611d5a565b6104d1565b6040516101a39190611dc4565b60405180910390f35b6101c660048036038101906101c19190611e07565b6104ec565b005b6101e260048036038101906101dd9190611e45565b610502565b005b6101fe60048036038101906101f99190611e70565b61054d565b005b61021a60048036038101906102159190611e70565b61064c565b005b61023660048036038101906102319190611d5a565b61066b565b6040516102439190611dc4565b60405180910390f35b61026660048036038101906102619190611e45565b61067c565b6040516102739190611ecf565b60405180910390f35b610284610732565b005b61028e610745565b60405161029b9190611dc4565b60405180910390f35b6102ac61076d565b6040516102b99190611d07565b60405180910390f35b6102ca6107fd565b6040516102d79190611ecf565b60405180910390f35b6102fa60048036038101906102f59190611f12565b610803565b005b6103166004803603810190610311919061207c565b610819565b005b610332600480360381019061032d9190611d5a565b610836565b60405161033f9190611d07565b60405180910390f35b610362600480360381019061035d919061219a565b610941565b60405161036f9190611ecf565b60405180910390f35b610392600480360381019061038d91906121e1565b610a59565b60405161039f9190611c64565b60405180910390f35b6103b0610ae7565b6040516103bd919061227a565b60405180910390f35b6103e060048036038101906103db9190611e45565b610b0c565b005b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043b575061043a82610b90565b5b9050919050565b60605f8054610450906122c0565b80601f016020809104026020016040519081016040528092919081815260200182805461047c906122c0565b80156104c75780601f1061049e576101008083540402835291602001916104c7565b820191905f5260205f20905b8154815290600101906020018083116104aa57829003601f168201915b5050505050905090565b5f6104db82610c71565b506104e582610cf7565b9050919050565b6104fe82826104f9610d30565b610d37565b5050565b61050a610d49565b8060095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105bd575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105b49190611dc4565b60405180910390fd5b5f6105d083836105cb610d30565b610dd0565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610646578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161063d939291906122f0565b60405180910390fd5b50505050565b61066683838360405180602001604052805f815250610819565b505050565b5f61067582610c71565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106ed575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106e49190611dc4565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61073a610d49565b6107435f610fdb565b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461077c906122c0565b80601f01602080910402602001604051908101604052809291908181526020018280546107a8906122c0565b80156107f35780601f106107ca576101008083540402835291602001916107f3565b820191905f5260205f20905b8154815290600101906020018083116107d657829003601f168201915b5050505050905090565b60085481565b61081561080e610d30565b838361109e565b5050565b61082484848461054d565b61083084848484611207565b50505050565b606061084182610c71565b505f60065f8481526020019081526020015f20805461085f906122c0565b80601f016020809104026020016040519081016040528092919081815260200182805461088b906122c0565b80156108d65780601f106108ad576101008083540402835291602001916108d6565b820191905f5260205f20905b8154815290600101906020018083116108b957829003601f168201915b505050505090505f6108e66113b9565b90505f8151036108fa57819250505061093c565b5f8251111561092e57808260405160200161091692919061235f565b6040516020818303038152906040529250505061093c565b610937846113cf565b925050505b919050565b5f8060095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634b297269336040518263ffffffff1660e01b815260040161099d9190611dc4565b5f60405180830381865afa1580156109b7573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f820116820180604052508101906109df91906123f0565b5103610a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a17906124a7565b60405180910390fd5b60085f815480929190610a32906124f2565b9190505550610a4333600854611435565b610a4f60085483611452565b6008549050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b14610d49565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b84575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b7b9190611dc4565b60405180910390fd5b610b8d81610fdb565b50565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c5a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610c6a5750610c69826114ac565b5b9050919050565b5f80610c7c83611515565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cee57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ce59190611ecf565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610d44838383600161154e565b505050565b610d51610d30565b73ffffffffffffffffffffffffffffffffffffffff16610d6f610745565b73ffffffffffffffffffffffffffffffffffffffff1614610dce57610d92610d30565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dc59190611dc4565b60405180910390fd5b565b5f80610ddb84611515565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e1c57610e1b81848661170d565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ea757610e5b5f855f8061154e565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f2657600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361110e57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016111059190611dc4565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111fa9190611c64565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156113b3578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261124a610d30565b8685856040518563ffffffff1660e01b815260040161126c949392919061258b565b6020604051808303815f875af19250505080156112a757506040513d601f19601f820116820180604052508101906112a491906125e9565b60015b611328573d805f81146112d5576040519150601f19603f3d011682016040523d82523d5f602084013e6112da565b606091505b505f81510361132057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113179190611dc4565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113b157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113a89190611dc4565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60606113da82610c71565b505f6113e46113b9565b90505f8151116114025760405180602001604052805f81525061142d565b8061140c846117d0565b60405160200161141d92919061235f565b6040516020818303038152906040525b915050919050565b61144e828260405180602001604052805f81525061189a565b5050565b8060065f8481526020019081526020015f20908161147091906127a8565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516114a09190611ecf565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061158657505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156116b8575f61159584610c71565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115ff57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561161257506116108184610a59565b155b1561165457826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161164b9190611dc4565b60405180910390fd5b81156116b657838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6117188383836118b5565b6117cb575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361178c57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117839190611ecf565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016117c2929190612877565b60405180910390fd5b505050565b60605f60016117de84611975565b0190505f8167ffffffffffffffff8111156117fc576117fb611f58565b5b6040519080825280601f01601f19166020018201604052801561182e5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561188f578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816118845761188361289e565b5b0494505f850361183b575b819350505050919050565b6118a48383611ac6565b6118b05f848484611207565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561196c57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061192d575061192c8484610a59565b5b8061196b57508273ffffffffffffffffffffffffffffffffffffffff1661195383610cf7565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106119d1577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119c7576119c661289e565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a0e576d04ee2d6d415b85acef81000000008381611a0457611a0361289e565b5b0492506020810190505b662386f26fc100008310611a3d57662386f26fc100008381611a3357611a3261289e565b5b0492506010810190505b6305f5e1008310611a66576305f5e1008381611a5c57611a5b61289e565b5b0492506008810190505b6127108310611a8b576127108381611a8157611a8061289e565b5b0492506004810190505b60648310611aae5760648381611aa457611aa361289e565b5b0492506002810190505b600a8310611abd576001810190505b80915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b36575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611b2d9190611dc4565b60405180910390fd5b5f611b4283835f610dd0565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611bb4575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611bab9190611dc4565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bfe81611bca565b8114611c08575f80fd5b50565b5f81359050611c1981611bf5565b92915050565b5f60208284031215611c3457611c33611bc2565b5b5f611c4184828501611c0b565b91505092915050565b5f8115159050919050565b611c5e81611c4a565b82525050565b5f602082019050611c775f830184611c55565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611cb4578082015181840152602081019050611c99565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611cd982611c7d565b611ce38185611c87565b9350611cf3818560208601611c97565b611cfc81611cbf565b840191505092915050565b5f6020820190508181035f830152611d1f8184611ccf565b905092915050565b5f819050919050565b611d3981611d27565b8114611d43575f80fd5b50565b5f81359050611d5481611d30565b92915050565b5f60208284031215611d6f57611d6e611bc2565b5b5f611d7c84828501611d46565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611dae82611d85565b9050919050565b611dbe81611da4565b82525050565b5f602082019050611dd75f830184611db5565b92915050565b611de681611da4565b8114611df0575f80fd5b50565b5f81359050611e0181611ddd565b92915050565b5f8060408385031215611e1d57611e1c611bc2565b5b5f611e2a85828601611df3565b9250506020611e3b85828601611d46565b9150509250929050565b5f60208284031215611e5a57611e59611bc2565b5b5f611e6784828501611df3565b91505092915050565b5f805f60608486031215611e8757611e86611bc2565b5b5f611e9486828701611df3565b9350506020611ea586828701611df3565b9250506040611eb686828701611d46565b9150509250925092565b611ec981611d27565b82525050565b5f602082019050611ee25f830184611ec0565b92915050565b611ef181611c4a565b8114611efb575f80fd5b50565b5f81359050611f0c81611ee8565b92915050565b5f8060408385031215611f2857611f27611bc2565b5b5f611f3585828601611df3565b9250506020611f4685828601611efe565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f8e82611cbf565b810181811067ffffffffffffffff82111715611fad57611fac611f58565b5b80604052505050565b5f611fbf611bb9565b9050611fcb8282611f85565b919050565b5f67ffffffffffffffff821115611fea57611fe9611f58565b5b611ff382611cbf565b9050602081019050919050565b828183375f83830152505050565b5f61202061201b84611fd0565b611fb6565b90508281526020810184848401111561203c5761203b611f54565b5b612047848285612000565b509392505050565b5f82601f83011261206357612062611f50565b5b813561207384826020860161200e565b91505092915050565b5f805f806080858703121561209457612093611bc2565b5b5f6120a187828801611df3565b94505060206120b287828801611df3565b93505060406120c387828801611d46565b925050606085013567ffffffffffffffff8111156120e4576120e3611bc6565b5b6120f08782880161204f565b91505092959194509250565b5f67ffffffffffffffff82111561211657612115611f58565b5b61211f82611cbf565b9050602081019050919050565b5f61213e612139846120fc565b611fb6565b90508281526020810184848401111561215a57612159611f54565b5b612165848285612000565b509392505050565b5f82601f83011261218157612180611f50565b5b813561219184826020860161212c565b91505092915050565b5f602082840312156121af576121ae611bc2565b5b5f82013567ffffffffffffffff8111156121cc576121cb611bc6565b5b6121d88482850161216d565b91505092915050565b5f80604083850312156121f7576121f6611bc2565b5b5f61220485828601611df3565b925050602061221585828601611df3565b9150509250929050565b5f819050919050565b5f61224261223d61223884611d85565b61221f565b611d85565b9050919050565b5f61225382612228565b9050919050565b5f61226482612249565b9050919050565b6122748161225a565b82525050565b5f60208201905061228d5f83018461226b565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806122d757607f821691505b6020821081036122ea576122e9612293565b5b50919050565b5f6060820190506123035f830186611db5565b6123106020830185611ec0565b61231d6040830184611db5565b949350505050565b5f81905092915050565b5f61233982611c7d565b6123438185612325565b9350612353818560208601611c97565b80840191505092915050565b5f61236a828561232f565b9150612376828461232f565b91508190509392505050565b5f61239461238f846120fc565b611fb6565b9050828152602081018484840111156123b0576123af611f54565b5b6123bb848285611c97565b509392505050565b5f82601f8301126123d7576123d6611f50565b5b81516123e7848260208601612382565b91505092915050565b5f6020828403121561240557612404611bc2565b5b5f82015167ffffffffffffffff81111561242257612421611bc6565b5b61242e848285016123c3565b91505092915050565b7f4f6e6c7920617574686f72697a656420737570706c696572732063616e206d695f8201527f6e74207061636b616765642070726f64756374204e4654000000000000000000602082015250565b5f612491603783611c87565b915061249c82612437565b604082019050919050565b5f6020820190508181035f8301526124be81612485565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6124fc82611d27565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361252e5761252d6124c5565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61255d82612539565b6125678185612543565b9350612577818560208601611c97565b61258081611cbf565b840191505092915050565b5f60808201905061259e5f830187611db5565b6125ab6020830186611db5565b6125b86040830185611ec0565b81810360608301526125ca8184612553565b905095945050505050565b5f815190506125e381611bf5565b92915050565b5f602082840312156125fe576125fd611bc2565b5b5f61260b848285016125d5565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026126707fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612635565b61267a8683612635565b95508019841693508086168417925050509392505050565b5f6126ac6126a76126a284611d27565b61221f565b611d27565b9050919050565b5f819050919050565b6126c583612692565b6126d96126d1826126b3565b848454612641565b825550505050565b5f90565b6126ed6126e1565b6126f88184846126bc565b505050565b5b8181101561271b576127105f826126e5565b6001810190506126fe565b5050565b601f8211156127605761273181612614565b61273a84612626565b81016020851015612749578190505b61275d61275585612626565b8301826126fd565b50505b505050565b5f82821c905092915050565b5f6127805f1984600802612765565b1980831691505092915050565b5f6127988383612771565b9150826002028217905092915050565b6127b182611c7d565b67ffffffffffffffff8111156127ca576127c9611f58565b5b6127d482546122c0565b6127df82828561271f565b5f60209050601f831160018114612810575f84156127fe578287015190505b612808858261278d565b86555061286f565b601f19841661281e86612614565b5f5b8281101561284557848901518255600182019150602085019450602081019050612820565b86831015612862578489015161285e601f891682612771565b8355505b6001600288020188555050505b505050505050565b5f60408201905061288a5f830185611db5565b6128976020830184611ec0565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220d6354318d3bd023da9107a00b49d88542ee7e1547771ed2fd2a6c4d5acce439e64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xF0F9EE46 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C6 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x9F181B5E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2FC JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27C JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xFFFC4CF EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1E45 JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1E45 JUMP JUMPDEST PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x732 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28E PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x836 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x219A JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x1E45 JUMP JUMPDEST PUSH2 0xB0C JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43A DUP3 PUSH2 0xB90 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x22C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4DB DUP3 PUSH2 0xC71 JUMP JUMPDEST POP PUSH2 0x4E5 DUP3 PUSH2 0xCF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FE DUP3 DUP3 PUSH2 0x4F9 PUSH2 0xD30 JUMP JUMPDEST PUSH2 0xD37 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x50A PUSH2 0xD49 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5BD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5D0 DUP4 DUP4 PUSH2 0x5CB PUSH2 0xD30 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x646 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x666 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x819 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x675 DUP3 PUSH2 0xC71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6ED JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73A PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x743 PUSH0 PUSH2 0xFDB JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x77C SWAP1 PUSH2 0x22C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A8 SWAP1 PUSH2 0x22C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x815 PUSH2 0x80E PUSH2 0xD30 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x109E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x824 DUP5 DUP5 DUP5 PUSH2 0x54D JUMP JUMPDEST PUSH2 0x830 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1207 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x841 DUP3 PUSH2 0xC71 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x85F SWAP1 PUSH2 0x22C0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x88B SWAP1 PUSH2 0x22C0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x8E6 PUSH2 0x13B9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x8FA JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x93C JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x92E JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x916 SWAP3 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x93C JUMP JUMPDEST PUSH2 0x937 DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4B297269 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DF SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST MLOAD SUB PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA17 SWAP1 PUSH2 0x24A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA32 SWAP1 PUSH2 0x24F2 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xA43 CALLER PUSH1 0x8 SLOAD PUSH2 0x1435 JUMP JUMPDEST PUSH2 0xA4F PUSH1 0x8 SLOAD DUP4 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB14 PUSH2 0xD49 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB84 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7B SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB8D DUP2 PUSH2 0xFDB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xC5A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xC6A JUMPI POP PUSH2 0xC69 DUP3 PUSH2 0x14AC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC7C DUP4 PUSH2 0x1515 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCEE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE5 SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD44 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x154E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD51 PUSH2 0xD30 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD6F PUSH2 0x745 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDCE JUMPI PUSH2 0xD92 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC5 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDDB DUP5 PUSH2 0x1515 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE1C JUMPI PUSH2 0xE1B DUP2 DUP5 DUP7 PUSH2 0x170D JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEA7 JUMPI PUSH2 0xE5B PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF26 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x110E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1105 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x13B3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x124A PUSH2 0xD30 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x258B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12A7 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12A4 SWAP2 SWAP1 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1328 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1320 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1317 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13B1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A8 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13DA DUP3 PUSH2 0xC71 JUMP JUMPDEST POP PUSH0 PUSH2 0x13E4 PUSH2 0x13B9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x142D JUMP JUMPDEST DUP1 PUSH2 0x140C DUP5 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x141D SWAP3 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x189A JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1470 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x14A0 SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1586 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x16B8 JUMPI PUSH0 PUSH2 0x1595 DUP5 PUSH2 0xC71 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15FF JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1612 JUMPI POP PUSH2 0x1610 DUP2 DUP5 PUSH2 0xA59 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1654 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164B SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x16B6 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1718 DUP4 DUP4 DUP4 PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x17CB JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x178C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1783 SWAP2 SWAP1 PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C2 SWAP3 SWAP2 SWAP1 PUSH2 0x2877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x17DE DUP5 PUSH2 0x1975 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FB PUSH2 0x1F58 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x182E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x188F JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1884 JUMPI PUSH2 0x1883 PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x183B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A4 DUP4 DUP4 PUSH2 0x1AC6 JUMP JUMPDEST PUSH2 0x18B0 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1207 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x196C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x192D JUMPI POP PUSH2 0x192C DUP5 DUP5 PUSH2 0xA59 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x196B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1953 DUP4 PUSH2 0xCF7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x19D1 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19C7 JUMPI PUSH2 0x19C6 PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A0E JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A04 JUMPI PUSH2 0x1A03 PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A3D JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A33 JUMPI PUSH2 0x1A32 PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A66 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A5C JUMPI PUSH2 0x1A5B PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1A8B JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A81 JUMPI PUSH2 0x1A80 PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1AAE JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1AA4 JUMPI PUSH2 0x1AA3 PUSH2 0x289E JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1ABD JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B36 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B2D SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1B42 DUP4 DUP4 PUSH0 PUSH2 0xDD0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BB4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BAB SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BFE DUP2 PUSH2 0x1BCA JUMP JUMPDEST DUP2 EQ PUSH2 0x1C08 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C19 DUP2 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C41 DUP5 DUP3 DUP6 ADD PUSH2 0x1C0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C5E DUP2 PUSH2 0x1C4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C77 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CB4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C99 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD9 DUP3 PUSH2 0x1C7D JUMP JUMPDEST PUSH2 0x1CE3 DUP2 DUP6 PUSH2 0x1C87 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x1CFC DUP2 PUSH2 0x1CBF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D1F DUP2 DUP5 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D39 DUP2 PUSH2 0x1D27 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D54 DUP2 PUSH2 0x1D30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6F JUMPI PUSH2 0x1D6E PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D7C DUP5 DUP3 DUP6 ADD PUSH2 0x1D46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAE DUP3 PUSH2 0x1D85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DBE DUP2 PUSH2 0x1DA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DD7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DE6 DUP2 PUSH2 0x1DA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E01 DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1D JUMPI PUSH2 0x1E1C PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E2A DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E3B DUP6 DUP3 DUP7 ADD PUSH2 0x1D46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E5A JUMPI PUSH2 0x1E59 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E67 DUP5 DUP3 DUP6 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E87 JUMPI PUSH2 0x1E86 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E94 DUP7 DUP3 DUP8 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EA5 DUP7 DUP3 DUP8 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1EB6 DUP7 DUP3 DUP8 ADD PUSH2 0x1D46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1EC9 DUP2 PUSH2 0x1D27 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EE2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EF1 DUP2 PUSH2 0x1C4A JUMP JUMPDEST DUP2 EQ PUSH2 0x1EFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F0C DUP2 PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F28 JUMPI PUSH2 0x1F27 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F35 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F46 DUP6 DUP3 DUP7 ADD PUSH2 0x1EFE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1F8E DUP3 PUSH2 0x1CBF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FAD JUMPI PUSH2 0x1FAC PUSH2 0x1F58 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FBF PUSH2 0x1BB9 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FCB DUP3 DUP3 PUSH2 0x1F85 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FEA JUMPI PUSH2 0x1FE9 PUSH2 0x1F58 JUMP JUMPDEST JUMPDEST PUSH2 0x1FF3 DUP3 PUSH2 0x1CBF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2020 PUSH2 0x201B DUP5 PUSH2 0x1FD0 JUMP JUMPDEST PUSH2 0x1FB6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x203C JUMPI PUSH2 0x203B PUSH2 0x1F54 JUMP JUMPDEST JUMPDEST PUSH2 0x2047 DUP5 DUP3 DUP6 PUSH2 0x2000 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2063 JUMPI PUSH2 0x2062 PUSH2 0x1F50 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2073 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x200E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2094 JUMPI PUSH2 0x2093 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20A1 DUP8 DUP3 DUP9 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x20B2 DUP8 DUP3 DUP9 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x20C3 DUP8 DUP3 DUP9 ADD PUSH2 0x1D46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E4 JUMPI PUSH2 0x20E3 PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST PUSH2 0x20F0 DUP8 DUP3 DUP9 ADD PUSH2 0x204F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2116 JUMPI PUSH2 0x2115 PUSH2 0x1F58 JUMP JUMPDEST JUMPDEST PUSH2 0x211F DUP3 PUSH2 0x1CBF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x213E PUSH2 0x2139 DUP5 PUSH2 0x20FC JUMP JUMPDEST PUSH2 0x1FB6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x215A JUMPI PUSH2 0x2159 PUSH2 0x1F54 JUMP JUMPDEST JUMPDEST PUSH2 0x2165 DUP5 DUP3 DUP6 PUSH2 0x2000 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2181 JUMPI PUSH2 0x2180 PUSH2 0x1F50 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2191 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x212C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21AF JUMPI PUSH2 0x21AE PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21CC JUMPI PUSH2 0x21CB PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST PUSH2 0x21D8 DUP5 DUP3 DUP6 ADD PUSH2 0x216D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21F7 JUMPI PUSH2 0x21F6 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2204 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2215 DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2242 PUSH2 0x223D PUSH2 0x2238 DUP5 PUSH2 0x1D85 JUMP JUMPDEST PUSH2 0x221F JUMP JUMPDEST PUSH2 0x1D85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2253 DUP3 PUSH2 0x2228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2264 DUP3 PUSH2 0x2249 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2274 DUP2 PUSH2 0x225A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x228D PUSH0 DUP4 ADD DUP5 PUSH2 0x226B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22D7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22EA JUMPI PUSH2 0x22E9 PUSH2 0x2293 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2303 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x2310 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x231D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DB5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2339 DUP3 PUSH2 0x1C7D JUMP JUMPDEST PUSH2 0x2343 DUP2 DUP6 PUSH2 0x2325 JUMP JUMPDEST SWAP4 POP PUSH2 0x2353 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C97 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x236A DUP3 DUP6 PUSH2 0x232F JUMP JUMPDEST SWAP2 POP PUSH2 0x2376 DUP3 DUP5 PUSH2 0x232F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2394 PUSH2 0x238F DUP5 PUSH2 0x20FC JUMP JUMPDEST PUSH2 0x1FB6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23B0 JUMPI PUSH2 0x23AF PUSH2 0x1F54 JUMP JUMPDEST JUMPDEST PUSH2 0x23BB DUP5 DUP3 DUP6 PUSH2 0x1C97 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23D7 JUMPI PUSH2 0x23D6 PUSH2 0x1F50 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x23E7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2382 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2405 JUMPI PUSH2 0x2404 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2422 JUMPI PUSH2 0x2421 PUSH2 0x1BC6 JUMP JUMPDEST JUMPDEST PUSH2 0x242E DUP5 DUP3 DUP6 ADD PUSH2 0x23C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920617574686F72697A656420737570706C696572732063616E206D69 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E74207061636B616765642070726F64756374204E4654000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2491 PUSH1 0x37 DUP4 PUSH2 0x1C87 JUMP JUMPDEST SWAP2 POP PUSH2 0x249C DUP3 PUSH2 0x2437 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24BE DUP2 PUSH2 0x2485 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x24FC DUP3 PUSH2 0x1D27 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x252E JUMPI PUSH2 0x252D PUSH2 0x24C5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x255D DUP3 PUSH2 0x2539 JUMP JUMPDEST PUSH2 0x2567 DUP2 DUP6 PUSH2 0x2543 JUMP JUMPDEST SWAP4 POP PUSH2 0x2577 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C97 JUMP JUMPDEST PUSH2 0x2580 DUP2 PUSH2 0x1CBF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x259E PUSH0 DUP4 ADD DUP8 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x25AB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x25B8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EC0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x25CA DUP2 DUP5 PUSH2 0x2553 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25E3 DUP2 PUSH2 0x1BF5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25FE JUMPI PUSH2 0x25FD PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x260B DUP5 DUP3 DUP6 ADD PUSH2 0x25D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2670 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2635 JUMP JUMPDEST PUSH2 0x267A DUP7 DUP4 PUSH2 0x2635 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26AC PUSH2 0x26A7 PUSH2 0x26A2 DUP5 PUSH2 0x1D27 JUMP JUMPDEST PUSH2 0x221F JUMP JUMPDEST PUSH2 0x1D27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C5 DUP4 PUSH2 0x2692 JUMP JUMPDEST PUSH2 0x26D9 PUSH2 0x26D1 DUP3 PUSH2 0x26B3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2641 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x26ED PUSH2 0x26E1 JUMP JUMPDEST PUSH2 0x26F8 DUP2 DUP5 DUP5 PUSH2 0x26BC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x271B JUMPI PUSH2 0x2710 PUSH0 DUP3 PUSH2 0x26E5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26FE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2760 JUMPI PUSH2 0x2731 DUP2 PUSH2 0x2614 JUMP JUMPDEST PUSH2 0x273A DUP5 PUSH2 0x2626 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2749 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x275D PUSH2 0x2755 DUP6 PUSH2 0x2626 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x26FD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2780 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2765 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2798 DUP4 DUP4 PUSH2 0x2771 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27B1 DUP3 PUSH2 0x1C7D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27CA JUMPI PUSH2 0x27C9 PUSH2 0x1F58 JUMP JUMPDEST JUMPDEST PUSH2 0x27D4 DUP3 SLOAD PUSH2 0x22C0 JUMP JUMPDEST PUSH2 0x27DF DUP3 DUP3 DUP6 PUSH2 0x271F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2810 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x27FE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2808 DUP6 DUP3 PUSH2 0x278D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x286F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x281E DUP7 PUSH2 0x2614 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2845 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2820 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2862 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x285E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2771 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x288A PUSH0 DUP4 ADD DUP6 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x2897 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 CALLDATALOAD NUMBER XOR 0xD3 0xBD MUL RETURNDATASIZE 0xA9 LT PUSH27 0xB49D88542EE7E1547771ED2FD2A6C4D5ACCE439E64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "439:1046:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:207:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2366:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3498:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3324:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;792:149:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4144:578:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4788:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2186:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1921:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2519:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;523:25:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3719:144:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4986:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1211:593:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1000:482:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3929:153:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;597:51:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;938:207:9;1040:4;761:10;754:18;;1063:35;;;:11;:35;;;;:75;;;;1102:36;1126:11;1102:23;:36::i;:::-;1063:75;1056:82;;938:207;;;:::o;2366:89:5:-;2411:13;2443:5;2436:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2366:89;:::o;3498:154::-;3565:7;3584:22;3598:7;3584:13;:22::i;:::-;;3624:21;3637:7;3624:12;:21::i;:::-;3617:28;;3498:154;;;:::o;3324:113::-;3395:35;3404:2;3408:7;3417:12;:10;:12::i;:::-;3395:8;:35::i;:::-;3324:113;;:::o;792:149:17:-;1531:13:0;:11;:13::i;:::-;920:12:17::1;873:15;;:60;;;;;;;;;;;;;;;;;;792:149:::0;:::o;4144:578:5:-;4252:1;4238:16;;:2;:16;;;4234:87;;4307:1;4277:33;;;;;;;;;;;:::i;:::-;;;;;;;;4234:87;4539:21;4563:34;4571:2;4575:7;4584:12;:10;:12::i;:::-;4563:7;:34::i;:::-;4539:58;;4628:4;4611:21;;:13;:21;;;4607:109;;4676:4;4682:7;4691:13;4655:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4607:109;4224:498;4144:578;;;:::o;4788:132::-;4874:39;4891:4;4897:2;4901:7;4874:39;;;;;;;;;;;;:16;:39::i;:::-;4788:132;;;:::o;2186:118::-;2249:7;2275:22;2289:7;2275:13;:22::i;:::-;2268:29;;2186:118;;;:::o;1921:208::-;1984:7;2024:1;2007:19;;:5;:19;;;2003:87;;2076:1;2049:30;;;;;;;;;;;:::i;:::-;;;;;;;;2003:87;2106:9;:16;2116:5;2106:16;;;;;;;;;;;;;;;;2099:23;;1921:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2519:93:5:-;2566:13;2598:7;2591:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2519:93;:::o;523:25:17:-;;;;:::o;3719:144:5:-;3804:52;3823:12;:10;:12::i;:::-;3837:8;3847;3804:18;:52::i;:::-;3719:144;;:::o;4986:208::-;5099:31;5112:4;5118:2;5122:7;5099:12;:31::i;:::-;5140:47;5163:4;5169:2;5173:7;5182:4;5140:22;:47::i;:::-;4986:208;;;;:::o;1211:593:9:-;1284:13;1309:22;1323:7;1309:13;:22::i;:::-;;1342:23;1368:10;:19;1379:7;1368:19;;;;;;;;;;;1342:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:18;1418:10;:8;:10::i;:::-;1397:31;;1523:1;1507:4;1501:18;:23;1497:70;;1547:9;1540:16;;;;;;1497:70;1692:1;1672:9;1666:23;:27;1662:95;;;1730:4;1736:9;1716:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1709:37;;;;;;1662:95;1774:23;1789:7;1774:14;:23::i;:::-;1767:30;;;;1211:593;;;;:::o;1000:482:17:-;1056:7;1183:1;1135:15;;;;;;;;;;;:24;;;1160:10;1135:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1129:50;:55;1121:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;1278:10;;:12;;;;;;;;;:::i;:::-;;;;;;1338:33;1348:10;1360;;1338:9;:33::i;:::-;1383:35;1396:10;;1408:9;1383:12;:35::i;:::-;1463:10;;1456:18;;1000:482;;;:::o;3929:153:5:-;4017:4;4040:18;:25;4059:5;4040:25;;;;;;;;;;;;;;;:35;4066:8;4040:35;;;;;;;;;;;;;;;;;;;;;;;;;4033:42;;3929:153;;;;:::o;597:51:17:-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1562:300:5:-;1664:4;1714:25;1699:40;;;:11;:40;;;;:104;;;;1770:33;1755:48;;;:11;:48;;;;1699:104;:156;;;;1819:36;1843:11;1819:23;:36::i;:::-;1699:156;1680:175;;1562:300;;;:::o;16141:241::-;16204:7;16223:13;16239:17;16248:7;16239:8;:17::i;:::-;16223:33;;16287:1;16270:19;;:5;:19;;;16266:88;;16335:7;16312:31;;;;;;;;;;;:::i;:::-;;;;;;;;16266:88;16370:5;16363:12;;;16141:241;;;:::o;5940:127::-;6010:7;6036:15;:24;6052:7;6036:24;;;;;;;;;;;;;;;;;;;;;6029:31;;5940:127;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;14421:120:5:-;14501:33;14510:2;14514:7;14523:4;14529;14501:8;:33::i;:::-;14421:120;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;8840:795:5:-;8926:7;8945:12;8960:17;8969:7;8960:8;:17::i;:::-;8945:32;;9053:1;9037:18;;:4;:18;;;9033:86;;9071:37;9088:4;9094;9100:7;9071:16;:37::i;:::-;9033:86;9179:1;9163:18;;:4;:18;;;9159:256;;9279:48;9296:1;9300:7;9317:1;9321:5;9279:8;:48::i;:::-;9389:1;9370:9;:15;9380:4;9370:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9159:256;9443:1;9429:16;;:2;:16;;;9425:107;;9506:1;9489:9;:13;9499:2;9489:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9425:107;9561:2;9542:7;:16;9550:7;9542:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9598:7;9594:2;9579:27;;9588:4;9579:27;;;;;;;;;;;;9624:4;9617:11;;;8840:795;;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15594:312:5:-;15721:1;15701:22;;:8;:22;;;15697:91;;15768:8;15746:31;;;;;;;;;;;:::i;:::-;;;;;;;;15697:91;15835:8;15797:18;:25;15816:5;15797:25;;;;;;;;;;;;;;;:35;15823:8;15797:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15880:8;15858:41;;15873:5;15858:41;;;15890:8;15858:41;;;;;;:::i;:::-;;;;;;;;15594:312;;;:::o;16921:782::-;17054:1;17037:2;:14;;;:18;17033:664;;;17091:2;17075:36;;;17112:12;:10;:12::i;:::-;17126:4;17132:7;17141:4;17075:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17071:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17401:1;17384:6;:13;:18;17380:293;;17455:2;17433:25;;;;;;;;;;;:::i;:::-;;;;;;;;17380:293;17625:6;17619:13;17610:6;17606:2;17602:15;17595:38;17071:616;17203:41;;;17193:51;;;:6;:51;;;;17189:130;;17297:2;17275:25;;;;;;;;;;;:::i;:::-;;;;;;;;17189:130;17147:186;17033:664;16921:782;;;;:::o;3175:92::-;3226:13;3251:9;;;;;;;;;;;;;;3175:92;:::o;2678:255::-;2742:13;2767:22;2781:7;2767:13;:22::i;:::-;;2800:21;2824:10;:8;:10::i;:::-;2800:34;;2875:1;2857:7;2851:21;:25;:75;;;;;;;;;;;;;;;;;2893:7;2902:18;:7;:16;:18::i;:::-;2879:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2851:75;2844:82;;;2678:255;;;:::o;10635:100::-;10702:26;10712:2;10716:7;10702:26;;;;;;;;;;;;:9;:26::i;:::-;10635:100;;:::o;1923:167:9:-;2036:9;2014:10;:19;2025:7;2014:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;2060:23;2075:7;2060:23;;;;;;:::i;:::-;;;;;;;;1923:167;;:::o;763:146:13:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;5709:115:5:-;5775:7;5801;:16;5809:7;5801:16;;;;;;;;;;;;;;;;;;;;;5794:23;;5709:115;;;:::o;14723:662::-;14883:9;:31;;;;14912:1;14896:18;;:4;:18;;;;14883:31;14879:460;;;14930:13;14946:22;14960:7;14946:13;:22::i;:::-;14930:38;;15112:1;15096:18;;:4;:18;;;;:35;;;;;15127:4;15118:13;;:5;:13;;;;15096:35;:69;;;;;15136:29;15153:5;15160:4;15136:16;:29::i;:::-;15135:30;15096:69;15092:142;;;15214:4;15192:27;;;;;;;;;;;:::i;:::-;;;;;;;;15092:142;15252:9;15248:81;;;15306:7;15302:2;15286:28;;15295:5;15286:28;;;;;;;;;;;;15248:81;14916:423;14879:460;15376:2;15349:15;:24;15365:7;15349:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14723:662;;;;:::o;7084:368::-;7196:38;7210:5;7217:7;7226;7196:13;:38::i;:::-;7191:255;;7271:1;7254:19;;:5;:19;;;7250:186;;7323:7;7300:31;;;;;;;;;;;:::i;:::-;;;;;;;;7250:186;7404:7;7413;7377:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7191:255;7084:368;;;:::o;637:698:12:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;10956:182:5:-;11050:18;11056:2;11060:7;11050:5;:18::i;:::-;11078:53;11109:1;11113:2;11117:7;11126:4;11078:22;:53::i;:::-;10956:182;;;:::o;6378:272::-;6481:4;6535:1;6516:21;;:7;:21;;;;:127;;;;;6563:7;6554:16;;:5;:16;;;:52;;;;6574:32;6591:5;6598:7;6574:16;:32::i;:::-;6554:52;:88;;;;6635:7;6610:32;;:21;6623:7;6610:12;:21::i;:::-;:32;;;6554:88;6516:127;6497:146;;6378:272;;;;;:::o;12690:916:15:-;12743:7;12762:14;12779:1;12762:18;;12827:8;12818:5;:17;12814:103;;12864:8;12855:17;;;;;;:::i;:::-;;;;;12900:2;12890:12;;;;12814:103;12943:8;12934:5;:17;12930:103;;12980:8;12971:17;;;;;;:::i;:::-;;;;;13016:2;13006:12;;;;12930:103;13059:8;13050:5;:17;13046:103;;13096:8;13087:17;;;;;;:::i;:::-;;;;;13132:2;13122:12;;;;13046:103;13175:7;13166:5;:16;13162:100;;13211:7;13202:16;;;;;;:::i;:::-;;;;;13246:1;13236:11;;;;13162:100;13288:7;13279:5;:16;13275:100;;13324:7;13315:16;;;;;;:::i;:::-;;;;;13359:1;13349:11;;;;13275:100;13401:7;13392:5;:16;13388:100;;13437:7;13428:16;;;;;;:::i;:::-;;;;;13472:1;13462:11;;;;13388:100;13514:7;13505:5;:16;13501:66;;13551:1;13541:11;;;;13501:66;13593:6;13586:13;;;12690:916;;;:::o;9957:327:5:-;10038:1;10024:16;;:2;:16;;;10020:87;;10093:1;10063:33;;;;;;;;;;;:::i;:::-;;;;;;;;10020:87;10116:21;10140:32;10148:2;10152:7;10169:1;10140:7;:32::i;:::-;10116:56;;10211:1;10186:27;;:13;:27;;;10182:96;;10264:1;10236:31;;;;;;;;;;;:::i;:::-;;;;;;;;10182:96;10010:274;9957:327;;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:329::-;4949:6;4998:2;4986:9;4977:7;4973:23;4969:32;4966:119;;;5004:79;;:::i;:::-;4966:119;5124:1;5149:53;5194:7;5185:6;5174:9;5170:22;5149:53;:::i;:::-;5139:63;;5095:117;4890:329;;;;:::o;5225:619::-;5302:6;5310;5318;5367:2;5355:9;5346:7;5342:23;5338:32;5335:119;;;5373:79;;:::i;:::-;5335:119;5493:1;5518:53;5563:7;5554:6;5543:9;5539:22;5518:53;:::i;:::-;5508:63;;5464:117;5620:2;5646:53;5691:7;5682:6;5671:9;5667:22;5646:53;:::i;:::-;5636:63;;5591:118;5748:2;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5719:118;5225:619;;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:308::-;10053:4;10143:18;10135:6;10132:30;10129:56;;;10165:18;;:::i;:::-;10129:56;10203:29;10225:6;10203:29;:::i;:::-;10195:37;;10287:4;10281;10277:15;10269:23;;9991:308;;;:::o;10305:425::-;10383:5;10408:66;10424:49;10466:6;10424:49;:::i;:::-;10408:66;:::i;:::-;10399:75;;10497:6;10490:5;10483:21;10535:4;10528:5;10524:16;10573:3;10564:6;10559:3;10555:16;10552:25;10549:112;;;10580:79;;:::i;:::-;10549:112;10670:54;10717:6;10712:3;10707;10670:54;:::i;:::-;10389:341;10305:425;;;;;:::o;10750:340::-;10806:5;10855:3;10848:4;10840:6;10836:17;10832:27;10822:122;;10863:79;;:::i;:::-;10822:122;10980:6;10967:20;11005:79;11080:3;11072:6;11065:4;11057:6;11053:17;11005:79;:::i;:::-;10996:88;;10812:278;10750:340;;;;:::o;11096:509::-;11165:6;11214:2;11202:9;11193:7;11189:23;11185:32;11182:119;;;11220:79;;:::i;:::-;11182:119;11368:1;11357:9;11353:17;11340:31;11398:18;11390:6;11387:30;11384:117;;;11420:79;;:::i;:::-;11384:117;11525:63;11580:7;11571:6;11560:9;11556:22;11525:63;:::i;:::-;11515:73;;11311:287;11096:509;;;;:::o;11611:474::-;11679:6;11687;11736:2;11724:9;11715:7;11711:23;11707:32;11704:119;;;11742:79;;:::i;:::-;11704:119;11862:1;11887:53;11932:7;11923:6;11912:9;11908:22;11887:53;:::i;:::-;11877:63;;11833:117;11989:2;12015:53;12060:7;12051:6;12040:9;12036:22;12015:53;:::i;:::-;12005:63;;11960:118;11611:474;;;;;:::o;12091:60::-;12119:3;12140:5;12133:12;;12091:60;;;:::o;12157:142::-;12207:9;12240:53;12258:34;12267:24;12285:5;12267:24;:::i;:::-;12258:34;:::i;:::-;12240:53;:::i;:::-;12227:66;;12157:142;;;:::o;12305:126::-;12355:9;12388:37;12419:5;12388:37;:::i;:::-;12375:50;;12305:126;;;:::o;12437:163::-;12524:9;12557:37;12588:5;12557:37;:::i;:::-;12544:50;;12437:163;;;:::o;12606:205::-;12730:74;12798:5;12730:74;:::i;:::-;12725:3;12718:87;12606:205;;:::o;12817:296::-;12947:4;12985:2;12974:9;12970:18;12962:26;;12998:108;13103:1;13092:9;13088:17;13079:6;12998:108;:::i;:::-;12817:296;;;;:::o;13119:180::-;13167:77;13164:1;13157:88;13264:4;13261:1;13254:15;13288:4;13285:1;13278:15;13305:320;13349:6;13386:1;13380:4;13376:12;13366:22;;13433:1;13427:4;13423:12;13454:18;13444:81;;13510:4;13502:6;13498:17;13488:27;;13444:81;13572:2;13564:6;13561:14;13541:18;13538:38;13535:84;;13591:18;;:::i;:::-;13535:84;13356:269;13305:320;;;:::o;13631:442::-;13780:4;13818:2;13807:9;13803:18;13795:26;;13831:71;13899:1;13888:9;13884:17;13875:6;13831:71;:::i;:::-;13912:72;13980:2;13969:9;13965:18;13956:6;13912:72;:::i;:::-;13994;14062:2;14051:9;14047:18;14038:6;13994:72;:::i;:::-;13631:442;;;;;;:::o;14079:148::-;14181:11;14218:3;14203:18;;14079:148;;;;:::o;14233:390::-;14339:3;14367:39;14400:5;14367:39;:::i;:::-;14422:89;14504:6;14499:3;14422:89;:::i;:::-;14415:96;;14520:65;14578:6;14573:3;14566:4;14559:5;14555:16;14520:65;:::i;:::-;14610:6;14605:3;14601:16;14594:23;;14343:280;14233:390;;;;:::o;14629:435::-;14809:3;14831:95;14922:3;14913:6;14831:95;:::i;:::-;14824:102;;14943:95;15034:3;15025:6;14943:95;:::i;:::-;14936:102;;15055:3;15048:10;;14629:435;;;;;:::o;15070:434::-;15159:5;15184:66;15200:49;15242:6;15200:49;:::i;:::-;15184:66;:::i;:::-;15175:75;;15273:6;15266:5;15259:21;15311:4;15304:5;15300:16;15349:3;15340:6;15335:3;15331:16;15328:25;15325:112;;;15356:79;;:::i;:::-;15325:112;15446:52;15491:6;15486:3;15481;15446:52;:::i;:::-;15165:339;15070:434;;;;;:::o;15524:355::-;15591:5;15640:3;15633:4;15625:6;15621:17;15617:27;15607:122;;15648:79;;:::i;:::-;15607:122;15758:6;15752:13;15783:90;15869:3;15861:6;15854:4;15846:6;15842:17;15783:90;:::i;:::-;15774:99;;15597:282;15524:355;;;;:::o;15885:524::-;15965:6;16014:2;16002:9;15993:7;15989:23;15985:32;15982:119;;;16020:79;;:::i;:::-;15982:119;16161:1;16150:9;16146:17;16140:24;16191:18;16183:6;16180:30;16177:117;;;16213:79;;:::i;:::-;16177:117;16318:74;16384:7;16375:6;16364:9;16360:22;16318:74;:::i;:::-;16308:84;;16111:291;15885:524;;;;:::o;16415:242::-;16555:34;16551:1;16543:6;16539:14;16532:58;16624:25;16619:2;16611:6;16607:15;16600:50;16415:242;:::o;16663:366::-;16805:3;16826:67;16890:2;16885:3;16826:67;:::i;:::-;16819:74;;16902:93;16991:3;16902:93;:::i;:::-;17020:2;17015:3;17011:12;17004:19;;16663:366;;;:::o;17035:419::-;17201:4;17239:2;17228:9;17224:18;17216:26;;17288:9;17282:4;17278:20;17274:1;17263:9;17259:17;17252:47;17316:131;17442:4;17316:131;:::i;:::-;17308:139;;17035:419;;;:::o;17460:180::-;17508:77;17505:1;17498:88;17605:4;17602:1;17595:15;17629:4;17626:1;17619:15;17646:233;17685:3;17708:24;17726:5;17708:24;:::i;:::-;17699:33;;17754:66;17747:5;17744:77;17741:103;;17824:18;;:::i;:::-;17741:103;17871:1;17864:5;17860:13;17853:20;;17646:233;;;:::o;17885:98::-;17936:6;17970:5;17964:12;17954:22;;17885:98;;;:::o;17989:168::-;18072:11;18106:6;18101:3;18094:19;18146:4;18141:3;18137:14;18122:29;;17989:168;;;;:::o;18163:373::-;18249:3;18277:38;18309:5;18277:38;:::i;:::-;18331:70;18394:6;18389:3;18331:70;:::i;:::-;18324:77;;18410:65;18468:6;18463:3;18456:4;18449:5;18445:16;18410:65;:::i;:::-;18500:29;18522:6;18500:29;:::i;:::-;18495:3;18491:39;18484:46;;18253:283;18163:373;;;;:::o;18542:640::-;18737:4;18775:3;18764:9;18760:19;18752:27;;18789:71;18857:1;18846:9;18842:17;18833:6;18789:71;:::i;:::-;18870:72;18938:2;18927:9;18923:18;18914:6;18870:72;:::i;:::-;18952;19020:2;19009:9;19005:18;18996:6;18952:72;:::i;:::-;19071:9;19065:4;19061:20;19056:2;19045:9;19041:18;19034:48;19099:76;19170:4;19161:6;19099:76;:::i;:::-;19091:84;;18542:640;;;;;;;:::o;19188:141::-;19244:5;19275:6;19269:13;19260:22;;19291:32;19317:5;19291:32;:::i;:::-;19188:141;;;;:::o;19335:349::-;19404:6;19453:2;19441:9;19432:7;19428:23;19424:32;19421:119;;;19459:79;;:::i;:::-;19421:119;19579:1;19604:63;19659:7;19650:6;19639:9;19635:22;19604:63;:::i;:::-;19594:73;;19550:127;19335:349;;;;:::o;19690:141::-;19739:4;19762:3;19754:11;;19785:3;19782:1;19775:14;19819:4;19816:1;19806:18;19798:26;;19690:141;;;:::o;19837:93::-;19874:6;19921:2;19916;19909:5;19905:14;19901:23;19891:33;;19837:93;;;:::o;19936:107::-;19980:8;20030:5;20024:4;20020:16;19999:37;;19936:107;;;;:::o;20049:393::-;20118:6;20168:1;20156:10;20152:18;20191:97;20221:66;20210:9;20191:97;:::i;:::-;20309:39;20339:8;20328:9;20309:39;:::i;:::-;20297:51;;20381:4;20377:9;20370:5;20366:21;20357:30;;20430:4;20420:8;20416:19;20409:5;20406:30;20396:40;;20125:317;;20049:393;;;;;:::o;20448:142::-;20498:9;20531:53;20549:34;20558:24;20576:5;20558:24;:::i;:::-;20549:34;:::i;:::-;20531:53;:::i;:::-;20518:66;;20448:142;;;:::o;20596:75::-;20639:3;20660:5;20653:12;;20596:75;;;:::o;20677:269::-;20787:39;20818:7;20787:39;:::i;:::-;20848:91;20897:41;20921:16;20897:41;:::i;:::-;20889:6;20882:4;20876:11;20848:91;:::i;:::-;20842:4;20835:105;20753:193;20677:269;;;:::o;20952:73::-;20997:3;20952:73;:::o;21031:189::-;21108:32;;:::i;:::-;21149:65;21207:6;21199;21193:4;21149:65;:::i;:::-;21084:136;21031:189;;:::o;21226:186::-;21286:120;21303:3;21296:5;21293:14;21286:120;;;21357:39;21394:1;21387:5;21357:39;:::i;:::-;21330:1;21323:5;21319:13;21310:22;;21286:120;;;21226:186;;:::o;21418:543::-;21519:2;21514:3;21511:11;21508:446;;;21553:38;21585:5;21553:38;:::i;:::-;21637:29;21655:10;21637:29;:::i;:::-;21627:8;21623:44;21820:2;21808:10;21805:18;21802:49;;;21841:8;21826:23;;21802:49;21864:80;21920:22;21938:3;21920:22;:::i;:::-;21910:8;21906:37;21893:11;21864:80;:::i;:::-;21523:431;;21508:446;21418:543;;;:::o;21967:117::-;22021:8;22071:5;22065:4;22061:16;22040:37;;21967:117;;;;:::o;22090:169::-;22134:6;22167:51;22215:1;22211:6;22203:5;22200:1;22196:13;22167:51;:::i;:::-;22163:56;22248:4;22242;22238:15;22228:25;;22141:118;22090:169;;;;:::o;22264:295::-;22340:4;22486:29;22511:3;22505:4;22486:29;:::i;:::-;22478:37;;22548:3;22545:1;22541:11;22535:4;22532:21;22524:29;;22264:295;;;;:::o;22564:1395::-;22681:37;22714:3;22681:37;:::i;:::-;22783:18;22775:6;22772:30;22769:56;;;22805:18;;:::i;:::-;22769:56;22849:38;22881:4;22875:11;22849:38;:::i;:::-;22934:67;22994:6;22986;22980:4;22934:67;:::i;:::-;23028:1;23052:4;23039:17;;23084:2;23076:6;23073:14;23101:1;23096:618;;;;23758:1;23775:6;23772:77;;;23824:9;23819:3;23815:19;23809:26;23800:35;;23772:77;23875:67;23935:6;23928:5;23875:67;:::i;:::-;23869:4;23862:81;23731:222;23066:887;;23096:618;23148:4;23144:9;23136:6;23132:22;23182:37;23214:4;23182:37;:::i;:::-;23241:1;23255:208;23269:7;23266:1;23263:14;23255:208;;;23348:9;23343:3;23339:19;23333:26;23325:6;23318:42;23399:1;23391:6;23387:14;23377:24;;23446:2;23435:9;23431:18;23418:31;;23292:4;23289:1;23285:12;23280:17;;23255:208;;;23491:6;23482:7;23479:19;23476:179;;;23549:9;23544:3;23540:19;23534:26;23592:48;23634:4;23626:6;23622:17;23611:9;23592:48;:::i;:::-;23584:6;23577:64;23499:156;23476:179;23701:1;23697;23689:6;23685:14;23681:22;23675:4;23668:36;23103:611;;;23066:887;;22656:1303;;;22564:1395;;:::o;23965:332::-;24086:4;24124:2;24113:9;24109:18;24101:26;;24137:71;24205:1;24194:9;24190:17;24181:6;24137:71;:::i;:::-;24218:72;24286:2;24275:9;24271:18;24262:6;24218:72;:::i;:::-;23965:332;;;;;:::o;24303:180::-;24351:77;24348:1;24341:88;24448:4;24445:1;24438:15;24472:4;24469:1;24462:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2099400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"SetTradeManagementSC(address)": "infinite",
								"TradeManagement()": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(string)": "infinite",
								"name()": "infinite",
								"owner()": "2538",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenCount()": "2492",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 439,
									"end": 1485,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 661,
									"end": 742,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 661,
									"end": 742,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 661,
									"end": 742,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 661,
									"end": 742,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 661,
									"end": 742,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 661,
									"end": 742,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 661,
									"end": 742,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 661,
									"end": 742,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 661,
									"end": 742,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 661,
									"end": 742,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 661,
									"end": 742,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 713,
									"end": 723,
									"name": "CALLER",
									"source": 17
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "C"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "5261774D6174657269616C730000000000000000000000000000000000000000"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "PUSH",
									"source": 5,
									"value": "524D000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1453,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1448,
									"end": 1461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1448,
									"end": 1461,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1481,
									"end": 1488,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1478,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1471,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1471,
									"end": 1488,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1382,
									"end": 1495,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "16"
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 18,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 18,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 18,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 18,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 18,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 18
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 18
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 18,
									"value": "53"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 18,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 18
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 18,
									"value": "60"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "27"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 18,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "26"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 18,
									"value": "58"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "28"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 18,
									"value": "63"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "29"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 18,
									"value": "65"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "25"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 18,
									"value": "64"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "31"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 18,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "30"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 18,
									"value": "69"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 18,
									"value": "33"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 18,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "74"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "32"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 18,
									"value": "74"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 18,
									"value": "34"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 18,
									"value": "77"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 18,
									"value": "78"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 18,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "23"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 18,
									"value": "81"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "33"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 18,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 18
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 18,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "35"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 18,
									"value": "84"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "86"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 18,
									"value": "86"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 18,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "88"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "18"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 18,
									"value": "88"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 18,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 18,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "21"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 18,
									"value": "91"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "92"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "34"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 18,
									"value": "92"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 18
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 18
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 18,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "96"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "37"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 18,
									"value": "96"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 18,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "97"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "22"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 18,
									"value": "97"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 18,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 18
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 18
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 18
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "102"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 18,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 18
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "36"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 18,
									"value": "102"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 18,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 18
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 18,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 18,
									"value": "38"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "105"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "38"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 18,
									"value": "105"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "107"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "39"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 18,
									"value": "107"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 18,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "109"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 18
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 18,
									"value": "109"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 18
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "tag",
									"source": 17,
									"value": "16"
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 439,
									"end": 1485,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6354318d3bd023da9107a00b49d88542ee7e1547771ed2fd2a6c4d5acce439e64736f6c63430008160033",
									".code": [
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "C87B56DD"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "C87B56DD"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "D85D3D27"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "E985E9C5"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "F0F9EE46"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "F2FDE38B"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "8DA5CB5B"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "95D89B41"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "9F181B5E"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "A22CB465"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "B88D4FDE"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "42842E0E"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "6352211E"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "70A08231"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "715018A6"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "1FFC9A7"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "6FDDE03"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "81812FC"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "95EA7B3"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "FFFC4CF"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 439,
											"end": 1485,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 938,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 938,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 938,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2366,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2366,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3498,
											"end": 3652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3498,
											"end": 3652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 3498,
											"end": 3652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3324,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3324,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 792,
											"end": 941,
											"name": "tag",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 792,
											"end": 941,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 792,
											"end": 941,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 792,
											"end": 941,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 792,
											"end": 941,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 792,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 792,
											"end": 941,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 792,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "tag",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 792,
											"end": 941,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4144,
											"end": 4722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4144,
											"end": 4722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4788,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4788,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2186,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2186,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2186,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1921,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1921,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1921,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2519,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2519,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 523,
											"end": 548,
											"name": "tag",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 523,
											"end": 548,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 523,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 523,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 523,
											"end": 548,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 548,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 523,
											"end": 548,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 523,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "tag",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 523,
											"end": 548,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 548,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3719,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3719,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4986,
											"end": 5194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4986,
											"end": 5194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1211,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1211,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1211,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "tag",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 1000,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "tag",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 1000,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "tag",
											"source": 17,
											"value": "89"
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 1000,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "tag",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3929,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3929,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3929,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 597,
											"end": 648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 597,
											"end": 648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 771,
											"name": "PUSH",
											"source": 9,
											"value": "49064906"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 754,
											"end": 772,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1098,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1098,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1098,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1074,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1098,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1063,
											"end": 1098,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1098,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1138,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1063,
											"end": 1138,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1126,
											"end": 1137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1102,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1138,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1102,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1063,
											"end": 1138,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1063,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1138,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1056,
											"end": 1138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 938,
											"end": 1145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2411,
											"end": 2424,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2443,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2436,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2436,
											"end": 2448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3584,
											"end": 3606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3637,
											"end": 3644,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3624,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3617,
											"end": 3645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3617,
											"end": 3645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3404,
											"end": 3406,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3415,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3417,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3395,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3430,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3395,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 792,
											"end": 941,
											"name": "tag",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 792,
											"end": 941,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 932,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 873,
											"end": 888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 873,
											"end": 888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 873,
											"end": 933,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 792,
											"end": 941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4252,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4254,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4254,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4240,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4254,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4238,
											"end": 4254,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4254,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4234,
											"end": 4321,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4277,
											"end": 4310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4310,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4234,
											"end": 4321,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4234,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4571,
											"end": 4573,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4575,
											"end": 4582,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4584,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4584,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4584,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4584,
											"end": 4596,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4584,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4563,
											"end": 4597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4597,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4563,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4597,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4628,
											"end": 4632,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4607,
											"end": 4716,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4676,
											"end": 4680,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4691,
											"end": 4704,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "PUSH",
											"source": 5,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4655,
											"end": 4705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4655,
											"end": 4705,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4716,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4607,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4224,
											"end": 4722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4891,
											"end": 4895,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4899,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4901,
											"end": 4908,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4874,
											"end": 4913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4874,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2289,
											"end": 2296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2275,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2275,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2275,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2297,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2026,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2003,
											"end": 2090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2076,
											"end": 2077,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2049,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2090,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2003,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2121,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2122,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 2129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2579,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2591,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2591,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 548,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 523,
											"end": 548,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 523,
											"end": 548,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 523,
											"end": 548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3804,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3823,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3823,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3823,
											"end": 3835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3835,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3823,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3855,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3804,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3804,
											"end": 3856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3804,
											"end": 3856,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3804,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5112,
											"end": 5116,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5129,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 5099,
											"end": 5130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5099,
											"end": 5130,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5099,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5140,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5163,
											"end": 5167,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5171,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5180,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5140,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 5140,
											"end": 5187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5140,
											"end": 5187,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5140,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 5194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1284,
											"end": 1297,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1323,
											"end": 1330,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1309,
											"end": 1331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1378,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1368,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1387,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1342,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1342,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1418,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 1418,
											"end": 1428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1418,
											"end": 1428,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 1418,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1428,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1397,
											"end": 1428,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1523,
											"end": 1524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1519,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1524,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1497,
											"end": 1567,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1540,
											"end": 1556,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1567,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 1497,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1689,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1693,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1757,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1662,
											"end": 1757,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1730,
											"end": 1734,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1736,
											"end": 1745,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 1716,
											"end": 1746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1746,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1746,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1709,
											"end": 1746,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1757,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1662,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1789,
											"end": 1796,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 1774,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1797,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1774,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "tag",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1056,
											"end": 1063,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1184,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1159,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1159,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1159,
											"name": "PUSH",
											"source": 17,
											"value": "4B297269"
										},
										{
											"begin": 1160,
											"end": 1170,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 1135,
											"end": 1171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "tag",
											"source": 17,
											"value": "183"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "tag",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 1135,
											"end": 1171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "tag",
											"source": 17,
											"value": "186"
										},
										{
											"begin": 1135,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1129,
											"end": 1179,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1129,
											"end": 1184,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "PUSH",
											"source": 17,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 1121,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "tag",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "tag",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 1121,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1288,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1278,
											"end": 1288,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 1278,
											"end": 1290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "tag",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 1278,
											"end": 1290,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 1348,
											"end": 1358,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1360,
											"end": 1370,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 1338,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "tag",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1383,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 1396,
											"end": 1406,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1396,
											"end": 1406,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1408,
											"end": 1417,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1383,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 1383,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1383,
											"end": 1418,
											"name": "tag",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 1383,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1463,
											"end": 1473,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1463,
											"end": 1473,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4064,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4065,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4074,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4040,
											"end": 4075,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 4082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 597,
											"end": 648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1562,
											"end": 1862,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1562,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1739,
											"name": "PUSH",
											"source": 5,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1699,
											"end": 1739,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1699,
											"end": 1739,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1739,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1710,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1739,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1699,
											"end": 1739,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1739,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1739,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1803,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1699,
											"end": 1803,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1803,
											"name": "PUSH",
											"source": 5,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1755,
											"end": 1803,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1755,
											"end": 1803,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1803,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1766,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1803,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1755,
											"end": 1803,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1803,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1755,
											"end": 1803,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1803,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1699,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1699,
											"end": 1855,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1855,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1843,
											"end": 1854,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 1819,
											"end": 1855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1819,
											"end": 1855,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1819,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1855,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1699,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1855,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1562,
											"end": 1862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16141,
											"end": 16382,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 16141,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16204,
											"end": 16211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16223,
											"end": 16236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16239,
											"end": 16256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 16248,
											"end": 16255,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16239,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 16239,
											"end": 16256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16239,
											"end": 16256,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 16239,
											"end": 16256,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16223,
											"end": 16256,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16223,
											"end": 16256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16287,
											"end": 16288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16270,
											"end": 16289,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16270,
											"end": 16289,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16270,
											"end": 16275,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16270,
											"end": 16289,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16270,
											"end": 16289,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16270,
											"end": 16289,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16266,
											"end": 16354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 16266,
											"end": 16354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16335,
											"end": 16342,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 16312,
											"end": 16343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16312,
											"end": 16343,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16266,
											"end": 16354,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 16266,
											"end": 16354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16370,
											"end": 16375,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16363,
											"end": 16375,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16363,
											"end": 16375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16363,
											"end": 16375,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16141,
											"end": 16382,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16141,
											"end": 16382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16141,
											"end": 16382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16141,
											"end": 16382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6067,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5940,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6010,
											"end": 6017,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6051,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6052,
											"end": 6059,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6036,
											"end": 6060,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6060,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6029,
											"end": 6060,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14421,
											"end": 14541,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 14421,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14501,
											"end": 14534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 14510,
											"end": 14512,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14514,
											"end": 14521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14523,
											"end": 14527,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14529,
											"end": 14533,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14501,
											"end": 14509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 14501,
											"end": 14534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14501,
											"end": 14534,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 14501,
											"end": 14534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14421,
											"end": 14541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14421,
											"end": 14541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14421,
											"end": 14541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14421,
											"end": 14541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8840,
											"end": 9635,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 8840,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8926,
											"end": 8933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8945,
											"end": 8957,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 8969,
											"end": 8976,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 8960,
											"end": 8977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8977,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 8960,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8945,
											"end": 8977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8945,
											"end": 8977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9054,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9037,
											"end": 9055,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9037,
											"end": 9055,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9037,
											"end": 9041,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9037,
											"end": 9055,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9037,
											"end": 9055,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9037,
											"end": 9055,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 9033,
											"end": 9119,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9071,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 9088,
											"end": 9092,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9094,
											"end": 9098,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9100,
											"end": 9107,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9071,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 9071,
											"end": 9108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9071,
											"end": 9108,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 9071,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9119,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 9033,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9179,
											"end": 9180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9163,
											"end": 9181,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9163,
											"end": 9181,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9163,
											"end": 9167,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9163,
											"end": 9181,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9163,
											"end": 9181,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9163,
											"end": 9181,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9159,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9159,
											"end": 9415,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 9307,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9317,
											"end": 9318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9326,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 9279,
											"end": 9327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9327,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9279,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9389,
											"end": 9390,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9370,
											"end": 9379,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9380,
											"end": 9384,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9370,
											"end": 9390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9390,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9390,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9390,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9390,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9159,
											"end": 9415,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9159,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9443,
											"end": 9444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9429,
											"end": 9445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9429,
											"end": 9445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9429,
											"end": 9431,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9429,
											"end": 9445,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9429,
											"end": 9445,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9429,
											"end": 9445,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9425,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9425,
											"end": 9532,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9507,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9489,
											"end": 9498,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9499,
											"end": 9501,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9507,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9425,
											"end": 9532,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9425,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9561,
											"end": 9563,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9557,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9598,
											"end": 9605,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9594,
											"end": 9596,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9588,
											"end": 9592,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9579,
											"end": 9606,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9617,
											"end": 9628,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9617,
											"end": 9628,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9617,
											"end": 9628,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9635,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9635,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8840,
											"end": 9635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15594,
											"end": 15906,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 15594,
											"end": 15906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15721,
											"end": 15722,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15701,
											"end": 15723,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15701,
											"end": 15723,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15701,
											"end": 15709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15701,
											"end": 15723,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15701,
											"end": 15723,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15701,
											"end": 15723,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15697,
											"end": 15788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 15697,
											"end": 15788,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "PUSH",
											"source": 5,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 15746,
											"end": 15777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15746,
											"end": 15777,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15697,
											"end": 15788,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 15697,
											"end": 15788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15835,
											"end": 15843,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15815,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15816,
											"end": 15821,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15797,
											"end": 15822,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15823,
											"end": 15831,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15797,
											"end": 15843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15880,
											"end": 15888,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15873,
											"end": 15878,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15890,
											"end": 15898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 15858,
											"end": 15899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15858,
											"end": 15899,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15594,
											"end": 15906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15594,
											"end": 15906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15594,
											"end": 15906,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15594,
											"end": 15906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16921,
											"end": 17703,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 16921,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17054,
											"end": 17055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17037,
											"end": 17039,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17051,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17037,
											"end": 17051,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17051,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17055,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 17033,
											"end": 17697,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17033,
											"end": 17697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 17033,
											"end": 17697,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17075,
											"end": 17111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17111,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17112,
											"end": 17124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 17112,
											"end": 17122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 17112,
											"end": 17124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17112,
											"end": 17124,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 17112,
											"end": 17124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17126,
											"end": 17130,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17132,
											"end": 17139,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17141,
											"end": 17145,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 17075,
											"end": 17146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 17075,
											"end": 17146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 17075,
											"end": 17146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17401,
											"end": 17402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17384,
											"end": 17390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17384,
											"end": 17397,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17384,
											"end": 17402,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17380,
											"end": 17673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 17380,
											"end": 17673,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17455,
											"end": 17457,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 17433,
											"end": 17458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17433,
											"end": 17458,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17380,
											"end": 17673,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 17380,
											"end": 17673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17625,
											"end": 17631,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17619,
											"end": 17632,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17610,
											"end": 17616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17606,
											"end": 17608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17602,
											"end": 17617,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17595,
											"end": 17633,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 17071,
											"end": 17687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17203,
											"end": 17244,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 17203,
											"end": 17244,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 17203,
											"end": 17244,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17193,
											"end": 17244,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17193,
											"end": 17244,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17193,
											"end": 17244,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17193,
											"end": 17199,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17193,
											"end": 17244,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17193,
											"end": 17244,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 17193,
											"end": 17244,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17193,
											"end": 17244,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 17189,
											"end": 17319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 17189,
											"end": 17319,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17297,
											"end": 17299,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 17275,
											"end": 17300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17275,
											"end": 17300,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17189,
											"end": 17319,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 17189,
											"end": 17319,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17147,
											"end": 17333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17033,
											"end": 17697,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 17033,
											"end": 17697,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16921,
											"end": 17703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16921,
											"end": 17703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16921,
											"end": 17703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16921,
											"end": 17703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16921,
											"end": 17703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3267,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3175,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3226,
											"end": 3239,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3251,
											"end": 3260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2933,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2678,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 2781,
											"end": 2788,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2767,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2821,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 2824,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2824,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2834,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 2824,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2875,
											"end": 2876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2864,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2872,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2876,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2893,
											"end": 2900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 2902,
											"end": 2909,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 2902,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2920,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 2902,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2879,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2879,
											"end": 2921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 2851,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2933,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2933,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2678,
											"end": 2933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10735,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 10635,
											"end": 10735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10712,
											"end": 10714,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10716,
											"end": 10723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10702,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10702,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10635,
											"end": 10735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 2090,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1923,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2024,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2032,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2045,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2014,
											"end": 2045,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2014,
											"end": 2045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2045,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2014,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "PUSH",
											"source": 9,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 2075,
											"end": 2082,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2060,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 2090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 2090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1923,
											"end": 2090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5709,
											"end": 5824,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 5709,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5808,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5809,
											"end": 5816,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5801,
											"end": 5817,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14723,
											"end": 15385,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 14723,
											"end": 15385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14883,
											"end": 14892,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14883,
											"end": 14914,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14883,
											"end": 14914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 14883,
											"end": 14914,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14883,
											"end": 14914,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14912,
											"end": 14913,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14896,
											"end": 14900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14896,
											"end": 14914,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14883,
											"end": 14914,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 14883,
											"end": 14914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14879,
											"end": 15339,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14879,
											"end": 15339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 14879,
											"end": 15339,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14930,
											"end": 14943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 14960,
											"end": 14967,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14946,
											"end": 14959,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 14946,
											"end": 14968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 14946,
											"end": 14968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14930,
											"end": 14968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14930,
											"end": 14968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15112,
											"end": 15113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15100,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15114,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15131,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 15096,
											"end": 15131,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15127,
											"end": 15131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15118,
											"end": 15131,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15118,
											"end": 15131,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15118,
											"end": 15123,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15118,
											"end": 15131,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15118,
											"end": 15131,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15118,
											"end": 15131,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15118,
											"end": 15131,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15131,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 15096,
											"end": 15131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15165,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 15096,
											"end": 15165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15136,
											"end": 15165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 15153,
											"end": 15158,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15160,
											"end": 15164,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15136,
											"end": 15152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 15136,
											"end": 15165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15136,
											"end": 15165,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 15136,
											"end": 15165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15135,
											"end": 15165,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15096,
											"end": 15165,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 15096,
											"end": 15165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15234,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 15092,
											"end": 15234,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15214,
											"end": 15218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "PUSH",
											"source": 5,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 15192,
											"end": 15219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15192,
											"end": 15219,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15234,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 15092,
											"end": 15234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15252,
											"end": 15261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15248,
											"end": 15329,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15248,
											"end": 15329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 15248,
											"end": 15329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15306,
											"end": 15313,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15302,
											"end": 15304,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15295,
											"end": 15300,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15286,
											"end": 15314,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 15248,
											"end": 15329,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 15248,
											"end": 15329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14916,
											"end": 15339,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14879,
											"end": 15339,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 14879,
											"end": 15339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15376,
											"end": 15378,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15364,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15365,
											"end": 15372,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15349,
											"end": 15378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14723,
											"end": 15385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14723,
											"end": 15385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14723,
											"end": 15385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14723,
											"end": 15385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14723,
											"end": 15385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7084,
											"end": 7452,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 7084,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7196,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 7210,
											"end": 7215,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7217,
											"end": 7224,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7226,
											"end": 7233,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7196,
											"end": 7209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 7196,
											"end": 7234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7196,
											"end": 7234,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 7196,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 7191,
											"end": 7446,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7271,
											"end": 7272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7273,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7254,
											"end": 7273,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7254,
											"end": 7259,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7254,
											"end": 7273,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7254,
											"end": 7273,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7254,
											"end": 7273,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7250,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 7250,
											"end": 7436,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7323,
											"end": 7330,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 7300,
											"end": 7331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7300,
											"end": 7331,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7250,
											"end": 7436,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 7250,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7404,
											"end": 7411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7413,
											"end": 7420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "PUSH",
											"source": 5,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 7377,
											"end": 7421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7421,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7191,
											"end": 7446,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 7191,
											"end": 7446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7084,
											"end": 7452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7084,
											"end": 7452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7084,
											"end": 7452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7084,
											"end": 7452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 12,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 12
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10956,
											"end": 11138,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10956,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 11056,
											"end": 11058,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11060,
											"end": 11067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 11050,
											"end": 11068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11078,
											"end": 11131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 11109,
											"end": 11110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11113,
											"end": 11115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11117,
											"end": 11124,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11126,
											"end": 11130,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11078,
											"end": 11100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 11078,
											"end": 11131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11078,
											"end": 11131,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 11078,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10956,
											"end": 11138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10956,
											"end": 11138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10956,
											"end": 11138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10956,
											"end": 11138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6378,
											"end": 6650,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 6378,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6481,
											"end": 6485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6535,
											"end": 6536,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6537,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6516,
											"end": 6537,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6523,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6537,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6516,
											"end": 6537,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6537,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6537,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6643,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6643,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 6516,
											"end": 6643,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6563,
											"end": 6570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6570,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6554,
											"end": 6570,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6559,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6570,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6554,
											"end": 6570,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6570,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 6591,
											"end": 6596,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6605,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 6574,
											"end": 6606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6606,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 6574,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 6554,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6642,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 6554,
											"end": 6642,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6635,
											"end": 6642,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6610,
											"end": 6642,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6610,
											"end": 6642,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6610,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 6623,
											"end": 6630,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6610,
											"end": 6622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6610,
											"end": 6631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6610,
											"end": 6631,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 6610,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6610,
											"end": 6642,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6610,
											"end": 6642,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6610,
											"end": 6642,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6642,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 6554,
											"end": 6642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6516,
											"end": 6643,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 6516,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6497,
											"end": 6643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6497,
											"end": 6643,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6378,
											"end": 6650,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6378,
											"end": 6650,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6378,
											"end": 6650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6378,
											"end": 6650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6378,
											"end": 6650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6378,
											"end": 6650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12690,
											"end": 13606,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 12690,
											"end": 13606,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12743,
											"end": 12750,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12762,
											"end": 12776,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12779,
											"end": 12780,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12762,
											"end": 12780,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12762,
											"end": 12780,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12827,
											"end": 12835,
											"name": "PUSH",
											"source": 15,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12818,
											"end": 12823,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12818,
											"end": 12835,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12814,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 12814,
											"end": 12917,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12864,
											"end": 12872,
											"name": "PUSH",
											"source": 15,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 12855,
											"end": 12872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12855,
											"end": 12872,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12900,
											"end": 12902,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 12890,
											"end": 12902,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12890,
											"end": 12902,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12890,
											"end": 12902,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12890,
											"end": 12902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12814,
											"end": 12917,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 12814,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12943,
											"end": 12951,
											"name": "PUSH",
											"source": 15,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12934,
											"end": 12939,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12934,
											"end": 12951,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12930,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 12930,
											"end": 13033,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12980,
											"end": 12988,
											"name": "PUSH",
											"source": 15,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 12971,
											"end": 12988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "tag",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13016,
											"end": 13018,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13006,
											"end": 13018,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13006,
											"end": 13018,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13006,
											"end": 13018,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13006,
											"end": 13018,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12930,
											"end": 13033,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 12930,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13059,
											"end": 13067,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 13050,
											"end": 13055,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13050,
											"end": 13067,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13046,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 13046,
											"end": 13149,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13096,
											"end": 13104,
											"name": "PUSH",
											"source": 15,
											"value": "2386F26FC10000"
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 13087,
											"end": 13104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13087,
											"end": 13104,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13132,
											"end": 13134,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 13122,
											"end": 13134,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13122,
											"end": 13134,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13122,
											"end": 13134,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13122,
											"end": 13134,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13046,
											"end": 13149,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 13046,
											"end": 13149,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13175,
											"end": 13182,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 13166,
											"end": 13171,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13166,
											"end": 13182,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13162,
											"end": 13262,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 13162,
											"end": 13262,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13211,
											"end": 13218,
											"name": "PUSH",
											"source": 15,
											"value": "5F5E100"
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 13202,
											"end": 13218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13202,
											"end": 13218,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13246,
											"end": 13247,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 13236,
											"end": 13247,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13236,
											"end": 13247,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13236,
											"end": 13247,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13236,
											"end": 13247,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13162,
											"end": 13262,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 13162,
											"end": 13262,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13288,
											"end": 13295,
											"name": "PUSH",
											"source": 15,
											"value": "2710"
										},
										{
											"begin": 13279,
											"end": 13284,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13279,
											"end": 13295,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13275,
											"end": 13375,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 13275,
											"end": 13375,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13324,
											"end": 13331,
											"name": "PUSH",
											"source": 15,
											"value": "2710"
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 13315,
											"end": 13331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13315,
											"end": 13331,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13359,
											"end": 13360,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 13349,
											"end": 13360,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13349,
											"end": 13360,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13349,
											"end": 13360,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13349,
											"end": 13360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13275,
											"end": 13375,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 13275,
											"end": 13375,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13401,
											"end": 13408,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13392,
											"end": 13397,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13392,
											"end": 13408,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13388,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 13388,
											"end": 13488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13437,
											"end": 13444,
											"name": "PUSH",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 13428,
											"end": 13444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13428,
											"end": 13444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13472,
											"end": 13473,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 13462,
											"end": 13473,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13462,
											"end": 13473,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13462,
											"end": 13473,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13462,
											"end": 13473,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13388,
											"end": 13488,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 13388,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13514,
											"end": 13521,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 13505,
											"end": 13510,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13505,
											"end": 13521,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 13501,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 13501,
											"end": 13567,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13551,
											"end": 13552,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 13541,
											"end": 13552,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13541,
											"end": 13552,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13541,
											"end": 13552,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13541,
											"end": 13552,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13501,
											"end": 13567,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 13501,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13593,
											"end": 13599,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13586,
											"end": 13599,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13586,
											"end": 13599,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13586,
											"end": 13599,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 13606,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 13606,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 13606,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12690,
											"end": 13606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9957,
											"end": 10284,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 9957,
											"end": 10284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10038,
											"end": 10039,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10024,
											"end": 10040,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10024,
											"end": 10040,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10024,
											"end": 10026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10024,
											"end": 10040,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10024,
											"end": 10040,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10024,
											"end": 10040,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10020,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 10020,
											"end": 10107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10093,
											"end": 10094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 10063,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10020,
											"end": 10107,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 10020,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10140,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 10148,
											"end": 10150,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10152,
											"end": 10159,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10169,
											"end": 10170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10140,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 10140,
											"end": 10172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10140,
											"end": 10172,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 10140,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10172,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10211,
											"end": 10212,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10213,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10186,
											"end": 10213,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10186,
											"end": 10199,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10186,
											"end": 10213,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10186,
											"end": 10213,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10186,
											"end": 10213,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 10182,
											"end": 10278,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10264,
											"end": 10265,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "PUSH",
											"source": 5,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 10236,
											"end": 10267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10236,
											"end": 10267,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10182,
											"end": 10278,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 10182,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10010,
											"end": 10284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9957,
											"end": 10284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9957,
											"end": 10284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9957,
											"end": 10284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 18,
											"value": "344"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 18,
											"value": "347"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "347"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 18,
											"value": "349"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "349"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 18,
											"value": "351"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "351"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 18,
											"value": "354"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 18,
											"value": "356"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "354"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "356"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 18,
											"value": "357"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 18,
											"value": "358"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "357"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 18,
											"value": "359"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "358"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "359"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 18,
											"value": "360"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 18,
											"value": "361"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "360"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "361"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "361"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "462"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 18,
											"value": "462"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "464"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "363"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 18,
											"value": "464"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "468"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 18,
											"value": "468"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "469"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "359"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 18,
											"value": "469"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "tag",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4949,
											"end": 4955,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5000,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4986,
											"end": 4995,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4977,
											"end": 4984,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4973,
											"end": 4996,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4969,
											"end": 5001,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "472"
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 5004,
											"end": 5083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "tag",
											"source": 18,
											"value": "472"
										},
										{
											"begin": 5004,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "tag",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 4966,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5124,
											"end": 5125,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "473"
										},
										{
											"begin": 5194,
											"end": 5201,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5185,
											"end": 5191,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5174,
											"end": 5183,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5170,
											"end": 5192,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 5149,
											"end": 5202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "tag",
											"source": 18,
											"value": "473"
										},
										{
											"begin": 5149,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5139,
											"end": 5202,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5139,
											"end": 5202,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5095,
											"end": 5212,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5219,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4890,
											"end": 5219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "tag",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5302,
											"end": 5308,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5316,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5355,
											"end": 5364,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5346,
											"end": 5353,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5342,
											"end": 5365,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5338,
											"end": 5370,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5373,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "476"
										},
										{
											"begin": 5373,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 5373,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5373,
											"end": 5452,
											"name": "tag",
											"source": 18,
											"value": "476"
										},
										{
											"begin": 5373,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "tag",
											"source": 18,
											"value": "475"
										},
										{
											"begin": 5335,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5493,
											"end": 5494,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 5563,
											"end": 5570,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5554,
											"end": 5560,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5543,
											"end": 5552,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5539,
											"end": 5561,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 5518,
											"end": 5571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "tag",
											"source": 18,
											"value": "477"
										},
										{
											"begin": 5518,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5508,
											"end": 5571,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5508,
											"end": 5571,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5464,
											"end": 5581,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5620,
											"end": 5622,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 5691,
											"end": 5698,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5682,
											"end": 5688,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5671,
											"end": 5680,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5667,
											"end": 5689,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 5646,
											"end": 5699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "tag",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5636,
											"end": 5699,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5591,
											"end": 5709,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5748,
											"end": 5750,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "359"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5719,
											"end": 5837,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5225,
											"end": 5844,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5225,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "357"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 18,
											"value": "481"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "483"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 18,
											"value": "483"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "366"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 18,
											"value": "488"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "491"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 18,
											"value": "491"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 18,
											"value": "490"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "493"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "367"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 18,
											"value": "493"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "498"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 18,
											"value": "498"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "344"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "370"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "505"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "506"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 18,
											"value": "506"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 18,
											"value": "505"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 18,
											"value": "507"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "372"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "512"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 18,
											"value": "512"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "514"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 18,
											"value": "514"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "516"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 18,
											"value": "516"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "374"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 18,
											"value": "523"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "359"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 18,
											"value": "526"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "375"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 18,
											"value": "527"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "tag",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10053,
											"end": 10057,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10161,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10135,
											"end": 10141,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10132,
											"end": 10162,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 10165,
											"end": 10183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "tag",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "tag",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 10129,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 10225,
											"end": 10231,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 10203,
											"end": 10232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "tag",
											"source": 18,
											"value": "531"
										},
										{
											"begin": 10203,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10195,
											"end": 10232,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10287,
											"end": 10291,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10281,
											"end": 10285,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10277,
											"end": 10292,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10269,
											"end": 10292,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9991,
											"end": 10299,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9991,
											"end": 10299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "tag",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 10466,
											"end": 10472,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 10424,
											"end": 10473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "tag",
											"source": 18,
											"value": "534"
										},
										{
											"begin": 10424,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 10408,
											"end": 10474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "tag",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 10408,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10399,
											"end": 10474,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10497,
											"end": 10503,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10490,
											"end": 10495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10483,
											"end": 10504,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10528,
											"end": 10533,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10524,
											"end": 10540,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10573,
											"end": 10576,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10564,
											"end": 10570,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10559,
											"end": 10562,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10555,
											"end": 10571,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10552,
											"end": 10577,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 10580,
											"end": 10659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "tag",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 10580,
											"end": 10659,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "tag",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 10549,
											"end": 10661,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 10717,
											"end": 10723,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10712,
											"end": 10715,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10707,
											"end": 10710,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "373"
										},
										{
											"begin": 10670,
											"end": 10724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "tag",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 10670,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10389,
											"end": 10730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "tag",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10806,
											"end": 10811,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10848,
											"end": 10852,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10836,
											"end": 10853,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10832,
											"end": 10859,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 10863,
											"end": 10942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "tag",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 10863,
											"end": 10942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "tag",
											"source": 18,
											"value": "539"
										},
										{
											"begin": 10822,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10980,
											"end": 10986,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10967,
											"end": 10987,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 11080,
											"end": 11083,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11065,
											"end": 11069,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11057,
											"end": 11063,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 11053,
											"end": 11070,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "377"
										},
										{
											"begin": 11005,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 11005,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10996,
											"end": 11084,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10812,
											"end": 11090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 11090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 11090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "tag",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11165,
											"end": 11171,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11214,
											"end": 11216,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11202,
											"end": 11211,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11193,
											"end": 11200,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11189,
											"end": 11212,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 11185,
											"end": 11217,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11220,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 11220,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 11220,
											"end": 11299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11220,
											"end": 11299,
											"name": "tag",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 11220,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "tag",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 11182,
											"end": 11301,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11368,
											"end": 11369,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11357,
											"end": 11366,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11353,
											"end": 11370,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11340,
											"end": 11371,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 11398,
											"end": 11416,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11390,
											"end": 11396,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11387,
											"end": 11417,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11420,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 11420,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 11420,
											"end": 11499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11420,
											"end": 11499,
											"name": "tag",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 11420,
											"end": 11499,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "tag",
											"source": 18,
											"value": "545"
										},
										{
											"begin": 11384,
											"end": 11501,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11525,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 11580,
											"end": 11587,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11571,
											"end": 11577,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11560,
											"end": 11569,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11556,
											"end": 11578,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11525,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "378"
										},
										{
											"begin": 11525,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11525,
											"end": 11588,
											"name": "tag",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 11525,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11515,
											"end": 11588,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11515,
											"end": 11588,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11311,
											"end": 11598,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11605,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11096,
											"end": 11605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "tag",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11679,
											"end": 11685,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11687,
											"end": 11693,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 11736,
											"end": 11738,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 11724,
											"end": 11733,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11715,
											"end": 11722,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11711,
											"end": 11734,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 11707,
											"end": 11739,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 11742,
											"end": 11821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "tag",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 11742,
											"end": 11821,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "tag",
											"source": 18,
											"value": "549"
										},
										{
											"begin": 11704,
											"end": 11823,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11862,
											"end": 11863,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 11932,
											"end": 11939,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11923,
											"end": 11929,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11912,
											"end": 11921,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 11908,
											"end": 11930,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 11887,
											"end": 11940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "tag",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 11887,
											"end": 11940,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11877,
											"end": 11940,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11877,
											"end": 11940,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11833,
											"end": 11950,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11989,
											"end": 11991,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 12060,
											"end": 12067,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12051,
											"end": 12057,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12040,
											"end": 12049,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 12036,
											"end": 12058,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "364"
										},
										{
											"begin": 12015,
											"end": 12068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12005,
											"end": 12068,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12005,
											"end": 12068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11960,
											"end": 12078,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11611,
											"end": 12085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12091,
											"end": 12151,
											"name": "tag",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 12091,
											"end": 12151,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12119,
											"end": 12122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12140,
											"end": 12145,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12133,
											"end": 12145,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12133,
											"end": 12145,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12091,
											"end": 12151,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12091,
											"end": 12151,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12091,
											"end": 12151,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12091,
											"end": 12151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12157,
											"end": 12299,
											"name": "tag",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 12157,
											"end": 12299,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12207,
											"end": 12216,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12240,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 12258,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 12267,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 12285,
											"end": 12290,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12267,
											"end": 12291,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "360"
										},
										{
											"begin": 12267,
											"end": 12291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12267,
											"end": 12291,
											"name": "tag",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 12267,
											"end": 12291,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12258,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 12258,
											"end": 12292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12258,
											"end": 12292,
											"name": "tag",
											"source": 18,
											"value": "556"
										},
										{
											"begin": 12258,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12240,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "360"
										},
										{
											"begin": 12240,
											"end": 12293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12240,
											"end": 12293,
											"name": "tag",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 12240,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12227,
											"end": 12293,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12227,
											"end": 12293,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12157,
											"end": 12299,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12157,
											"end": 12299,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12157,
											"end": 12299,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12157,
											"end": 12299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12305,
											"end": 12431,
											"name": "tag",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 12305,
											"end": 12431,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12355,
											"end": 12364,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12388,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 12419,
											"end": 12424,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12388,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "380"
										},
										{
											"begin": 12388,
											"end": 12425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12388,
											"end": 12425,
											"name": "tag",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 12388,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12375,
											"end": 12425,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12375,
											"end": 12425,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12305,
											"end": 12431,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12305,
											"end": 12431,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12305,
											"end": 12431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12305,
											"end": 12431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12437,
											"end": 12600,
											"name": "tag",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 12437,
											"end": 12600,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12524,
											"end": 12533,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12557,
											"end": 12594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 12588,
											"end": 12593,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12557,
											"end": 12594,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "381"
										},
										{
											"begin": 12557,
											"end": 12594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12557,
											"end": 12594,
											"name": "tag",
											"source": 18,
											"value": "561"
										},
										{
											"begin": 12557,
											"end": 12594,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12544,
											"end": 12594,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12544,
											"end": 12594,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12437,
											"end": 12600,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12437,
											"end": 12600,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12437,
											"end": 12600,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12437,
											"end": 12600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12606,
											"end": 12811,
											"name": "tag",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 12606,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12730,
											"end": 12804,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 12798,
											"end": 12803,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12730,
											"end": 12804,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "382"
										},
										{
											"begin": 12730,
											"end": 12804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12730,
											"end": 12804,
											"name": "tag",
											"source": 18,
											"value": "563"
										},
										{
											"begin": 12730,
											"end": 12804,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12725,
											"end": 12728,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12718,
											"end": 12805,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12606,
											"end": 12811,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12606,
											"end": 12811,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12606,
											"end": 12811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12817,
											"end": 13113,
											"name": "tag",
											"source": 18,
											"value": "102"
										},
										{
											"begin": 12817,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12947,
											"end": 12951,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12985,
											"end": 12987,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12974,
											"end": 12983,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12970,
											"end": 12988,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12962,
											"end": 12988,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12962,
											"end": 12988,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12998,
											"end": 13106,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 13103,
											"end": 13104,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13092,
											"end": 13101,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13088,
											"end": 13105,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13079,
											"end": 13085,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12998,
											"end": 13106,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "383"
										},
										{
											"begin": 12998,
											"end": 13106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12998,
											"end": 13106,
											"name": "tag",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 12998,
											"end": 13106,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12817,
											"end": 13113,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 12817,
											"end": 13113,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12817,
											"end": 13113,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12817,
											"end": 13113,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12817,
											"end": 13113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13119,
											"end": 13299,
											"name": "tag",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 13119,
											"end": 13299,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13167,
											"end": 13244,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13164,
											"end": 13165,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13157,
											"end": 13245,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13264,
											"end": 13268,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 13261,
											"end": 13262,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 13254,
											"end": 13269,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13288,
											"end": 13292,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13285,
											"end": 13286,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13278,
											"end": 13293,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 13305,
											"end": 13625,
											"name": "tag",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 13305,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13349,
											"end": 13355,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13386,
											"end": 13387,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 13380,
											"end": 13384,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13376,
											"end": 13388,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 13366,
											"end": 13388,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13366,
											"end": 13388,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13433,
											"end": 13434,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 13427,
											"end": 13431,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13423,
											"end": 13435,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 13454,
											"end": 13472,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13444,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 13444,
											"end": 13525,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13510,
											"end": 13514,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 13502,
											"end": 13508,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13498,
											"end": 13515,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 13488,
											"end": 13515,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13488,
											"end": 13515,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13444,
											"end": 13525,
											"name": "tag",
											"source": 18,
											"value": "568"
										},
										{
											"begin": 13444,
											"end": 13525,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13572,
											"end": 13574,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13564,
											"end": 13570,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13561,
											"end": 13575,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 13541,
											"end": 13559,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13538,
											"end": 13576,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 13535,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 13535,
											"end": 13619,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13591,
											"end": 13609,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 13591,
											"end": 13609,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 13591,
											"end": 13609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13591,
											"end": 13609,
											"name": "tag",
											"source": 18,
											"value": "570"
										},
										{
											"begin": 13591,
											"end": 13609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13535,
											"end": 13619,
											"name": "tag",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 13535,
											"end": 13619,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13356,
											"end": 13625,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13305,
											"end": 13625,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13305,
											"end": 13625,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13305,
											"end": 13625,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13305,
											"end": 13625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13631,
											"end": 14073,
											"name": "tag",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 13631,
											"end": 14073,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13780,
											"end": 13784,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13818,
											"end": 13820,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 13807,
											"end": 13816,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13803,
											"end": 13821,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13795,
											"end": 13821,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13795,
											"end": 13821,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13831,
											"end": 13902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 13899,
											"end": 13900,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13888,
											"end": 13897,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13884,
											"end": 13901,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13875,
											"end": 13881,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 13831,
											"end": 13902,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 13831,
											"end": 13902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13831,
											"end": 13902,
											"name": "tag",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 13831,
											"end": 13902,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13912,
											"end": 13984,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 13980,
											"end": 13982,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13969,
											"end": 13978,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13965,
											"end": 13983,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13956,
											"end": 13962,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13912,
											"end": 13984,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 13912,
											"end": 13984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13912,
											"end": 13984,
											"name": "tag",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 13912,
											"end": 13984,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13994,
											"end": 14066,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 14062,
											"end": 14064,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 14051,
											"end": 14060,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14047,
											"end": 14065,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14038,
											"end": 14044,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13994,
											"end": 14066,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 13994,
											"end": 14066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13994,
											"end": 14066,
											"name": "tag",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 13994,
											"end": 14066,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13631,
											"end": 14073,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 13631,
											"end": 14073,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 13631,
											"end": 14073,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13631,
											"end": 14073,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13631,
											"end": 14073,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13631,
											"end": 14073,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13631,
											"end": 14073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14079,
											"end": 14227,
											"name": "tag",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 14079,
											"end": 14227,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14181,
											"end": 14192,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14218,
											"end": 14221,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14203,
											"end": 14221,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14203,
											"end": 14221,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14079,
											"end": 14227,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14079,
											"end": 14227,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14079,
											"end": 14227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14079,
											"end": 14227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14079,
											"end": 14227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14233,
											"end": 14623,
											"name": "tag",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 14233,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14339,
											"end": 14342,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14367,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 14400,
											"end": 14405,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14367,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 14367,
											"end": 14406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14367,
											"end": 14406,
											"name": "tag",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 14367,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14422,
											"end": 14511,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 14504,
											"end": 14510,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14499,
											"end": 14502,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14422,
											"end": 14511,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "385"
										},
										{
											"begin": 14422,
											"end": 14511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14422,
											"end": 14511,
											"name": "tag",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 14422,
											"end": 14511,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14415,
											"end": 14511,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 14415,
											"end": 14511,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14520,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 14578,
											"end": 14584,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14573,
											"end": 14576,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14566,
											"end": 14570,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14559,
											"end": 14564,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 14555,
											"end": 14571,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14520,
											"end": 14585,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "354"
										},
										{
											"begin": 14520,
											"end": 14585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14520,
											"end": 14585,
											"name": "tag",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 14520,
											"end": 14585,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14610,
											"end": 14616,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 14605,
											"end": 14608,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14601,
											"end": 14617,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14594,
											"end": 14617,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14594,
											"end": 14617,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14343,
											"end": 14623,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14233,
											"end": 14623,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14233,
											"end": 14623,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14233,
											"end": 14623,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14233,
											"end": 14623,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14233,
											"end": 14623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14629,
											"end": 15064,
											"name": "tag",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 14629,
											"end": 15064,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14809,
											"end": 14812,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14831,
											"end": 14926,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 14922,
											"end": 14925,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14913,
											"end": 14919,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14831,
											"end": 14926,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 14831,
											"end": 14926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14831,
											"end": 14926,
											"name": "tag",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 14831,
											"end": 14926,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14824,
											"end": 14926,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14824,
											"end": 14926,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14943,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 15034,
											"end": 15037,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15025,
											"end": 15031,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14943,
											"end": 15038,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "386"
										},
										{
											"begin": 14943,
											"end": 15038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14943,
											"end": 15038,
											"name": "tag",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 14943,
											"end": 15038,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14936,
											"end": 15038,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14936,
											"end": 15038,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15055,
											"end": 15058,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15048,
											"end": 15058,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15048,
											"end": 15058,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14629,
											"end": 15064,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 14629,
											"end": 15064,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 14629,
											"end": 15064,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14629,
											"end": 15064,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14629,
											"end": 15064,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14629,
											"end": 15064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15070,
											"end": 15504,
											"name": "tag",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 15070,
											"end": 15504,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15159,
											"end": 15164,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15184,
											"end": 15250,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 15200,
											"end": 15249,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 15242,
											"end": 15248,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15200,
											"end": 15249,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "376"
										},
										{
											"begin": 15200,
											"end": 15249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15200,
											"end": 15249,
											"name": "tag",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 15200,
											"end": 15249,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15184,
											"end": 15250,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "371"
										},
										{
											"begin": 15184,
											"end": 15250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15184,
											"end": 15250,
											"name": "tag",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 15184,
											"end": 15250,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15175,
											"end": 15250,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15175,
											"end": 15250,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15273,
											"end": 15279,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15266,
											"end": 15271,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15259,
											"end": 15280,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15311,
											"end": 15315,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15304,
											"end": 15309,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15300,
											"end": 15316,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15349,
											"end": 15352,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15340,
											"end": 15346,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15335,
											"end": 15338,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15331,
											"end": 15347,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15328,
											"end": 15353,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 15325,
											"end": 15437,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 15325,
											"end": 15437,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 15325,
											"end": 15437,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15356,
											"end": 15435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 15356,
											"end": 15435,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "369"
										},
										{
											"begin": 15356,
											"end": 15435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15356,
											"end": 15435,
											"name": "tag",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 15356,
											"end": 15435,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15325,
											"end": 15437,
											"name": "tag",
											"source": 18,
											"value": "586"
										},
										{
											"begin": 15325,
											"end": 15437,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15446,
											"end": 15498,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 15491,
											"end": 15497,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15486,
											"end": 15489,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15481,
											"end": 15484,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 15446,
											"end": 15498,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "354"
										},
										{
											"begin": 15446,
											"end": 15498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15446,
											"end": 15498,
											"name": "tag",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 15446,
											"end": 15498,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15165,
											"end": 15504,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15070,
											"end": 15504,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 15070,
											"end": 15504,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15070,
											"end": 15504,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15070,
											"end": 15504,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15070,
											"end": 15504,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15070,
											"end": 15504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15524,
											"end": 15879,
											"name": "tag",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 15524,
											"end": 15879,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15591,
											"end": 15596,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15640,
											"end": 15643,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15633,
											"end": 15637,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 15625,
											"end": 15631,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15621,
											"end": 15638,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15617,
											"end": 15644,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 15607,
											"end": 15729,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 15607,
											"end": 15729,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 15648,
											"end": 15727,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 15648,
											"end": 15727,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "368"
										},
										{
											"begin": 15648,
											"end": 15727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15648,
											"end": 15727,
											"name": "tag",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 15648,
											"end": 15727,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15607,
											"end": 15729,
											"name": "tag",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 15607,
											"end": 15729,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15758,
											"end": 15764,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15752,
											"end": 15765,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 15783,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 15869,
											"end": 15872,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15861,
											"end": 15867,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15854,
											"end": 15858,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15846,
											"end": 15852,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 15842,
											"end": 15859,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15783,
											"end": 15873,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "387"
										},
										{
											"begin": 15783,
											"end": 15873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15783,
											"end": 15873,
											"name": "tag",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 15783,
											"end": 15873,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15774,
											"end": 15873,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15774,
											"end": 15873,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15597,
											"end": 15879,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15524,
											"end": 15879,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15524,
											"end": 15879,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15524,
											"end": 15879,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15524,
											"end": 15879,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15524,
											"end": 15879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15885,
											"end": 16409,
											"name": "tag",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 15885,
											"end": 16409,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15965,
											"end": 15971,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16014,
											"end": 16016,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16002,
											"end": 16011,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15993,
											"end": 16000,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15989,
											"end": 16012,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 15985,
											"end": 16017,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 15982,
											"end": 16101,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 15982,
											"end": 16101,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 15982,
											"end": 16101,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 16020,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 16020,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 16020,
											"end": 16099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16020,
											"end": 16099,
											"name": "tag",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 16020,
											"end": 16099,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15982,
											"end": 16101,
											"name": "tag",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 15982,
											"end": 16101,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16161,
											"end": 16162,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16150,
											"end": 16159,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16146,
											"end": 16163,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16140,
											"end": 16164,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 16191,
											"end": 16209,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16183,
											"end": 16189,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 16180,
											"end": 16210,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 16177,
											"end": 16294,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 16177,
											"end": 16294,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 16177,
											"end": 16294,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 16213,
											"end": 16292,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 16213,
											"end": 16292,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "346"
										},
										{
											"begin": 16213,
											"end": 16292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16213,
											"end": 16292,
											"name": "tag",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 16213,
											"end": 16292,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16177,
											"end": 16294,
											"name": "tag",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 16177,
											"end": 16294,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16318,
											"end": 16392,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 16384,
											"end": 16391,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 16375,
											"end": 16381,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16364,
											"end": 16373,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 16360,
											"end": 16382,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16318,
											"end": 16392,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "388"
										},
										{
											"begin": 16318,
											"end": 16392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16318,
											"end": 16392,
											"name": "tag",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 16318,
											"end": 16392,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16308,
											"end": 16392,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16308,
											"end": 16392,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16111,
											"end": 16402,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15885,
											"end": 16409,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15885,
											"end": 16409,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15885,
											"end": 16409,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15885,
											"end": 16409,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15885,
											"end": 16409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16415,
											"end": 16657,
											"name": "tag",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 16415,
											"end": 16657,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16555,
											"end": 16589,
											"name": "PUSH",
											"source": 18,
											"value": "4F6E6C7920617574686F72697A656420737570706C696572732063616E206D69"
										},
										{
											"begin": 16551,
											"end": 16552,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16543,
											"end": 16549,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16539,
											"end": 16553,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16532,
											"end": 16590,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16624,
											"end": 16649,
											"name": "PUSH",
											"source": 18,
											"value": "6E74207061636B616765642070726F64756374204E4654000000000000000000"
										},
										{
											"begin": 16619,
											"end": 16621,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16611,
											"end": 16617,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16607,
											"end": 16622,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16600,
											"end": 16650,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16415,
											"end": 16657,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16415,
											"end": 16657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16663,
											"end": 17029,
											"name": "tag",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 16663,
											"end": 17029,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16805,
											"end": 16808,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16826,
											"end": 16893,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 16890,
											"end": 16892,
											"name": "PUSH",
											"source": 18,
											"value": "37"
										},
										{
											"begin": 16885,
											"end": 16888,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16826,
											"end": 16893,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "353"
										},
										{
											"begin": 16826,
											"end": 16893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16826,
											"end": 16893,
											"name": "tag",
											"source": 18,
											"value": "601"
										},
										{
											"begin": 16826,
											"end": 16893,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16819,
											"end": 16893,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16819,
											"end": 16893,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16902,
											"end": 16995,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 16991,
											"end": 16994,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16902,
											"end": 16995,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "389"
										},
										{
											"begin": 16902,
											"end": 16995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16902,
											"end": 16995,
											"name": "tag",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 16902,
											"end": 16995,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17020,
											"end": 17022,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 17015,
											"end": 17018,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17011,
											"end": 17023,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17004,
											"end": 17023,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17004,
											"end": 17023,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16663,
											"end": 17029,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16663,
											"end": 17029,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16663,
											"end": 17029,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16663,
											"end": 17029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17035,
											"end": 17454,
											"name": "tag",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 17035,
											"end": 17454,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17201,
											"end": 17205,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17239,
											"end": 17241,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17228,
											"end": 17237,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17224,
											"end": 17242,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17216,
											"end": 17242,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17216,
											"end": 17242,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17288,
											"end": 17297,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17282,
											"end": 17286,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17278,
											"end": 17298,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 17274,
											"end": 17275,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17263,
											"end": 17272,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17259,
											"end": 17276,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17252,
											"end": 17299,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17316,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 17442,
											"end": 17446,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17316,
											"end": 17447,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "390"
										},
										{
											"begin": 17316,
											"end": 17447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17316,
											"end": 17447,
											"name": "tag",
											"source": 18,
											"value": "604"
										},
										{
											"begin": 17316,
											"end": 17447,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17308,
											"end": 17447,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17308,
											"end": 17447,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17035,
											"end": 17454,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17035,
											"end": 17454,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17035,
											"end": 17454,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17035,
											"end": 17454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17460,
											"end": 17640,
											"name": "tag",
											"source": 18,
											"value": "391"
										},
										{
											"begin": 17460,
											"end": 17640,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17508,
											"end": 17585,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17505,
											"end": 17506,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17498,
											"end": 17586,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17605,
											"end": 17609,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 17602,
											"end": 17603,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 17595,
											"end": 17610,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17629,
											"end": 17633,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 17626,
											"end": 17627,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17619,
											"end": 17634,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 17646,
											"end": 17879,
											"name": "tag",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 17646,
											"end": 17879,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17685,
											"end": 17688,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17708,
											"end": 17732,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 17726,
											"end": 17731,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17708,
											"end": 17732,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "357"
										},
										{
											"begin": 17708,
											"end": 17732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17708,
											"end": 17732,
											"name": "tag",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 17708,
											"end": 17732,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17699,
											"end": 17732,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17699,
											"end": 17732,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17754,
											"end": 17820,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17747,
											"end": 17752,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17744,
											"end": 17821,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 17741,
											"end": 17844,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 17741,
											"end": 17844,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 17824,
											"end": 17842,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 17824,
											"end": 17842,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "391"
										},
										{
											"begin": 17824,
											"end": 17842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17824,
											"end": 17842,
											"name": "tag",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 17824,
											"end": 17842,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17741,
											"end": 17844,
											"name": "tag",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 17741,
											"end": 17844,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17871,
											"end": 17872,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 17864,
											"end": 17869,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17860,
											"end": 17873,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17853,
											"end": 17873,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17853,
											"end": 17873,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17646,
											"end": 17879,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17646,
											"end": 17879,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17646,
											"end": 17879,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17646,
											"end": 17879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17885,
											"end": 17983,
											"name": "tag",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 17885,
											"end": 17983,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17936,
											"end": 17942,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17970,
											"end": 17975,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17964,
											"end": 17976,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 17954,
											"end": 17976,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17954,
											"end": 17976,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17885,
											"end": 17983,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17885,
											"end": 17983,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17885,
											"end": 17983,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17885,
											"end": 17983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17989,
											"end": 18157,
											"name": "tag",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 17989,
											"end": 18157,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18072,
											"end": 18083,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18106,
											"end": 18112,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18101,
											"end": 18104,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18094,
											"end": 18113,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18146,
											"end": 18150,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18141,
											"end": 18144,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18137,
											"end": 18151,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18122,
											"end": 18151,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18122,
											"end": 18151,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17989,
											"end": 18157,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17989,
											"end": 18157,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17989,
											"end": 18157,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17989,
											"end": 18157,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17989,
											"end": 18157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18163,
											"end": 18536,
											"name": "tag",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 18163,
											"end": 18536,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18249,
											"end": 18252,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18277,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 18309,
											"end": 18314,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18277,
											"end": 18315,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 18277,
											"end": 18315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18277,
											"end": 18315,
											"name": "tag",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 18277,
											"end": 18315,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18331,
											"end": 18401,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 18394,
											"end": 18400,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18389,
											"end": 18392,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 18331,
											"end": 18401,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "393"
										},
										{
											"begin": 18331,
											"end": 18401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18331,
											"end": 18401,
											"name": "tag",
											"source": 18,
											"value": "614"
										},
										{
											"begin": 18331,
											"end": 18401,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18324,
											"end": 18401,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 18324,
											"end": 18401,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18410,
											"end": 18475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 18468,
											"end": 18474,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18463,
											"end": 18466,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 18456,
											"end": 18460,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18449,
											"end": 18454,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 18445,
											"end": 18461,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18410,
											"end": 18475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "354"
										},
										{
											"begin": 18410,
											"end": 18475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18410,
											"end": 18475,
											"name": "tag",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 18410,
											"end": 18475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18500,
											"end": 18529,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "616"
										},
										{
											"begin": 18522,
											"end": 18528,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18500,
											"end": 18529,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "355"
										},
										{
											"begin": 18500,
											"end": 18529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18500,
											"end": 18529,
											"name": "tag",
											"source": 18,
											"value": "616"
										},
										{
											"begin": 18500,
											"end": 18529,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18495,
											"end": 18498,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 18491,
											"end": 18530,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18484,
											"end": 18530,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18484,
											"end": 18530,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18253,
											"end": 18536,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18163,
											"end": 18536,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 18163,
											"end": 18536,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18163,
											"end": 18536,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18163,
											"end": 18536,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18163,
											"end": 18536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18542,
											"end": 19182,
											"name": "tag",
											"source": 18,
											"value": "242"
										},
										{
											"begin": 18542,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18737,
											"end": 18741,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18775,
											"end": 18778,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 18764,
											"end": 18773,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18760,
											"end": 18779,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18752,
											"end": 18779,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18752,
											"end": 18779,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18789,
											"end": 18860,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 18857,
											"end": 18858,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18846,
											"end": 18855,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18842,
											"end": 18859,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18833,
											"end": 18839,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 18789,
											"end": 18860,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 18789,
											"end": 18860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18789,
											"end": 18860,
											"name": "tag",
											"source": 18,
											"value": "618"
										},
										{
											"begin": 18789,
											"end": 18860,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18870,
											"end": 18942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 18938,
											"end": 18940,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18927,
											"end": 18936,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18923,
											"end": 18941,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18914,
											"end": 18920,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 18870,
											"end": 18942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 18870,
											"end": 18942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18870,
											"end": 18942,
											"name": "tag",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 18870,
											"end": 18942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18952,
											"end": 19024,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "620"
										},
										{
											"begin": 19020,
											"end": 19022,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 19009,
											"end": 19018,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19005,
											"end": 19023,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18996,
											"end": 19002,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 18952,
											"end": 19024,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 18952,
											"end": 19024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18952,
											"end": 19024,
											"name": "tag",
											"source": 18,
											"value": "620"
										},
										{
											"begin": 18952,
											"end": 19024,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19071,
											"end": 19080,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19065,
											"end": 19069,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19061,
											"end": 19081,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 19056,
											"end": 19058,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 19045,
											"end": 19054,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19041,
											"end": 19059,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19034,
											"end": 19082,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19099,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 19170,
											"end": 19174,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19161,
											"end": 19167,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19099,
											"end": 19175,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "394"
										},
										{
											"begin": 19099,
											"end": 19175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19099,
											"end": 19175,
											"name": "tag",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 19099,
											"end": 19175,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19091,
											"end": 19175,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19091,
											"end": 19175,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18542,
											"end": 19182,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 18542,
											"end": 19182,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 18542,
											"end": 19182,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18542,
											"end": 19182,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18542,
											"end": 19182,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18542,
											"end": 19182,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18542,
											"end": 19182,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18542,
											"end": 19182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19188,
											"end": 19329,
											"name": "tag",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 19188,
											"end": 19329,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19244,
											"end": 19249,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19275,
											"end": 19281,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19269,
											"end": 19282,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 19260,
											"end": 19282,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19260,
											"end": 19282,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19291,
											"end": 19323,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 19317,
											"end": 19322,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19291,
											"end": 19323,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "348"
										},
										{
											"begin": 19291,
											"end": 19323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19291,
											"end": 19323,
											"name": "tag",
											"source": 18,
											"value": "623"
										},
										{
											"begin": 19291,
											"end": 19323,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19188,
											"end": 19329,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19188,
											"end": 19329,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19188,
											"end": 19329,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19188,
											"end": 19329,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19188,
											"end": 19329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19335,
											"end": 19684,
											"name": "tag",
											"source": 18,
											"value": "245"
										},
										{
											"begin": 19335,
											"end": 19684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19404,
											"end": 19410,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19453,
											"end": 19455,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19441,
											"end": 19450,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19432,
											"end": 19439,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19428,
											"end": 19451,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 19424,
											"end": 19456,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 19421,
											"end": 19540,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 19421,
											"end": 19540,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "625"
										},
										{
											"begin": 19421,
											"end": 19540,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 19459,
											"end": 19538,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 19459,
											"end": 19538,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 19459,
											"end": 19538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19459,
											"end": 19538,
											"name": "tag",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 19459,
											"end": 19538,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19421,
											"end": 19540,
											"name": "tag",
											"source": 18,
											"value": "625"
										},
										{
											"begin": 19421,
											"end": 19540,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19579,
											"end": 19580,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19604,
											"end": 19667,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 19659,
											"end": 19666,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 19650,
											"end": 19656,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19639,
											"end": 19648,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 19635,
											"end": 19657,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19604,
											"end": 19667,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "395"
										},
										{
											"begin": 19604,
											"end": 19667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19604,
											"end": 19667,
											"name": "tag",
											"source": 18,
											"value": "627"
										},
										{
											"begin": 19604,
											"end": 19667,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19594,
											"end": 19667,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19594,
											"end": 19667,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19550,
											"end": 19677,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19335,
											"end": 19684,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19335,
											"end": 19684,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19335,
											"end": 19684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19335,
											"end": 19684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19335,
											"end": 19684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19690,
											"end": 19831,
											"name": "tag",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 19690,
											"end": 19831,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19739,
											"end": 19743,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19762,
											"end": 19765,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19754,
											"end": 19765,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19754,
											"end": 19765,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19785,
											"end": 19788,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19782,
											"end": 19783,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19775,
											"end": 19789,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19819,
											"end": 19823,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19816,
											"end": 19817,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19806,
											"end": 19824,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 19798,
											"end": 19824,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19798,
											"end": 19824,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19690,
											"end": 19831,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19690,
											"end": 19831,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19690,
											"end": 19831,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19690,
											"end": 19831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19837,
											"end": 19930,
											"name": "tag",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 19837,
											"end": 19930,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19874,
											"end": 19880,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19921,
											"end": 19923,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19916,
											"end": 19918,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 19909,
											"end": 19914,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19905,
											"end": 19919,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19901,
											"end": 19924,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 19891,
											"end": 19924,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19891,
											"end": 19924,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19837,
											"end": 19930,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19837,
											"end": 19930,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19837,
											"end": 19930,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19837,
											"end": 19930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19936,
											"end": 20043,
											"name": "tag",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 19936,
											"end": 20043,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19980,
											"end": 19988,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20030,
											"end": 20035,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20024,
											"end": 20028,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20020,
											"end": 20036,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 19999,
											"end": 20036,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19999,
											"end": 20036,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19936,
											"end": 20043,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 19936,
											"end": 20043,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19936,
											"end": 20043,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19936,
											"end": 20043,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19936,
											"end": 20043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20049,
											"end": 20442,
											"name": "tag",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 20049,
											"end": 20442,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20118,
											"end": 20124,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20168,
											"end": 20169,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 20156,
											"end": 20166,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20152,
											"end": 20170,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 20191,
											"end": 20288,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 20221,
											"end": 20287,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20210,
											"end": 20219,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20191,
											"end": 20288,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 20191,
											"end": 20288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20191,
											"end": 20288,
											"name": "tag",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 20191,
											"end": 20288,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20309,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 20339,
											"end": 20347,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 20328,
											"end": 20337,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20309,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "398"
										},
										{
											"begin": 20309,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20309,
											"end": 20348,
											"name": "tag",
											"source": 18,
											"value": "633"
										},
										{
											"begin": 20309,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20297,
											"end": 20348,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 20297,
											"end": 20348,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20381,
											"end": 20385,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 20377,
											"end": 20386,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 20370,
											"end": 20375,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20366,
											"end": 20387,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 20357,
											"end": 20387,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 20357,
											"end": 20387,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20430,
											"end": 20434,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 20420,
											"end": 20428,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 20416,
											"end": 20435,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 20409,
											"end": 20414,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20406,
											"end": 20436,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 20396,
											"end": 20436,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 20396,
											"end": 20436,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20125,
											"end": 20442,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20125,
											"end": 20442,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20049,
											"end": 20442,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 20049,
											"end": 20442,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 20049,
											"end": 20442,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20049,
											"end": 20442,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20049,
											"end": 20442,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20049,
											"end": 20442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20448,
											"end": 20590,
											"name": "tag",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 20448,
											"end": 20590,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20498,
											"end": 20507,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20531,
											"end": 20584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 20549,
											"end": 20583,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 20558,
											"end": 20582,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 20576,
											"end": 20581,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20558,
											"end": 20582,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "357"
										},
										{
											"begin": 20558,
											"end": 20582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20558,
											"end": 20582,
											"name": "tag",
											"source": 18,
											"value": "637"
										},
										{
											"begin": 20558,
											"end": 20582,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20549,
											"end": 20583,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "379"
										},
										{
											"begin": 20549,
											"end": 20583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20549,
											"end": 20583,
											"name": "tag",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 20549,
											"end": 20583,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20531,
											"end": 20584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "357"
										},
										{
											"begin": 20531,
											"end": 20584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20531,
											"end": 20584,
											"name": "tag",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 20531,
											"end": 20584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20518,
											"end": 20584,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20518,
											"end": 20584,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20448,
											"end": 20590,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20448,
											"end": 20590,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20448,
											"end": 20590,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20448,
											"end": 20590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20596,
											"end": 20671,
											"name": "tag",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 20596,
											"end": 20671,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20639,
											"end": 20642,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20660,
											"end": 20665,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20653,
											"end": 20665,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20653,
											"end": 20665,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20596,
											"end": 20671,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20596,
											"end": 20671,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20596,
											"end": 20671,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20596,
											"end": 20671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20677,
											"end": 20946,
											"name": "tag",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 20677,
											"end": 20946,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20787,
											"end": 20826,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 20818,
											"end": 20825,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 20787,
											"end": 20826,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "400"
										},
										{
											"begin": 20787,
											"end": 20826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20787,
											"end": 20826,
											"name": "tag",
											"source": 18,
											"value": "640"
										},
										{
											"begin": 20787,
											"end": 20826,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 20897,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 20921,
											"end": 20937,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20897,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "401"
										},
										{
											"begin": 20897,
											"end": 20938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20897,
											"end": 20938,
											"name": "tag",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 20897,
											"end": 20938,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20889,
											"end": 20895,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20882,
											"end": 20886,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20876,
											"end": 20887,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "399"
										},
										{
											"begin": 20848,
											"end": 20939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "tag",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 20848,
											"end": 20939,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20842,
											"end": 20846,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20835,
											"end": 20940,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 20753,
											"end": 20946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20677,
											"end": 20946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20677,
											"end": 20946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20677,
											"end": 20946,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20677,
											"end": 20946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20952,
											"end": 21025,
											"name": "tag",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 20952,
											"end": 21025,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20997,
											"end": 21000,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20952,
											"end": 21025,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20952,
											"end": 21025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21031,
											"end": 21220,
											"name": "tag",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 21031,
											"end": 21220,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21108,
											"end": 21140,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 21108,
											"end": 21140,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "403"
										},
										{
											"begin": 21108,
											"end": 21140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21108,
											"end": 21140,
											"name": "tag",
											"source": 18,
											"value": "645"
										},
										{
											"begin": 21108,
											"end": 21140,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21149,
											"end": 21214,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 21207,
											"end": 21213,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21199,
											"end": 21205,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21193,
											"end": 21197,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21149,
											"end": 21214,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "402"
										},
										{
											"begin": 21149,
											"end": 21214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21149,
											"end": 21214,
											"name": "tag",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 21149,
											"end": 21214,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21084,
											"end": 21220,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21031,
											"end": 21220,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21031,
											"end": 21220,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21031,
											"end": 21220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21226,
											"end": 21412,
											"name": "tag",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 21226,
											"end": 21412,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21286,
											"end": 21406,
											"name": "tag",
											"source": 18,
											"value": "648"
										},
										{
											"begin": 21286,
											"end": 21406,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21303,
											"end": 21306,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21296,
											"end": 21301,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21293,
											"end": 21307,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 21286,
											"end": 21406,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 21286,
											"end": 21406,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 21286,
											"end": 21406,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21357,
											"end": 21396,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 21394,
											"end": 21395,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 21387,
											"end": 21392,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21357,
											"end": 21396,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "404"
										},
										{
											"begin": 21357,
											"end": 21396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21357,
											"end": 21396,
											"name": "tag",
											"source": 18,
											"value": "651"
										},
										{
											"begin": 21357,
											"end": 21396,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21330,
											"end": 21331,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 21323,
											"end": 21328,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21319,
											"end": 21332,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21310,
											"end": 21332,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21310,
											"end": 21332,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21286,
											"end": 21406,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "648"
										},
										{
											"begin": 21286,
											"end": 21406,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21286,
											"end": 21406,
											"name": "tag",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 21286,
											"end": 21406,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21226,
											"end": 21412,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21226,
											"end": 21412,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21226,
											"end": 21412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21418,
											"end": 21961,
											"name": "tag",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 21418,
											"end": 21961,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21519,
											"end": 21521,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 21514,
											"end": 21517,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21511,
											"end": 21522,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 21508,
											"end": 21954,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 21508,
											"end": 21954,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 21508,
											"end": 21954,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21553,
											"end": 21591,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "654"
										},
										{
											"begin": 21585,
											"end": 21590,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21553,
											"end": 21591,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 21553,
											"end": 21591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21553,
											"end": 21591,
											"name": "tag",
											"source": 18,
											"value": "654"
										},
										{
											"begin": 21553,
											"end": 21591,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21637,
											"end": 21666,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 21655,
											"end": 21665,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 21637,
											"end": 21666,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 21637,
											"end": 21666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21637,
											"end": 21666,
											"name": "tag",
											"source": 18,
											"value": "655"
										},
										{
											"begin": 21637,
											"end": 21666,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21627,
											"end": 21635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21623,
											"end": 21667,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21820,
											"end": 21822,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 21808,
											"end": 21818,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 21805,
											"end": 21823,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 21802,
											"end": 21851,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 21802,
											"end": 21851,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 21802,
											"end": 21851,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 21841,
											"end": 21849,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 21826,
											"end": 21849,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 21826,
											"end": 21849,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21802,
											"end": 21851,
											"name": "tag",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 21802,
											"end": 21851,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21864,
											"end": 21944,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 21920,
											"end": 21942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "658"
										},
										{
											"begin": 21938,
											"end": 21941,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 21920,
											"end": 21942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "397"
										},
										{
											"begin": 21920,
											"end": 21942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21920,
											"end": 21942,
											"name": "tag",
											"source": 18,
											"value": "658"
										},
										{
											"begin": 21920,
											"end": 21942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21910,
											"end": 21918,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 21906,
											"end": 21943,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 21893,
											"end": 21904,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 21864,
											"end": 21944,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "405"
										},
										{
											"begin": 21864,
											"end": 21944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21864,
											"end": 21944,
											"name": "tag",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 21864,
											"end": 21944,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21523,
											"end": 21954,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21523,
											"end": 21954,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21508,
											"end": 21954,
											"name": "tag",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 21508,
											"end": 21954,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 21418,
											"end": 21961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21418,
											"end": 21961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21418,
											"end": 21961,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21418,
											"end": 21961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 21967,
											"end": 22084,
											"name": "tag",
											"source": 18,
											"value": "407"
										},
										{
											"begin": 21967,
											"end": 22084,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22021,
											"end": 22029,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22071,
											"end": 22076,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22065,
											"end": 22069,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22061,
											"end": 22077,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 22040,
											"end": 22077,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22040,
											"end": 22077,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21967,
											"end": 22084,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 21967,
											"end": 22084,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 21967,
											"end": 22084,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21967,
											"end": 22084,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 21967,
											"end": 22084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22090,
											"end": 22259,
											"name": "tag",
											"source": 18,
											"value": "408"
										},
										{
											"begin": 22090,
											"end": 22259,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22134,
											"end": 22140,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22167,
											"end": 22218,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "661"
										},
										{
											"begin": 22215,
											"end": 22216,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22211,
											"end": 22217,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 22203,
											"end": 22208,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 22200,
											"end": 22201,
											"name": "PUSH",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 22196,
											"end": 22209,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 22167,
											"end": 22218,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "407"
										},
										{
											"begin": 22167,
											"end": 22218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22167,
											"end": 22218,
											"name": "tag",
											"source": 18,
											"value": "661"
										},
										{
											"begin": 22167,
											"end": 22218,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22163,
											"end": 22219,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 22248,
											"end": 22252,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 22242,
											"end": 22246,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22238,
											"end": 22253,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 22228,
											"end": 22253,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22228,
											"end": 22253,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22141,
											"end": 22259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22090,
											"end": 22259,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22090,
											"end": 22259,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22090,
											"end": 22259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22090,
											"end": 22259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22090,
											"end": 22259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22264,
											"end": 22559,
											"name": "tag",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 22264,
											"end": 22559,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22340,
											"end": 22344,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 22486,
											"end": 22515,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "663"
										},
										{
											"begin": 22511,
											"end": 22514,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22505,
											"end": 22509,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 22486,
											"end": 22515,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "408"
										},
										{
											"begin": 22486,
											"end": 22515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22486,
											"end": 22515,
											"name": "tag",
											"source": 18,
											"value": "663"
										},
										{
											"begin": 22486,
											"end": 22515,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22478,
											"end": 22515,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22478,
											"end": 22515,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22548,
											"end": 22551,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22545,
											"end": 22546,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 22541,
											"end": 22552,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 22535,
											"end": 22539,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22532,
											"end": 22553,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 22524,
											"end": 22553,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 22524,
											"end": 22553,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22264,
											"end": 22559,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 22264,
											"end": 22559,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 22264,
											"end": 22559,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22264,
											"end": 22559,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22264,
											"end": 22559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22564,
											"end": 23959,
											"name": "tag",
											"source": 18,
											"value": "272"
										},
										{
											"begin": 22564,
											"end": 23959,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22681,
											"end": 22718,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 22714,
											"end": 22717,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22681,
											"end": 22718,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "352"
										},
										{
											"begin": 22681,
											"end": 22718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22681,
											"end": 22718,
											"name": "tag",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 22681,
											"end": 22718,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22783,
											"end": 22801,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22775,
											"end": 22781,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 22772,
											"end": 22802,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 22769,
											"end": 22825,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 22769,
											"end": 22825,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 22769,
											"end": 22825,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 22805,
											"end": 22823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 22805,
											"end": 22823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "300"
										},
										{
											"begin": 22805,
											"end": 22823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22805,
											"end": 22823,
											"name": "tag",
											"source": 18,
											"value": "667"
										},
										{
											"begin": 22805,
											"end": 22823,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22769,
											"end": 22825,
											"name": "tag",
											"source": 18,
											"value": "666"
										},
										{
											"begin": 22769,
											"end": 22825,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22849,
											"end": 22887,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "668"
										},
										{
											"begin": 22881,
											"end": 22885,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22875,
											"end": 22886,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 22849,
											"end": 22887,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 22849,
											"end": 22887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22849,
											"end": 22887,
											"name": "tag",
											"source": 18,
											"value": "668"
										},
										{
											"begin": 22849,
											"end": 22887,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 22934,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 22994,
											"end": 23000,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22986,
											"end": 22992,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 22980,
											"end": 22984,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 22934,
											"end": 23001,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 22934,
											"end": 23001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 22934,
											"end": 23001,
											"name": "tag",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 22934,
											"end": 23001,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23028,
											"end": 23029,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23052,
											"end": 23056,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 23039,
											"end": 23056,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23039,
											"end": 23056,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23084,
											"end": 23086,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 23076,
											"end": 23082,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23073,
											"end": 23087,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 23101,
											"end": 23102,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 23096,
											"end": 23714,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23096,
											"end": 23714,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 23096,
											"end": 23714,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 23096,
											"end": 23714,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 23758,
											"end": 23759,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23775,
											"end": 23781,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23772,
											"end": 23849,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 23772,
											"end": 23849,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "672"
										},
										{
											"begin": 23772,
											"end": 23849,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 23824,
											"end": 23833,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23819,
											"end": 23822,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 23815,
											"end": 23834,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23809,
											"end": 23835,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 23800,
											"end": 23835,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23800,
											"end": 23835,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23772,
											"end": 23849,
											"name": "tag",
											"source": 18,
											"value": "672"
										},
										{
											"begin": 23772,
											"end": 23849,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23875,
											"end": 23942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "673"
										},
										{
											"begin": 23935,
											"end": 23941,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 23928,
											"end": 23933,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23875,
											"end": 23942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "409"
										},
										{
											"begin": 23875,
											"end": 23942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23875,
											"end": 23942,
											"name": "tag",
											"source": 18,
											"value": "673"
										},
										{
											"begin": 23875,
											"end": 23942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23869,
											"end": 23873,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 23862,
											"end": 23943,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 23731,
											"end": 23953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23066,
											"end": 23953,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 23066,
											"end": 23953,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23096,
											"end": 23714,
											"name": "tag",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 23096,
											"end": 23714,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23148,
											"end": 23152,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 23144,
											"end": 23153,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 23136,
											"end": 23142,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23132,
											"end": 23154,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 23182,
											"end": 23219,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 23214,
											"end": 23218,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 23182,
											"end": 23219,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "396"
										},
										{
											"begin": 23182,
											"end": 23219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23182,
											"end": 23219,
											"name": "tag",
											"source": 18,
											"value": "674"
										},
										{
											"begin": 23182,
											"end": 23219,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23241,
											"end": 23242,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 23255,
											"end": 23463,
											"name": "tag",
											"source": 18,
											"value": "675"
										},
										{
											"begin": 23255,
											"end": 23463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23269,
											"end": 23276,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23266,
											"end": 23267,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23263,
											"end": 23277,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 23255,
											"end": 23463,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 23255,
											"end": 23463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "677"
										},
										{
											"begin": 23255,
											"end": 23463,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 23348,
											"end": 23357,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23343,
											"end": 23346,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 23339,
											"end": 23358,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23333,
											"end": 23359,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 23325,
											"end": 23331,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23318,
											"end": 23360,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 23399,
											"end": 23400,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 23391,
											"end": 23397,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23387,
											"end": 23401,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23377,
											"end": 23401,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 23377,
											"end": 23401,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23446,
											"end": 23448,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 23435,
											"end": 23444,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 23431,
											"end": 23449,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23418,
											"end": 23449,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 23418,
											"end": 23449,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23292,
											"end": 23296,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 23289,
											"end": 23290,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 23285,
											"end": 23297,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23280,
											"end": 23297,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 23280,
											"end": 23297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23255,
											"end": 23463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "675"
										},
										{
											"begin": 23255,
											"end": 23463,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23255,
											"end": 23463,
											"name": "tag",
											"source": 18,
											"value": "677"
										},
										{
											"begin": 23255,
											"end": 23463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23491,
											"end": 23497,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 23482,
											"end": 23489,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23479,
											"end": 23498,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 23476,
											"end": 23655,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 23476,
											"end": 23655,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "678"
										},
										{
											"begin": 23476,
											"end": 23655,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 23549,
											"end": 23558,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 23544,
											"end": 23547,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 23540,
											"end": 23559,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23534,
											"end": 23560,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 23592,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "679"
										},
										{
											"begin": 23634,
											"end": 23638,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 23626,
											"end": 23632,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 23622,
											"end": 23639,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 23611,
											"end": 23620,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 23592,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "408"
										},
										{
											"begin": 23592,
											"end": 23640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23592,
											"end": 23640,
											"name": "tag",
											"source": 18,
											"value": "679"
										},
										{
											"begin": 23592,
											"end": 23640,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23584,
											"end": 23590,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 23577,
											"end": 23641,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 23499,
											"end": 23655,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23476,
											"end": 23655,
											"name": "tag",
											"source": 18,
											"value": "678"
										},
										{
											"begin": 23476,
											"end": 23655,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23701,
											"end": 23702,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 23697,
											"end": 23698,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 23689,
											"end": 23695,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 23685,
											"end": 23699,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 23681,
											"end": 23703,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 23675,
											"end": 23679,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 23668,
											"end": 23704,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 23103,
											"end": 23714,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23103,
											"end": 23714,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23103,
											"end": 23714,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23066,
											"end": 23953,
											"name": "tag",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 23066,
											"end": 23953,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23066,
											"end": 23953,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22656,
											"end": 23959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22656,
											"end": 23959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22656,
											"end": 23959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22564,
											"end": 23959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22564,
											"end": 23959,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 22564,
											"end": 23959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 23965,
											"end": 24297,
											"name": "tag",
											"source": 18,
											"value": "294"
										},
										{
											"begin": 23965,
											"end": 24297,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24086,
											"end": 24090,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24124,
											"end": 24126,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 24113,
											"end": 24122,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 24109,
											"end": 24127,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24101,
											"end": 24127,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 24101,
											"end": 24127,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 24137,
											"end": 24208,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 24205,
											"end": 24206,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24194,
											"end": 24203,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24190,
											"end": 24207,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24181,
											"end": 24187,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 24137,
											"end": 24208,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 24137,
											"end": 24208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24137,
											"end": 24208,
											"name": "tag",
											"source": 18,
											"value": "681"
										},
										{
											"begin": 24137,
											"end": 24208,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24218,
											"end": 24290,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "682"
										},
										{
											"begin": 24286,
											"end": 24288,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 24275,
											"end": 24284,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 24271,
											"end": 24289,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 24262,
											"end": 24268,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 24218,
											"end": 24290,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "365"
										},
										{
											"begin": 24218,
											"end": 24290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24218,
											"end": 24290,
											"name": "tag",
											"source": 18,
											"value": "682"
										},
										{
											"begin": 24218,
											"end": 24290,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 23965,
											"end": 24297,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 23965,
											"end": 24297,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 23965,
											"end": 24297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23965,
											"end": 24297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23965,
											"end": 24297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 23965,
											"end": 24297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 24303,
											"end": 24483,
											"name": "tag",
											"source": 18,
											"value": "306"
										},
										{
											"begin": 24303,
											"end": 24483,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 24351,
											"end": 24428,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24348,
											"end": 24349,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24341,
											"end": 24429,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 24448,
											"end": 24452,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 24445,
											"end": 24446,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 24438,
											"end": 24453,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 24472,
											"end": 24476,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 24469,
											"end": 24470,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 24462,
											"end": 24477,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC721.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"SetTradeManagementSC(address)": "0fffc4cf",
							"TradeManagement()": "f0f9ee46",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(string)": "d85d3d27",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenCount()": "9f181b5e",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trademgmtsc\",\"type\":\"address\"}],\"name\":\"SetTradeManagementSC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TradeManagement\",\"outputs\":[{\"internalType\":\"contract ITradeManagementRawMaterials\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":\"RawMaterials\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x873b130968de02b7aa4bdccbe0870b4bb401e57282527a7298519acd0bcd7261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a781914c68b2216c2db0f2d1b07fb325d270bea72d3913b42db76e8eddbb1cac\",\"dweb:/ipfs/QmSKjBQd6kH1mxCw3maREnGkoTk6osXvmzTmEPqjgaaup4\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x237a1bd522cd03bc6e3177278c4d8a141bbd67bb45fe1761a80183ee9dd40c06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffd0f0fdd26aceb0641f555ce24b370a0d35061b8cd5c5a1d4fe2c255135a04\",\"dweb:/ipfs/QmfJmgHA2Tog7T33xQkkASbXguUWC91Q1Us7nA7xnLDNBX\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe0e3a2099f2e2ce3579dd35548f613928739642058dfec95b1745f93364ce3de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36a3930518e5c4a3c83839aaa136b863af513e6eeee6a3654e8f910f8007f827\",\"dweb:/ipfs/QmcU1b6SYYUMiXJ6jd5HY6sgYjJLdBu4smak1X1FDgkoaA\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xcac5b2622b9876529ca71f56b08a2786e960f0a738a9fcc456b2b8740170f89b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36ec9bacdaa2003a4b68d078f55887e7ec763e83d2027aaa1478578ae71c9b66\",\"dweb:/ipfs/QmbXfAcgockJRxMxKe5mt1pQyeafwCJuUpxce6a2ehB8bt\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0xbca3beefdb4f53e9c4a50a9d489e44c33058c9533cd2b374c64c7d0cafbf15f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f42461a1819498b68bf80974c77ac17b562b398251b8367a905faaaf67d5278\",\"dweb:/ipfs/QmPZYUt6W9KSkjCgQ4iHgKwnAb3t9T699W5BGLwuh14JVp\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1480b57fd68ce6a8b5db236a8278dd79e2876f67d55905e617e5429cc35861b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e56fdda180bb78aaa6806ef095ba4b562d2c35626c98385cbe7e27301beaece\",\"dweb:/ipfs/QmZj9vZFcnotbgWt188vq4RGUbDhTYVx5CLVVQN9628Ygh\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x90b171995e6eeec03cb9d92d9d7a8b5597a9440f5b7863a145f382cb1999d009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9e1b47ced529b6639fdb2b8fd69f2dc7a0f4e2b9732dd73bdf64838394633e9\",\"dweb:/ipfs/QmQ6MyRBK63Gsz6MCibJ8Ar5XZZ7keX6JkMbJ4m24Pcr4L\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol\":{\"keccak256\":\"0xa0ef7f1c66855e0fc57580cd84195b6059517192462c7879e6032caa78520efe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80eb7514ae8b4f145ef47dbb291f985f74375871a5f256c8c8ab41c6a26cc084\",\"dweb:/ipfs/QmUGCGcgXoxgcWqxvLkmxtJkw4TsBmXfxKPu7X1yKhypzR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol:RawMaterials",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 351,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol:RawMaterials",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 355,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol:RawMaterials",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 359,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol:RawMaterials",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 363,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol:RawMaterials",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 369,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol:RawMaterials",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1517,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol:RawMaterials",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 8,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol:RawMaterials",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 3143,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol:RawMaterials",
								"label": "tokenCount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 3146,
								"contract": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol:RawMaterials",
								"label": "TradeManagement",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(ITradeManagementRawMaterials)3137"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ITradeManagementRawMaterials)3137": {
								"encoding": "inplace",
								"label": "contract ITradeManagementRawMaterials",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1673
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1674,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1673,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1673,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1673
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1964
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 1965,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1964,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1964
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1442
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1964,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1964,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title ERC-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1442,
								1964
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1443,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 317,
							"src": "280:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 317,
							"src": "2190:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 317,
							"src": "4430:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1673
						],
						"ERC165": [
							1952
						],
						"ERC721": [
							1325
						],
						"IERC165": [
							1964
						],
						"IERC721": [
							1442
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1643
						],
						"IERC721Receiver": [
							1460
						],
						"Strings": [
							1928
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1443,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 319,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1461,
							"src": "172:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 321,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1460,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1644,
							"src": "227:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1643,
										"src": "235:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1674,
							"src": "293:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 325,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1673,
										"src": "301:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1929,
							"src": "342:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 327,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1928,
										"src": "350:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 331,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1953,
							"src": "391:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1964,
										"src": "399:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 330,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1952,
										"src": "408:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 333,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 317,
							"src": "461:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 332,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "469:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 335,
										"name": "Context",
										"nameLocations": [
											"805:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1673,
										"src": "805:7:5"
									},
									"id": 336,
									"nodeType": "InheritanceSpecifier",
									"src": "805:7:5"
								},
								{
									"baseName": {
										"id": 337,
										"name": "ERC165",
										"nameLocations": [
											"814:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1952,
										"src": "814:6:5"
									},
									"id": 338,
									"nodeType": "InheritanceSpecifier",
									"src": "814:6:5"
								},
								{
									"baseName": {
										"id": 339,
										"name": "IERC721",
										"nameLocations": [
											"822:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "822:7:5"
									},
									"id": 340,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:5"
								},
								{
									"baseName": {
										"id": 341,
										"name": "IERC721Metadata",
										"nameLocations": [
											"831:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1643,
										"src": "831:15:5"
									},
									"id": 342,
									"nodeType": "InheritanceSpecifier",
									"src": "831:15:5"
								},
								{
									"baseName": {
										"id": 343,
										"name": "IERC721Errors",
										"nameLocations": [
											"848:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "848:13:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "848:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "529:247:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1325,
							"linearizedBaseContracts": [
								1325,
								269,
								1643,
								1442,
								1952,
								1964,
								1673
							],
							"name": "ERC721",
							"nameLocation": "795:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 347,
									"libraryName": {
										"id": 345,
										"name": "Strings",
										"nameLocations": [
											"874:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1928,
										"src": "874:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "868:26:5",
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "886:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 349,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "933:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "918:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 348,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "918:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 351,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "980:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "965:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 350,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "965:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 355,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1038:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "994:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 354,
										"keyName": "tokenId",
										"keyNameLocation": "1010:7:5",
										"keyType": {
											"id": 352,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1002:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "994:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 353,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1021:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1094:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1052:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 358,
										"keyName": "owner",
										"keyNameLocation": "1068:5:5",
										"keyType": {
											"id": 356,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1060:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1052:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1077:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 363,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1154:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1110:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 362,
										"keyName": "tokenId",
										"keyNameLocation": "1126:7:5",
										"keyType": {
											"id": 360,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1118:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1110:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 361,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1137:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 369,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1244:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1325,
									"src": "1176:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 368,
										"keyName": "owner",
										"keyNameLocation": "1192:5:5",
										"keyType": {
											"id": 364,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1184:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1176:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 367,
											"keyName": "operator",
											"keyNameLocation": "1217:8:5",
											"keyType": {
												"id": 365,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1209:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1201:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 366,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1229:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "1438:57:5",
										"statements": [
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1448:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 378,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1456:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1448:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1448:13:5"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1471:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 382,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "1481:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1471:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1471:17:5"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1269:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 386,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1408:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1394:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 371,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1394:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1429:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "1415:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1415:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1393:44:5"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:0:5"
									},
									"scope": 1325,
									"src": "1382:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1951,
										1963
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1670:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1699:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 399,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1442,
																			"src": "1719:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1442_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 398,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1714:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1714:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1442",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1728:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1714:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1699:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1755:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 405,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1643,
																			"src": "1775:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1643_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1643_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 404,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1770:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1770:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1643",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1792:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1770:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1755:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1699:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 412,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "1843:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 410,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1819:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1325_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1825:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1951,
															"src": "1819:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1819:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1699:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 396,
												"id": 415,
												"nodeType": "Return",
												"src": "1680:175:5"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "1501:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1571:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 393,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 391,
												"name": "ERC165",
												"nameLocations": [
													"1638:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1952,
												"src": "1638:6:5"
											},
											{
												"id": 392,
												"name": "IERC165",
												"nameLocations": [
													"1646:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1964,
												"src": "1646:7:5"
											}
										],
										"src": "1629:25:5"
									},
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1596:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1589:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1589:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1588:20:5"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1664:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1664:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:6:5"
									},
									"scope": 1325,
									"src": "1562:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1367
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "1993:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2007:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2024:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2016:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2016:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2016:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2007:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "2003:87:5",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "2028:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2076:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2068:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2068:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2068:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 431,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2049:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2049:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "2042:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 440,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2106:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 442,
													"indexExpression": {
														"id": 441,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "2116:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2106:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 443,
												"nodeType": "Return",
												"src": "2099:23:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "1868:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1930:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1948:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1940:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1939:15:5"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "1984:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1983:9:5"
									},
									"scope": 1325,
									"src": "1921:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2258:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 454,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "2289:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2275:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "2268:29:5"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2135:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2195:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2211:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2203:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2202:17:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2249:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:5"
									},
									"scope": 1325,
									"src": "2186:118:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1628
									],
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "2426:29:5",
										"statements": [
											{
												"expression": {
													"id": 464,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 349,
													"src": "2443:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 463,
												"id": 465,
												"nodeType": "Return",
												"src": "2436:12:5"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2310:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2375:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2379:2:5"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "2411:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2411:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2410:15:5"
									},
									"scope": 1325,
									"src": "2366:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1634
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2581:31:5",
										"statements": [
											{
												"expression": {
													"id": 473,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2598:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 472,
												"id": 474,
												"nodeType": "Return",
												"src": "2591:14:5"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "2461:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2528:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2534:2:5"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "2566:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2566:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2565:15:5"
									},
									"scope": 1325,
									"src": "2519:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1642
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "2757:176:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 485,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2781:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 484,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2767:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2767:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2767:22:5"
											},
											{
												"assignments": [
													489
												],
												"declarations": [
													{
														"constant": false,
														"id": 489,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2814:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 511,
														"src": "2800:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 488,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2800:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 490,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2824:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2824:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2800:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "2857:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2851:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2851:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2851:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2866:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2851:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2875:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2851:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2924:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2851:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "2893:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 504,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "2902:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2910:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1741,
																	"src": "2902:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2902:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2879:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 500,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2879:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2886:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2879:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2879:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 483,
												"id": 510,
												"nodeType": "Return",
												"src": "2844:82:5"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "2618:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2687:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2704:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2696:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2695:17:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "2742:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2742:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:15:5"
									},
									"scope": 1325,
									"src": "2678:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "3241:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3258:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 517,
												"id": 519,
												"nodeType": "Return",
												"src": "3251:9:5"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "2939:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3184:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3192:2:5"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "3226:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3226:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:15:5"
									},
									"scope": 1325,
									"src": "3175:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1415
									],
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "3385:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "3404:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3408:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "3417:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 529,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1128,
														"src": "3395:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3395:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "3395:35:5"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "3273:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3333:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3349:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3341:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3341:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3361:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "3353:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3353:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3340:29:5"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3385:0:5"
									},
									"scope": 1325,
									"src": "3324:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1431
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "3574:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3598:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 545,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "3584:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3584:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3584:22:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 550,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "3637:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 549,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3624:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3624:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 544,
												"id": 552,
												"nodeType": "Return",
												"src": "3617:28:5"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "3443:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3507:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3527:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3519:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3519:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3518:17:5"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "3565:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3565:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3564:9:5"
									},
									"scope": 1325,
									"src": "3498:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1423
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "3794:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 563,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "3823:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3823:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3837:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "3847:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 562,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "3804:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3804:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3804:52:5"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "3658:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3728:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3754:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3746:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3746:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3769:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "3764:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3764:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3745:33:5"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3794:0:5"
									},
									"scope": 1325,
									"src": "3719:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "4023:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 580,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "4040:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 582,
														"indexExpression": {
															"id": 581,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "4059:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4040:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 584,
													"indexExpression": {
														"id": 583,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "4066:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4040:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 579,
												"id": 585,
												"nodeType": "Return",
												"src": "4033:42:5"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "3869:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3938:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3963:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3955:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3955:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3978:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3970:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3954:33:5"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "4017:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4017:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4016:6:5"
									},
									"scope": 1325,
									"src": "3929:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1407
									],
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "4224:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "4238:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4252:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4244:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4244:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4244:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4238:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "4234:87:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "4256:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4307:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4299:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4299:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4299:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4277:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4277:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "4270:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4547:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 632,
														"src": "4539:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 612,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4539:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4571:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4575:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 617,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "4584:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4584:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "4563:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4563:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 621,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "4611:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 622,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "4628:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4611:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "4607:109:5",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "4634:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "4676:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 626,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4682:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 627,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "4691:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 624,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4655:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4655:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 629,
															"nodeType": "RevertStatement",
															"src": "4648:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "4088:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4153:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4174:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4166:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4166:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4188:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4180:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4180:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4200:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4192:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4192:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4165:43:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4224:0:5"
									},
									"scope": 1325,
									"src": "4144:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1397
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "4864:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4891:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4897:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4901:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4910:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 643,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															651,
															677
														],
														"referencedDeclaration": 677,
														"src": "4874:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4874:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "4874:39:5"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "4728:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4797:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4822:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4814:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4814:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4836:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4828:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4828:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4848:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "4840:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4840:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4813:43:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4864:0:5"
									},
									"scope": 1325,
									"src": "4788:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1387
									],
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "5089:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5112:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5118:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5122:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5099:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5099:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "5099:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5163:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "5169:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5173:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 673,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5182:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "5140:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "5140:47:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4926:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4995:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5020:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5012:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5012:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5034:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5026:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5026:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5046:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5038:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5038:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5068:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5055:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5055:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5011:62:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5089:0:5"
									},
									"scope": 1325,
									"src": "4986:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5784:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 685,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5801:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 687,
													"indexExpression": {
														"id": 686,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "5809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5801:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 684,
												"id": 688,
												"nodeType": "Return",
												"src": "5794:23:5"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5200:504:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5718:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5735:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5727:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5727:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5726:17:5"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5775:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5774:9:5"
									},
									"scope": 1325,
									"src": "5709:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6019:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 698,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "6036:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 700,
													"indexExpression": {
														"id": 699,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "6052:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6036:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 697,
												"id": 701,
												"nodeType": "Return",
												"src": "6029:31:5"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5830:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5949:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5970:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "5962:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5962:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5961:17:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6010:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:9:5"
									},
									"scope": 1325,
									"src": "5940:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "6487:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "6516:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6535:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6527:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6527:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6527:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6516:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 721,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 706,
																			"src": "6554:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 722,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "6563:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6554:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 725,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "6591:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 726,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 708,
																				"src": "6598:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 724,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "6574:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6574:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6554:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 730,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "6623:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 729,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "6610:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6610:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 732,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "6635:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6610:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6554:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6553:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6516:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 714,
												"id": 737,
												"nodeType": "Return",
												"src": "6497:146:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6073:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6387:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6409:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6401:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6401:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6424:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6416:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6416:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6441:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6433:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6433:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6400:49:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "6481:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6481:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6480:6:5"
									},
									"scope": 1325,
									"src": "6378:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "7181:271:5",
										"statements": [
											{
												"condition": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7195:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 750,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "7210:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 751,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "7217:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 752,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7226:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 749,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7196:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7196:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "7191:255:5",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "7236:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "7254:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7271:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7263:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 756,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7263:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7263:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7254:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 771,
																"nodeType": "Block",
																"src": "7352:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 767,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "7404:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 768,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7413:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 766,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7377:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7377:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 770,
																		"nodeType": "RevertStatement",
																		"src": "7370:51:5"
																	}
																]
															},
															"id": 772,
															"nodeType": "IfStatement",
															"src": "7250:186:5",
															"trueBody": {
																"id": 765,
																"nodeType": "Block",
																"src": "7275:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 762,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "7323:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 761,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7300:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7300:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 764,
																		"nodeType": "RevertStatement",
																		"src": "7293:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6656:423:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7093:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7118:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7110:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7110:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7133:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7125:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7125:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7150:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "7142:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7142:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7109:49:5"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7181:0:5"
									},
									"scope": 1325,
									"src": "7084:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "8169:78:5",
										"statements": [
											{
												"id": 790,
												"nodeType": "UncheckedBlock",
												"src": "8179:62:5",
												"statements": [
													{
														"expression": {
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 784,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "8203:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 786,
																"indexExpression": {
																	"id": 785,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "8213:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8203:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8225:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8203:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 789,
														"nodeType": "ExpressionStatement",
														"src": "8203:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "7458:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8103:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "8137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8119:32:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8169:0:5"
									},
									"scope": 1325,
									"src": "8094:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "8935:700:5",
										"statements": [
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8953:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 881,
														"src": "8945:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 804,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8945:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"arguments": [
														{
															"id": 807,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "8969:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "8960:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8960:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8945:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "9037:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9053:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9045:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 811,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9045:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9045:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9037:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "9033:86:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "9057:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 817,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "9088:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 818,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "9094:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 819,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9100:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "9071:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9071:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 821,
															"nodeType": "ExpressionStatement",
															"src": "9071:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "9163:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9179:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9171:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 825,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9171:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9171:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9163:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "9159:256:5",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "9183:232:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9296:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9288:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 831,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9288:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9288:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "9300:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9317:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9309:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9309:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9309:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9321:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 830,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1128,
																		1194
																	],
																	"referencedDeclaration": 1194,
																	"src": "9279:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9279:48:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "9279:48:5"
														},
														{
															"id": 849,
															"nodeType": "UncheckedBlock",
															"src": "9342:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 843,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9370:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 845,
																			"indexExpression": {
																				"id": 844,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 805,
																				"src": "9380:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9370:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9389:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9370:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 848,
																	"nodeType": "ExpressionStatement",
																	"src": "9370:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9429:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9443:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9435:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9435:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9435:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9429:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 866,
												"nodeType": "IfStatement",
												"src": "9425:107:5",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "9447:85:5",
													"statements": [
														{
															"id": 864,
															"nodeType": "UncheckedBlock",
															"src": "9461:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 858,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 359,
																				"src": "9489:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 860,
																			"indexExpression": {
																				"id": 859,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "9499:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9489:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9506:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9489:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 863,
																	"nodeType": "ExpressionStatement",
																	"src": "9489:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 867,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9542:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 869,
														"indexExpression": {
															"id": 868,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9550:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9542:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 870,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9561:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9542:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "9542:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "9588:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "9594:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "9598:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 873,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "9579:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9579:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "EmitStatement",
												"src": "9574:32:5"
											},
											{
												"expression": {
													"id": 879,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "9624:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 803,
												"id": 880,
												"nodeType": "Return",
												"src": "9617:11:5"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "8253:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8849:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8865:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8857:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8857:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8877:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8869:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8894:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8886:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8886:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8856:43:5"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "8926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8926:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8925:9:5"
									},
									"scope": 1325,
									"src": "8840:795:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "10010:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "10024:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10038:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10030:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10030:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10030:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10024:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10020:87:5",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10042:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10093:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10085:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10085:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10085:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10063:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10063:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "10056:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10124:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 931,
														"src": "10116:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 905,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10116:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"id": 908,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "10148:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10152:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10169:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10161:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 910,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10161:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10161:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 907,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "10140:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10140:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10116:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "10186:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10211:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10203:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10203:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10203:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10186:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "10182:96:5",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "10215:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10264:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10256:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 923,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10256:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10256:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 922,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10236:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10236:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "10229:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "9641:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9966:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9980:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9972:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9972:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9992:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "9984:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9984:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9971:29:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10010:0:5"
									},
									"scope": 1325,
									"src": "9957:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "10692:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10712:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10716:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10725:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 940,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 973,
														"src": "10702:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10702:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "10702:26:5"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "10290:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10644:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10662:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10654:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10654:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "10666:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10653:29:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10692:0:5"
									},
									"scope": 1325,
									"src": "10635:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "11040:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11056:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11060:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "11050:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11050:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11050:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11109:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11101:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 963,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11101:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11101:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 967,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11113:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11117:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 969,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "11126:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 962,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "11078:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11078:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "11078:53:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "10741:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10965:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10983:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10975:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10975:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10995:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "10987:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10987:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11017:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "11004:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11004:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10974:48:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11040:0:5"
									},
									"scope": 1325,
									"src": "10956:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "11505:186:5",
										"statements": [
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11523:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "11515:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 979,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11515:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11555:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11547:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11547:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11547:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "11559:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11576:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11568:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11568:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11568:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 981,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "11539:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11539:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11515:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "11593:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11618:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11610:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11610:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11610:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11593:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "11589:96:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "11622:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1000,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "11666:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 999,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11643:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11643:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "11636:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "11144:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11473:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11487:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "11479:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11479:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11478:17:5"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11505:0:5"
									},
									"scope": 1325,
									"src": "11464:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "12086:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "12100:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12114:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12106:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1017,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12106:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12106:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12100:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "12096:87:5",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "12118:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12169:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12161:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1023,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12161:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12161:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1022,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12139:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12139:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "12132:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12200:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1065,
														"src": "12192:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1031,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12192:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1034,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "12224:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1035,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "12228:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12245:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12237:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1036,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12237:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12237:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1033,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "12216:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12216:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12192:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "12262:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12287:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12279:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1043,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12279:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12279:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12262:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1053,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "12364:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1054,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "12381:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12364:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1063,
													"nodeType": "IfStatement",
													"src": "12360:109:5",
													"trueBody": {
														"id": 1062,
														"nodeType": "Block",
														"src": "12387:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1009,
																			"src": "12429:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "12435:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "12444:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1056,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12408:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12408:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1061,
																"nodeType": "RevertStatement",
																"src": "12401:57:5"
															}
														]
													}
												},
												"id": 1064,
												"nodeType": "IfStatement",
												"src": "12258:211:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "12291:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "12335:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1048,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12312:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12312:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "12305:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "11697:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12024:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12042:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12034:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12034:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12056:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12048:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12048:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12068:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "12060:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12033:43:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12086:0:5"
									},
									"scope": 1325,
									"src": "12015:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "13484:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "13508:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "13514:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "13518:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13527:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1076,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1084,
															1110
														],
														"referencedDeclaration": 1110,
														"src": "13494:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13494:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "13494:36:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "12481:923:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13418:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13440:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13432:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13432:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13454:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13446:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13446:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13466:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "13458:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13431:43:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13484:0:5"
									},
									"scope": 1325,
									"src": "13409:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "13876:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13896:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13902:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1099,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13906:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1096,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "13886:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13886:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "13886:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "13947:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "13953:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "13957:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1106,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "13966:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1102,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "13924:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13924:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "13924:47:5"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "13543:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13783:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13805:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13797:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13797:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13819:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13811:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13811:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13831:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13823:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13823:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13853:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "13840:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13840:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13796:62:5"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13876:0:5"
									},
									"scope": 1325,
									"src": "13774:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "14491:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "14510:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "14514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1123,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "14523:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14529:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1120,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1128,
															1194
														],
														"referencedDeclaration": 1194,
														"src": "14501:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14501:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "14501:33:5"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "13984:432:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14430:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14447:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14439:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14439:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14459:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14451:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14476:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "14468:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14468:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14438:43:5"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14491:0:5"
									},
									"scope": 1325,
									"src": "14421:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "14817:568:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "14883:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1141,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "14896:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14912:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14904:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14904:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14904:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14896:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14883:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "14879:460:5",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "14916:423:5",
													"statements": [
														{
															"assignments": [
																1149
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1149,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14938:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "14930:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14930:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1153,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1151,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "14960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1150,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "14946:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14946:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14930:38:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1154,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15096:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15112:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15104:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15104:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15104:10:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15096:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1160,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "15118:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1161,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "15127:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15118:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15096:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15135:30:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "15153:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1135,
																				"src": "15160:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1164,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "15136:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15136:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15096:69:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "15092:142:5",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "15167:67:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "15214:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1170,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15192:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15192:27:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1173,
																		"nodeType": "RevertStatement",
																		"src": "15185:34:5"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1176,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "15252:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1184,
															"nodeType": "IfStatement",
															"src": "15248:81:5",
															"trueBody": {
																"id": 1183,
																"nodeType": "Block",
																"src": "15263:66:5",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1178,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "15295:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1179,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "15302:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1133,
																					"src": "15306:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1177,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "15286:8:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15286:28:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1182,
																		"nodeType": "EmitStatement",
																		"src": "15281:33:5"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1187,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "15349:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1189,
														"indexExpression": {
															"id": 1188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "15365:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15349:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1190,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "15376:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15349:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "15349:29:5"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "14547:171:5",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14732:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14749:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14741:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14741:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14761:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14753:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14753:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14778:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14770:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14770:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14789:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "14784:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14784:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14740:59:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14817:0:5"
									},
									"scope": 1325,
									"src": "14723:662:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "15687:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "15701:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15721:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1205,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15713:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15713:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15701:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1215,
												"nodeType": "IfStatement",
												"src": "15697:91:5",
												"trueBody": {
													"id": 1214,
													"nodeType": "Block",
													"src": "15725:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1211,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1199,
																		"src": "15768:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1210,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15746:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15746:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1213,
															"nodeType": "RevertStatement",
															"src": "15739:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1216,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "15797:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1219,
															"indexExpression": {
																"id": 1217,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "15816:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15797:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1220,
														"indexExpression": {
															"id": 1218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15823:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15797:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "15835:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15797:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "15797:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "15873:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "15880:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "15890:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1224,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "15858:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15858:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "15853:46:5"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "15391:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15603:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15630:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15622:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15622:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15645:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15637:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15660:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "15655:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15655:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15621:48:5"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15687:0:5"
									},
									"scope": 1325,
									"src": "15594:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "16213:169:5",
										"statements": [
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16231:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "16223:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16223:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1244,
												"initialValue": {
													"arguments": [
														{
															"id": 1242,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "16248:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1241,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "16239:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16239:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16223:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "16270:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16287:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16279:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16279:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16279:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16270:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "16266:88:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "16291:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "16335:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1251,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16312:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16312:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1254,
															"nodeType": "RevertStatement",
															"src": "16305:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1257,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "16370:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1258,
												"nodeType": "Return",
												"src": "16363:12:5"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "15912:224:5",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16150:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16172:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16164:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16164:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16163:17:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "16204:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16204:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16203:9:5"
									},
									"scope": 1325,
									"src": "16141:241:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "17023:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1272,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "17037:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17040:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17037:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17045:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17037:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17054:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17037:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "17033:664:5",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "17057:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1301,
																		"nodeType": "Block",
																		"src": "17171:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1294,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1290,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1288,
																						"src": "17193:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1291,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "17203:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1292,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17219:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1459,
																							"src": "17203:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1293,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17236:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17203:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17193:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1300,
																				"nodeType": "IfStatement",
																				"src": "17189:130:5",
																				"trueBody": {
																					"id": 1299,
																					"nodeType": "Block",
																					"src": "17246:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1296,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17297:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1295,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17275:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1297,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17275:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1298,
																							"nodeType": "RevertStatement",
																							"src": "17268:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1302,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1289,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1288,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17163:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1302,
																				"src": "17156:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1287,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17156:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17155:15:5"
																	},
																	"src": "17147:186:5"
																},
																{
																	"block": {
																		"id": 1318,
																		"nodeType": "Block",
																		"src": "17362:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1309,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1306,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1304,
																							"src": "17384:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17391:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17384:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1308,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17401:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17384:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1316,
																					"nodeType": "Block",
																					"src": "17483:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17569:86:5",
																								"nodeType": "YulBlock",
																								"src": "17569:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17606:2:5",
																															"nodeType": "YulLiteral",
																															"src": "17606:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17610:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17610:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17602:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "17602:3:5"
																													},
																													"nativeSrc": "17602:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17602:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17625:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "17625:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17619:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "17619:5:5"
																													},
																													"nativeSrc": "17619:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "17619:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17595:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "17595:6:5"
																											},
																											"nativeSrc": "17595:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "17595:38:5"
																										},
																										"nativeSrc": "17595:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "17595:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17610:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1304,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17625:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1315,
																							"nodeType": "InlineAssembly",
																							"src": "17560:95:5"
																						}
																					]
																				},
																				"id": 1317,
																				"nodeType": "IfStatement",
																				"src": "17380:293:5",
																				"trueBody": {
																					"id": 1314,
																					"nodeType": "Block",
																					"src": "17404:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1311,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1265,
																										"src": "17455:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1310,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17433:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1312,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17433:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1313,
																							"nodeType": "RevertStatement",
																							"src": "17426:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1319,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1305,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1304,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17354:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1319,
																				"src": "17341:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1303,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17341:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17340:21:5"
																	},
																	"src": "17334:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1281,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "17112:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17112:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1283,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "17126:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1284,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "17132:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1285,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "17141:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1278,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1265,
																				"src": "17091:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1277,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "17075:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1460_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17075:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1460",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17095:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1459,
																	"src": "17075:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17075:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1320,
															"nodeType": "TryStatement",
															"src": "17071:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "16388:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16930:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16961:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16953:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16953:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16975:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16967:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16967:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16987:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16979:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16979:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17009:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "16996:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16996:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16952:62:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17023:0:5"
									},
									"scope": 1325,
									"src": "16921:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1326,
							"src": "777:16928:5",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "107:17599:5"
				},
				"id": 5
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1964
						],
						"IERC721": [
							1442
						]
					},
					"id": 1443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1443,
							"sourceUnit": 1965,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1328,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1964,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "IERC165",
										"nameLocations": [
											"288:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1964,
										"src": "288:7:6"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:6",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1442,
							"linearizedBaseContracts": [
								1442,
								1964
							],
							"name": "IERC721",
							"nameLocation": "277:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1341,
									"name": "Transfer",
									"nameLocation": "401:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "410:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "432:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "452:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:6"
									},
									"src": "395:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1350,
									"name": "Approval",
									"nameLocation": "588:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "597:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "620:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "646:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:6"
									},
									"src": "582:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1359,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "820:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "843:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "869:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:6"
									},
									"src": "799:85:6"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "990:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "1028:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:6"
									},
									"scope": 1442,
									"src": "971:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1204:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:6"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "1244:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:6"
									},
									"scope": 1442,
									"src": "1187:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1861:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1875:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1887:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1904:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:6"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:6"
									},
									"scope": 1442,
									"src": "1835:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2677:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2691:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "2703:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:6"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:6"
									},
									"scope": 1442,
									"src": "2651:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3495:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3509:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3521:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:6"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:6"
									},
									"scope": 1442,
									"src": "3473:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4027:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "4039:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:6"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:6"
									},
									"scope": 1442,
									"src": "4010:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4418:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "4436:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:6"
									},
									"scope": 1442,
									"src": "4391:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4631:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:6"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "4671:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:6"
									},
									"scope": 1442,
									"src": "4610:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4864:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4879:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "4920:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:6"
									},
									"scope": 1442,
									"src": "4838:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1443,
							"src": "267:4661:6",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "108:4821:6"
				},
				"id": 6
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1460
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "142:154:7",
								"text": " @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1460,
							"linearizedBaseContracts": [
								1460
							],
							"name": "IERC721Receiver",
							"nameLocation": "307:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "329:500:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "843:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "877:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "869:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "903:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "895:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "925:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "917:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "957:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "942:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "942:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:108:7"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "986:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "986:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:8:7"
									},
									"scope": 1460,
									"src": "834:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1461,
							"src": "297:699:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:881:7"
				},
				"id": 7
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1673
						],
						"ERC721": [
							1325
						],
						"ERC721Burnable": [
							1489
						]
					},
					"id": 1490,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:8"
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1490,
							"sourceUnit": 1326,
							"src": "152:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1463,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "160:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1490,
							"sourceUnit": 1674,
							"src": "190:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1465,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1673,
										"src": "198:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1468,
										"name": "Context",
										"nameLocations": [
											"374:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1673,
										"src": "374:7:8"
									},
									"id": 1469,
									"nodeType": "InheritanceSpecifier",
									"src": "374:7:8"
								},
								{
									"baseName": {
										"id": 1470,
										"name": "ERC721",
										"nameLocations": [
											"383:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "383:6:8"
									},
									"id": 1471,
									"nodeType": "InheritanceSpecifier",
									"src": "383:6:8"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1467,
								"nodeType": "StructuredDocumentation",
								"src": "243:94:8",
								"text": " @title ERC-721 Burnable Token\n @dev ERC-721 Token that can be burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 1489,
							"linearizedBaseContracts": [
								1489,
								1325,
								269,
								1643,
								1442,
								1952,
								1964,
								1673
							],
							"name": "ERC721Burnable",
							"nameLocation": "356:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "609:268:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "844:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "836:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1478,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "836:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "836:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1482,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "848:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "857:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "857:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1477,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "828:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "828:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "828:42:8"
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "396:162:8",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "572:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "585:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "577:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:17:8"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:0:8"
									},
									"scope": 1489,
									"src": "563:314:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1490,
							"src": "338:541:8",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "126:754:8"
				},
				"id": 8
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1325
						],
						"ERC721URIStorage": [
							1615
						],
						"IERC165": [
							1964
						],
						"IERC4906": [
							175
						],
						"Strings": [
							1928
						]
					},
					"id": 1616,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1491,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:9"
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1493,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1616,
							"sourceUnit": 1326,
							"src": "154:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1492,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1325,
										"src": "162:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1495,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1616,
							"sourceUnit": 1929,
							"src": "192:51:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1494,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1928,
										"src": "200:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1616,
							"sourceUnit": 176,
							"src": "244:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1496,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1499,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1616,
							"sourceUnit": 152,
							"src": "303:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1498,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1964,
										"src": "311:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1501,
										"name": "IERC4906",
										"nameLocations": [
											"470:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "470:8:9"
									},
									"id": 1502,
									"nodeType": "InheritanceSpecifier",
									"src": "470:8:9"
								},
								{
									"baseName": {
										"id": 1503,
										"name": "ERC721",
										"nameLocations": [
											"480:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1325,
										"src": "480:6:9"
									},
									"id": 1504,
									"nodeType": "InheritanceSpecifier",
									"src": "480:6:9"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1500,
								"nodeType": "StructuredDocumentation",
								"src": "361:70:9",
								"text": " @dev ERC-721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1615,
							"linearizedBaseContracts": [
								1615,
								1325,
								269,
								1643,
								175,
								1442,
								1952,
								1964,
								1673
							],
							"name": "ERC721URIStorage",
							"nameLocation": "450:16:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1507,
									"libraryName": {
										"id": 1505,
										"name": "Strings",
										"nameLocations": [
											"499:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1928,
										"src": "499:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "493:26:9",
									"typeName": {
										"id": 1506,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "511:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1513,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "731:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "707:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1508,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "707:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1511,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "761:10:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1510,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "754:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1509,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "754:6:9",
												"typeDescriptions": {}
											}
										},
										"id": 1512,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "754:18:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1517,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "861:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1615,
									"src": "818:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1516,
										"keyName": "tokenId",
										"keyNameLocation": "834:7:9",
										"keyType": {
											"id": 1514,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "826:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "818:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1515,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "845:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										417,
										1963
									],
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "1046:99:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1528,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "1063:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1529,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "1078:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1063:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1533,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1520,
																"src": "1126:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1531,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1102:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1615_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1108:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 417,
															"src": "1102:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1102:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1063:75:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1527,
												"id": 1536,
												"nodeType": "Return",
												"src": "1056:82:9"
											}
										]
									},
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "878:55:9",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "947:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1524,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1522,
												"name": "ERC721",
												"nameLocations": [
													"1014:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "1014:6:9"
											},
											{
												"id": 1523,
												"name": "IERC165",
												"nameLocations": [
													"1022:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1964,
												"src": "1022:7:9"
											}
										],
										"src": "1005:25:9"
									},
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "972:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "965:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1519,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "965:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:20:9"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1040:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:6:9"
									},
									"scope": 1615,
									"src": "938:207:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										512
									],
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "1299:505:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1548,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "1323:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1547,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1309:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "1309:22:9"
											},
											{
												"assignments": [
													1552
												],
												"declarations": [
													{
														"constant": false,
														"id": 1552,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1356:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1594,
														"src": "1342:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1551,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1342:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1556,
												"initialValue": {
													"baseExpression": {
														"id": 1553,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "1368:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1555,
													"indexExpression": {
														"id": 1554,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "1379:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1368:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1342:45:9"
											},
											{
												"assignments": [
													1558
												],
												"declarations": [
													{
														"constant": false,
														"id": 1558,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1411:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1594,
														"src": "1397:18:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1557,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1397:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1561,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1559,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1418:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1418:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1397:31:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1564,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "1507:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1501:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1562,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1501:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1501:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1513:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1501:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1523:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1501:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1572,
												"nodeType": "IfStatement",
												"src": "1497:70:9",
												"trueBody": {
													"id": 1571,
													"nodeType": "Block",
													"src": "1526:41:9",
													"statements": [
														{
															"expression": {
																"id": 1569,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "1547:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1546,
															"id": 1570,
															"nodeType": "Return",
															"src": "1540:16:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1575,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "1672:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1666:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1573,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1666:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1666:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1683:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1666:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1692:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1666:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1588,
												"nodeType": "IfStatement",
												"src": "1662:95:9",
												"trueBody": {
													"id": 1587,
													"nodeType": "Block",
													"src": "1695:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1583,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1558,
																		"src": "1730:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1584,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "1736:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1716:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1580,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1716:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1723:6:9",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1716:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1716:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1546,
															"id": 1586,
															"nodeType": "Return",
															"src": "1709:37:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1591,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "1789:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1589,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1774:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1615_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1780:8:9",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 512,
														"src": "1774:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1546,
												"id": 1593,
												"nodeType": "Return",
												"src": "1767:30:9"
											}
										]
									},
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "1151:55:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1220:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1543,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1266:8:9"
									},
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1237:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "1229:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:17:9"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "1284:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1284:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1283:15:9"
									},
									"scope": 1615,
									"src": "1211:593:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "2004:86:9",
										"statements": [
											{
												"expression": {
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1603,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "2014:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1605,
														"indexExpression": {
															"id": 1604,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "2025:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2014:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1606,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "2036:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2014:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "2014:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1610,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "2075:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1609,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2060:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2060:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "EmitStatement",
												"src": "2055:28:9"
											}
										]
									},
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "1810:108:9",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1932:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1953:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "1945:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1976:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "1962:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1599,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1962:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:42:9"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2004:0:9"
									},
									"scope": 1615,
									"src": "1923:167:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1616,
							"src": "432:1660:9",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "128:1965:9"
				},
				"id": 9
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1442
						],
						"IERC721Metadata": [
							1643
						]
					},
					"id": 1644,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1617,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:10"
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1619,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1644,
							"sourceUnit": 1443,
							"src": "153:39:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1618,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1442,
										"src": "161:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1621,
										"name": "IERC721",
										"nameLocations": [
											"357:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1442,
										"src": "357:7:10"
									},
									"id": 1622,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:10"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1620,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:10",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1643,
							"linearizedBaseContracts": [
								1643,
								1442,
								1964
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:10",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:10"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "473:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:10"
									},
									"scope": 1643,
									"src": "434:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:10",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:10"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "600:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1631,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:10"
									},
									"scope": 1643,
									"src": "559:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:10",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "734:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:10"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "774:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:10"
									},
									"scope": 1643,
									"src": "716:73:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1644,
							"src": "328:463:10",
							"usedErrors": [],
							"usedEvents": [
								1341,
								1350,
								1359
							]
						}
					],
					"src": "127:665:10"
				},
				"id": 10
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1673
						]
					},
					"id": 1674,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1645,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1646,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1673,
							"linearizedBaseContracts": [
								1673
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1651,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1650,
												"id": 1653,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 1673,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1660,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1659,
												"id": 1662,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1657,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 1673,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "935:25:11",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1668,
												"id": 1670,
												"nodeType": "Return",
												"src": "945:8:11"
											}
										]
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:11"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "926:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:11"
									},
									"scope": 1673,
									"src": "863:97:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1674,
							"src": "624:338:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:11"
				},
				"id": 11
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3019
						],
						"SignedMath": [
							3124
						],
						"Strings": [
							1928
						]
					},
					"id": 1929,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1675,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1677,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1929,
							"sourceUnit": 3020,
							"src": "127:37:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1676,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3019,
										"src": "135:4:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1929,
							"sourceUnit": 3125,
							"src": "165:49:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1678,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3124,
										"src": "173:10:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1680,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:12",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1928,
							"linearizedBaseContracts": [
								1928
							],
							"name": "Strings",
							"nameLocation": "259:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1683,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "273:56:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1681,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1682,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1686,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "335:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1684,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1685,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1687,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:12",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1693,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "505:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "520:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:12"
									},
									"src": "470:66:12"
								},
								{
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "708:627:12",
										"statements": [
											{
												"id": 1739,
												"nodeType": "UncheckedBlock",
												"src": "718:611:12",
												"statements": [
													{
														"assignments": [
															1702
														],
														"declarations": [
															{
																"constant": false,
																"id": 1702,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1739,
																"src": "742:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1701,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1709,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1705,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "770:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1703,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3019,
																		"src": "759:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3019_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:12",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2839,
																	"src": "759:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:12"
													},
													{
														"assignments": [
															1711
														],
														"declarations": [
															{
																"constant": false,
																"id": 1711,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 1739,
																"src": "794:20:12",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1710,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1716,
														"initialValue": {
															"arguments": [
																{
																	"id": 1714,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "828:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1712,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:12"
													},
													{
														"assignments": [
															1718
														],
														"declarations": [
															{
																"constant": false,
																"id": 1718,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:12",
																"nodeType": "VariableDeclaration",
																"scope": 1739,
																"src": "849:11:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1717,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1719,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:12"
													},
													{
														"AST": {
															"nativeSrc": "930:67:12",
															"nodeType": "YulBlock",
															"src": "930:67:12",
															"statements": [
																{
																	"nativeSrc": "948:35:12",
																	"nodeType": "YulAssignment",
																	"src": "948:35:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:12",
																						"nodeType": "YulLiteral",
																						"src": "971:2:12",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:12"
																				},
																				"nativeSrc": "967:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:12"
																		},
																		"nativeSrc": "955:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:12"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:12"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1711,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1702,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:12",
																"valueSize": 1
															},
															{
																"declaration": 1718,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:12",
																"valueSize": 1
															}
														],
														"id": 1720,
														"nodeType": "InlineAssembly",
														"src": "921:76:12"
													},
													{
														"body": {
															"id": 1735,
															"nodeType": "Block",
															"src": "1023:269:12",
															"statements": [
																{
																	"expression": {
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:12",
																		"subExpression": {
																			"id": 1722,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1718,
																			"src": "1041:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1724,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:12"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:12",
																		"nodeType": "YulBlock",
																		"src": "1124:86:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:12",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:12",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:12"
																									},
																									"nativeSrc": "1164:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:12"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:12"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:12"
																							},
																							"nativeSrc": "1159:32:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:12"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:12"
																					},
																					"nativeSrc": "1146:46:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:12"
																				},
																				"nativeSrc": "1146:46:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:12"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1683,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1718,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:12",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1696,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:12",
																			"valueSize": 1
																		}
																	],
																	"id": 1725,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:12"
																},
																{
																	"expression": {
																		"id": 1728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1726,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1696,
																			"src": "1227:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1729,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:12"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1696,
																			"src": "1260:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1734,
																	"nodeType": "IfStatement",
																	"src": "1256:21:12",
																	"trueBody": {
																		"id": 1733,
																		"nodeType": "Break",
																		"src": "1272:5:12"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1736,
														"nodeType": "WhileStatement",
														"src": "1010:282:12"
													},
													{
														"expression": {
															"id": 1737,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "1312:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1700,
														"id": 1738,
														"nodeType": "Return",
														"src": "1305:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "655:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:12"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "693:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1698,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:12"
									},
									"scope": 1928,
									"src": "637:698:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1766,
										"nodeType": "Block",
										"src": "1511:92:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1752,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "1542:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:12",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1761,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1744,
																			"src": "1588:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1759,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3124,
																			"src": "1573:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3124_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:12",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3123,
																		"src": "1573:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1758,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "1564:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1749,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:12",
																"typeDescriptions": {}
															}
														},
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:12",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1748,
												"id": 1765,
												"nodeType": "Return",
												"src": "1521:75:12"
											}
										]
									},
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:12",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "1459:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1743,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:12"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "1496:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1746,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:12"
									},
									"scope": 1928,
									"src": "1435:168:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "1782:100:12",
										"statements": [
											{
												"id": 1785,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1776,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "1835:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1779,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1770,
																				"src": "1854:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1777,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3019,
																				"src": "1842:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3019_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:12",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2961,
																			"src": "1842:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1775,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1787,
																	1870,
																	1890
																],
																"referencedDeclaration": 1870,
																"src": "1823:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1774,
														"id": 1784,
														"nodeType": "Return",
														"src": "1816:49:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "1729:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:12"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "1767:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1772,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:12"
									},
									"scope": 1928,
									"src": "1708:174:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "2095:435:12",
										"statements": [
											{
												"assignments": [
													1798
												],
												"declarations": [
													{
														"constant": false,
														"id": 1798,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "2105:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1797,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1800,
												"initialValue": {
													"id": 1799,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1790,
													"src": "2126:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:12"
											},
											{
												"assignments": [
													1802
												],
												"declarations": [
													{
														"constant": false,
														"id": 1802,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "2141:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1801,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1811,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1806,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1792,
																	"src": "2177:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1803,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:12"
											},
											{
												"expression": {
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1812,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "2198:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1814,
														"indexExpression": {
															"hexValue": "30",
															"id": 1813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1817,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:12"
											},
											{
												"expression": {
													"id": 1822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1818,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "2223:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1820,
														"indexExpression": {
															"hexValue": "31",
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1823,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:12"
											},
											{
												"body": {
													"id": 1852,
													"nodeType": "Block",
													"src": "2293:95:12",
													"statements": [
														{
															"expression": {
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1838,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "2307:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1840,
																	"indexExpression": {
																		"id": 1839,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "2314:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1841,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "2319:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1845,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1842,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1798,
																			"src": "2330:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1847,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:12"
														},
														{
															"expression": {
																"id": 1850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1848,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1798,
																	"src": "2361:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1851,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1832,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1825,
														"src": "2281:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1853,
												"initializationExpression": {
													"assignments": [
														1825
													],
													"declarations": [
														{
															"constant": false,
															"id": 1825,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1853,
															"src": "2253:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1824,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1831,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1827,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1792,
																"src": "2269:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:12"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:12",
														"subExpression": {
															"id": 1835,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "2290:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1837,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:12"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1854,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "2401:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1863,
												"nodeType": "IfStatement",
												"src": "2397:96:12",
												"trueBody": {
													"id": 1862,
													"nodeType": "Block",
													"src": "2418:75:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1858,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "2468:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1859,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1792,
																		"src": "2475:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1857,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1693,
																	"src": "2439:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1861,
															"nodeType": "RevertStatement",
															"src": "2432:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1866,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "2516:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1864,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:12",
															"typeDescriptions": {}
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1796,
												"id": 1868,
												"nodeType": "Return",
												"src": "2502:21:12"
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:12",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "2026:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "2041:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:12"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "2080:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1794,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:12"
									},
									"scope": 1928,
									"src": "2005:525:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "2762:75:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1883,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1873,
																			"src": "2807:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1881,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1879,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1886,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "2815:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1878,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1787,
															1870,
															1890
														],
														"referencedDeclaration": 1870,
														"src": "2779:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1877,
												"id": 1888,
												"nodeType": "Return",
												"src": "2772:58:12"
											}
										]
									},
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:12",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2710:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:12"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "2747:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1875,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:12"
									},
									"scope": 1928,
									"src": "2689:148:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "2992:104:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1902,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1893,
																		"src": "3015:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1900,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1907,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1895,
																		"src": "3034:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1905,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:12",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1914,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1893,
																			"src": "3063:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1912,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1911,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1920,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1895,
																			"src": "3086:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1918,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1917,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1899,
												"id": 1925,
												"nodeType": "Return",
												"src": "3002:87:12"
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:12",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "2929:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1892,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "2946:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1894,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:12"
									},
									"returnParameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "2986:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1897,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:12"
									},
									"scope": 1928,
									"src": "2914:182:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1929,
							"src": "251:2847:12",
							"usedErrors": [
								1693
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:12"
				},
				"id": 12
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1952
						],
						"IERC165": [
							1964
						]
					},
					"id": 1953,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1930,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:13"
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1953,
							"sourceUnit": 1965,
							"src": "140:38:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1931,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1964,
										"src": "148:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1934,
										"name": "IERC165",
										"nameLocations": [
											"688:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1964,
										"src": "688:7:13"
									},
									"id": 1935,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:13"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1933,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:13",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1952,
							"linearizedBaseContracts": [
								1952,
								1964
							],
							"name": "ERC165",
							"nameLocation": "678:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1963
									],
									"body": {
										"id": 1950,
										"nodeType": "Block",
										"src": "845:64:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1943,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1938,
														"src": "862:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1945,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1964,
																	"src": "882:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1964_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1964_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1944,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1964",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:13",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1942,
												"id": 1949,
												"nodeType": "Return",
												"src": "855:47:13"
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:13",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "790:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1937,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:13"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "839:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1940,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:13"
									},
									"scope": 1952,
									"src": "763:146:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1953,
							"src": "660:251:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:13"
				},
				"id": 13
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1964
						]
					},
					"id": 1965,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1954,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1955,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:14",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1964,
							"linearizedBaseContracts": [
								1964
							],
							"name": "IERC165",
							"nameLocation": "432:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:14",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "818:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1957,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:14"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "861:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1960,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:14"
									},
									"scope": 1964,
									"src": "791:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1965,
							"src": "422:447:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:14"
				},
				"id": 14
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3019
						]
					},
					"id": 3020,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1966,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1967,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:15",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3019,
							"linearizedBaseContracts": [
								3019
							],
							"name": "Math",
							"nameLocation": "211:4:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:15",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1970,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:15"
									},
									"src": "277:29:15"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1975,
									"members": [
										{
											"id": 1971,
											"name": "Floor",
											"nameLocation": "336:5:15",
											"nodeType": "EnumValue",
											"src": "336:5:15"
										},
										{
											"id": 1972,
											"name": "Ceil",
											"nameLocation": "379:4:15",
											"nodeType": "EnumValue",
											"src": "379:4:15"
										},
										{
											"id": 1973,
											"name": "Trunc",
											"nameLocation": "421:5:15",
											"nodeType": "EnumValue",
											"src": "421:5:15"
										},
										{
											"id": 1974,
											"name": "Expand",
											"nameLocation": "451:6:15",
											"nodeType": "EnumValue",
											"src": "451:6:15"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:15",
									"nodeType": "EnumDefinition",
									"src": "312:169:15"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "689:140:15",
										"statements": [
											{
												"id": 2005,
												"nodeType": "UncheckedBlock",
												"src": "699:124:15",
												"statements": [
													{
														"assignments": [
															1988
														],
														"declarations": [
															{
																"constant": false,
																"id": 1988,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "731:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2005,
																"src": "723:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1987,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "723:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1992,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1989,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1978,
																"src": "735:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1990,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1980,
																"src": "739:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "735:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "723:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1993,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "758:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1994,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1978,
																"src": "762:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "758:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2000,
														"nodeType": "IfStatement",
														"src": "754:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "773:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "780:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "772:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1986,
															"id": 1999,
															"nodeType": "Return",
															"src": "765:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "804:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2002,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1988,
																	"src": "810:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2003,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "803:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1986,
														"id": 2004,
														"nodeType": "Return",
														"src": "796:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1976,
										"nodeType": "StructuredDocumentation",
										"src": "487:106:15",
										"text": " @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "607:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "622:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "614:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "633:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "625:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:22:15"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "664:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "659:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1982,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "659:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "681:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "673:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:30:15"
									},
									"scope": 3019,
									"src": "598:231:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2034,
										"nodeType": "Block",
										"src": "1040:113:15",
										"statements": [
											{
												"id": 2033,
												"nodeType": "UncheckedBlock",
												"src": "1050:97:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2019,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "1078:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2020,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "1082:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1078:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2026,
														"nodeType": "IfStatement",
														"src": "1074:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1093:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1100:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2024,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1092:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2018,
															"id": 2025,
															"nodeType": "Return",
															"src": "1085:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1124:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2028,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2010,
																		"src": "1130:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2029,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "1134:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1130:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2031,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1123:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2018,
														"id": 2032,
														"nodeType": "Return",
														"src": "1116:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "835:109:15",
										"text": " @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 2035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "958:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "973:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "965:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "984:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "976:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:22:15"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1015:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "1010:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1010:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1032:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "1024:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:30:15"
									},
									"scope": 3019,
									"src": "949:204:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2076,
										"nodeType": "Block",
										"src": "1367:417:15",
										"statements": [
											{
												"id": 2075,
												"nodeType": "UncheckedBlock",
												"src": "1377:401:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2047,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "1635:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1640:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1635:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2054,
														"nodeType": "IfStatement",
														"src": "1631:28:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1657:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2052,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1650:9:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2046,
															"id": 2053,
															"nodeType": "Return",
															"src": "1643:16:15"
														}
													},
													{
														"assignments": [
															2056
														],
														"declarations": [
															{
																"constant": false,
																"id": 2056,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1681:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2075,
																"src": "1673:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2055,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1673:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2060,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2057,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2038,
																"src": "1685:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2058,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2040,
																"src": "1689:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1685:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1673:17:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2061,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2056,
																	"src": "1708:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2062,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2038,
																	"src": "1712:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1708:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2064,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2040,
																"src": "1717:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1708:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2070,
														"nodeType": "IfStatement",
														"src": "1704:33:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1728:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1735:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2068,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1727:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2046,
															"id": 2069,
															"nodeType": "Return",
															"src": "1720:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2072,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2056,
																	"src": "1765:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2073,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1758:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2046,
														"id": 2074,
														"nodeType": "Return",
														"src": "1751:16:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2036,
										"nodeType": "StructuredDocumentation",
										"src": "1159:112:15",
										"text": " @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."
									},
									"id": 2077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1285:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1300:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "1292:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1311:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "1303:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1291:22:15"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1342:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "1337:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2042,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1337:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1359:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "1351:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1336:30:15"
									},
									"scope": 3019,
									"src": "1276:508:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2104,
										"nodeType": "Block",
										"src": "1999:114:15",
										"statements": [
											{
												"id": 2103,
												"nodeType": "UncheckedBlock",
												"src": "2009:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2089,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2082,
																"src": "2037:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2037:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2096,
														"nodeType": "IfStatement",
														"src": "2033:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2053:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2060:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2094,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2052:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2088,
															"id": 2095,
															"nodeType": "Return",
															"src": "2045:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2084:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2098,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2080,
																		"src": "2090:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2099,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2082,
																		"src": "2094:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2090:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2101,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2083:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2088,
														"id": 2102,
														"nodeType": "Return",
														"src": "2076:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2078,
										"nodeType": "StructuredDocumentation",
										"src": "1790:113:15",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 2105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1917:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1932:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "1924:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1943:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "1935:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:22:15"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1974:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "1969:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2084,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1969:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1991:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "1983:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1968:30:15"
									},
									"scope": 3019,
									"src": "1908:205:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "2338:114:15",
										"statements": [
											{
												"id": 2131,
												"nodeType": "UncheckedBlock",
												"src": "2348:98:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2117,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "2376:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2381:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2376:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2124,
														"nodeType": "IfStatement",
														"src": "2372:29:15",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2392:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2399:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2122,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2391:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2116,
															"id": 2123,
															"nodeType": "Return",
															"src": "2384:17:15"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2423:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2126,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2108,
																		"src": "2429:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2127,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2110,
																		"src": "2433:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2429:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2129,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2422:13:15",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2116,
														"id": 2130,
														"nodeType": "Return",
														"src": "2415:20:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2106,
										"nodeType": "StructuredDocumentation",
										"src": "2119:123:15",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "2263:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "2274:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:15"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2313:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "2308:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2330:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "2322:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:30:15"
									},
									"scope": 3019,
									"src": "2247:205:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "2589:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2143,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "2606:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2144,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "2610:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2606:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2147,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "2618:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2606:13:15",
													"trueExpression": {
														"id": 2146,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "2614:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2142,
												"id": 2149,
												"nodeType": "Return",
												"src": "2599:20:15"
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "2458:59:15",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2531:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2543:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "2535:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2554:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "2546:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:22:15"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "2580:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2580:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2579:9:15"
									},
									"scope": 3019,
									"src": "2522:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2168,
										"nodeType": "Block",
										"src": "2764:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2161,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2154,
															"src": "2781:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2162,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "2785:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2781:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2165,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2156,
														"src": "2793:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2781:13:15",
													"trueExpression": {
														"id": 2164,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2154,
														"src": "2789:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2160,
												"id": 2167,
												"nodeType": "Return",
												"src": "2774:20:15"
											}
										]
									},
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "2632:60:15",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2706:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2718:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "2710:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2729:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "2721:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:22:15"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "2755:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2755:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:9:15"
									},
									"scope": 3019,
									"src": "2697:104:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "2985:82:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2179,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2172,
																	"src": "3040:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2180,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "3044:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3040:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2182,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3039:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2183,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2172,
																		"src": "3050:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2184,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "3054:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3050:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2186,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3049:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3059:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3049:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3039:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2178,
												"id": 2190,
												"nodeType": "Return",
												"src": "3032:28:15"
											}
										]
									},
									"documentation": {
										"id": 2170,
										"nodeType": "StructuredDocumentation",
										"src": "2807:102:15",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2923:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2939:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "2931:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2950:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "2942:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2942:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:22:15"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "2976:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:9:15"
									},
									"scope": 3019,
									"src": "2914:153:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2226,
										"nodeType": "Block",
										"src": "3359:596:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2202,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2197,
														"src": "3373:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3378:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3373:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2210,
												"nodeType": "IfStatement",
												"src": "3369:127:15",
												"trueBody": {
													"id": 2209,
													"nodeType": "Block",
													"src": "3381:115:15",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2195,
																	"src": "3480:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2206,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "3484:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3480:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2201,
															"id": 2208,
															"nodeType": "Return",
															"src": "3473:12:15"
														}
													]
												}
											},
											{
												"id": 2225,
												"nodeType": "UncheckedBlock",
												"src": "3879:70:15",
												"statements": [
													{
														"expression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2211,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2195,
																	"src": "3910:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3915:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3910:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2215,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2195,
																					"src": "3924:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2216,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3928:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "3924:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2218,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3923:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2219,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "3933:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3923:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3937:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3923:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "3910:28:15",
															"trueExpression": {
																"hexValue": "30",
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3919:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2201,
														"id": 2224,
														"nodeType": "Return",
														"src": "3903:35:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2193,
										"nodeType": "StructuredDocumentation",
										"src": "3073:210:15",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3297:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3313:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "3305:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3324:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "3316:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:22:15"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "3350:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3350:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3349:9:15"
									},
									"scope": 3019,
									"src": "3288:667:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2352,
										"nodeType": "Block",
										"src": "4377:4018:15",
										"statements": [
											{
												"id": 2351,
												"nodeType": "UncheckedBlock",
												"src": "4387:4002:15",
												"statements": [
													{
														"assignments": [
															2240
														],
														"declarations": [
															{
																"constant": false,
																"id": 2240,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4716:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2351,
																"src": "4708:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2239,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4708:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2244,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2241,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2230,
																"src": "4724:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2242,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2232,
																"src": "4728:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4724:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4708:21:15"
													},
													{
														"assignments": [
															2246
														],
														"declarations": [
															{
																"constant": false,
																"id": 2246,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4796:5:15",
																"nodeType": "VariableDeclaration",
																"scope": 2351,
																"src": "4788:13:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2245,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4788:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2247,
														"nodeType": "VariableDeclarationStatement",
														"src": "4788:13:15"
													},
													{
														"AST": {
															"nativeSrc": "4868:122:15",
															"nodeType": "YulBlock",
															"src": "4868:122:15",
															"statements": [
																{
																	"nativeSrc": "4886:30:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4886:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4903:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4903:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4906:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "4906:1:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4913:1:15",
																						"nodeType": "YulLiteral",
																						"src": "4913:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4909:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4909:3:15"
																				},
																				"nativeSrc": "4909:6:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4909:6:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4896:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4896:6:15"
																		},
																		"nativeSrc": "4896:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4896:20:15"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4890:2:15",
																			"nodeType": "YulTypedName",
																			"src": "4890:2:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4933:43:15",
																	"nodeType": "YulAssignment",
																	"src": "4933:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4950:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4950:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4954:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4954:5:15"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4946:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4946:3:15"
																				},
																				"nativeSrc": "4946:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4946:14:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4965:2:15",
																						"nodeType": "YulIdentifier",
																						"src": "4965:2:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4969:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4969:5:15"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4962:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "4962:2:15"
																				},
																				"nativeSrc": "4962:13:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4962:13:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4942:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4942:3:15"
																		},
																		"nativeSrc": "4942:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4942:34:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4933:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4933:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2240,
																"isOffset": false,
																"isSlot": false,
																"src": "4954:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2240,
																"isOffset": false,
																"isSlot": false,
																"src": "4969:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2246,
																"isOffset": false,
																"isSlot": false,
																"src": "4933:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2230,
																"isOffset": false,
																"isSlot": false,
																"src": "4903:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2232,
																"isOffset": false,
																"isSlot": false,
																"src": "4906:1:15",
																"valueSize": 1
															}
														],
														"id": 2248,
														"nodeType": "InlineAssembly",
														"src": "4859:131:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2249,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2246,
																"src": "5071:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5080:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5071:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2257,
														"nodeType": "IfStatement",
														"src": "5067:368:15",
														"trueBody": {
															"id": 2256,
															"nodeType": "Block",
															"src": "5083:352:15",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2252,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "5401:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2253,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2234,
																			"src": "5409:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5401:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2238,
																	"id": 2255,
																	"nodeType": "Return",
																	"src": "5394:26:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2258,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "5541:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2259,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2246,
																"src": "5556:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5541:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2265,
														"nodeType": "IfStatement",
														"src": "5537:88:15",
														"trueBody": {
															"id": 2264,
															"nodeType": "Block",
															"src": "5563:62:15",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2261,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1970,
																			"src": "5588:20:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5588:22:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2263,
																	"nodeType": "RevertStatement",
																	"src": "5581:29:15"
																}
															]
														}
													},
													{
														"assignments": [
															2267
														],
														"declarations": [
															{
																"constant": false,
																"id": 2267,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5888:9:15",
																"nodeType": "VariableDeclaration",
																"scope": 2351,
																"src": "5880:17:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2266,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5880:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2268,
														"nodeType": "VariableDeclarationStatement",
														"src": "5880:17:15"
													},
													{
														"AST": {
															"nativeSrc": "5920:291:15",
															"nodeType": "YulBlock",
															"src": "5920:291:15",
															"statements": [
																{
																	"nativeSrc": "5989:38:15",
																	"nodeType": "YulAssignment",
																	"src": "5989:38:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "6009:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "6009:1:15"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "6012:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "6012:1:15"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "6015:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "6015:11:15"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "6002:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "6002:6:15"
																		},
																		"nativeSrc": "6002:25:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6002:25:15"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5989:9:15",
																			"nodeType": "YulIdentifier",
																			"src": "5989:9:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6109:41:15",
																	"nodeType": "YulAssignment",
																	"src": "6109:41:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "6122:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6122:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "6132:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "6132:9:15"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "6143:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "6143:5:15"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "6129:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "6129:2:15"
																				},
																				"nativeSrc": "6129:20:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6129:20:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6118:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6118:3:15"
																		},
																		"nativeSrc": "6118:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6118:32:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "6109:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "6109:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6167:30:15",
																	"nodeType": "YulAssignment",
																	"src": "6167:30:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6180:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6180:5:15"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "6187:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6187:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6176:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6176:3:15"
																		},
																		"nativeSrc": "6176:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6176:21:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6167:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "6167:5:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2234,
																"isOffset": false,
																"isSlot": false,
																"src": "6015:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2240,
																"isOffset": false,
																"isSlot": false,
																"src": "6143:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2240,
																"isOffset": false,
																"isSlot": false,
																"src": "6167:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2240,
																"isOffset": false,
																"isSlot": false,
																"src": "6180:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2246,
																"isOffset": false,
																"isSlot": false,
																"src": "6109:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2246,
																"isOffset": false,
																"isSlot": false,
																"src": "6122:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2267,
																"isOffset": false,
																"isSlot": false,
																"src": "5989:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2267,
																"isOffset": false,
																"isSlot": false,
																"src": "6132:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2267,
																"isOffset": false,
																"isSlot": false,
																"src": "6187:9:15",
																"valueSize": 1
															},
															{
																"declaration": 2230,
																"isOffset": false,
																"isSlot": false,
																"src": "6009:1:15",
																"valueSize": 1
															},
															{
																"declaration": 2232,
																"isOffset": false,
																"isSlot": false,
																"src": "6012:1:15",
																"valueSize": 1
															}
														],
														"id": 2269,
														"nodeType": "InlineAssembly",
														"src": "5911:300:15"
													},
													{
														"assignments": [
															2271
														],
														"declarations": [
															{
																"constant": false,
																"id": 2271,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6423:4:15",
																"nodeType": "VariableDeclaration",
																"scope": 2351,
																"src": "6415:12:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2270,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6415:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2278,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2272,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "6430:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6445:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2274,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2234,
																			"src": "6449:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6445:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2276,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6444:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6430:31:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6415:46:15"
													},
													{
														"AST": {
															"nativeSrc": "6484:362:15",
															"nodeType": "YulBlock",
															"src": "6484:362:15",
															"statements": [
																{
																	"nativeSrc": "6549:37:15",
																	"nodeType": "YulAssignment",
																	"src": "6549:37:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6568:11:15",
																				"nodeType": "YulIdentifier",
																				"src": "6568:11:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6581:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6581:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6564:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6564:3:15"
																		},
																		"nativeSrc": "6564:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6564:22:15"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6549:11:15",
																			"nodeType": "YulIdentifier",
																			"src": "6549:11:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6653:25:15",
																	"nodeType": "YulAssignment",
																	"src": "6653:25:15",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6666:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6666:5:15"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6673:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "6673:4:15"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6662:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6662:3:15"
																		},
																		"nativeSrc": "6662:16:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6662:16:15"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6653:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "6653:5:15"
																		}
																	]
																},
																{
																	"nativeSrc": "6793:39:15",
																	"nodeType": "YulAssignment",
																	"src": "6793:39:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6813:1:15",
																								"nodeType": "YulLiteral",
																								"src": "6813:1:15",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6816:4:15",
																								"nodeType": "YulIdentifier",
																								"src": "6816:4:15"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6809:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "6809:3:15"
																						},
																						"nativeSrc": "6809:12:15",
																						"nodeType": "YulFunctionCall",
																						"src": "6809:12:15"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6823:4:15",
																						"nodeType": "YulIdentifier",
																						"src": "6823:4:15"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6805:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "6805:3:15"
																				},
																				"nativeSrc": "6805:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6805:23:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6830:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6830:1:15",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6801:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6801:3:15"
																		},
																		"nativeSrc": "6801:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6801:31:15"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6793:4:15",
																			"nodeType": "YulIdentifier",
																			"src": "6793:4:15"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2234,
																"isOffset": false,
																"isSlot": false,
																"src": "6549:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2234,
																"isOffset": false,
																"isSlot": false,
																"src": "6568:11:15",
																"valueSize": 1
															},
															{
																"declaration": 2240,
																"isOffset": false,
																"isSlot": false,
																"src": "6653:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2240,
																"isOffset": false,
																"isSlot": false,
																"src": "6666:5:15",
																"valueSize": 1
															},
															{
																"declaration": 2271,
																"isOffset": false,
																"isSlot": false,
																"src": "6581:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2271,
																"isOffset": false,
																"isSlot": false,
																"src": "6673:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2271,
																"isOffset": false,
																"isSlot": false,
																"src": "6793:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2271,
																"isOffset": false,
																"isSlot": false,
																"src": "6816:4:15",
																"valueSize": 1
															},
															{
																"declaration": 2271,
																"isOffset": false,
																"isSlot": false,
																"src": "6823:4:15",
																"valueSize": 1
															}
														],
														"id": 2279,
														"nodeType": "InlineAssembly",
														"src": "6475:371:15"
													},
													{
														"expression": {
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2280,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2240,
																"src": "6912:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2281,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2246,
																	"src": "6921:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2282,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2271,
																	"src": "6929:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6921:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6912:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2285,
														"nodeType": "ExpressionStatement",
														"src": "6912:21:15"
													},
													{
														"assignments": [
															2287
														],
														"declarations": [
															{
																"constant": false,
																"id": 2287,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "7259:7:15",
																"nodeType": "VariableDeclaration",
																"scope": 2351,
																"src": "7251:15:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2286,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7251:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2294,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7270:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2289,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2234,
																			"src": "7274:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7270:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2291,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7269:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7289:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "7269:21:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7251:39:15"
													},
													{
														"expression": {
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2295,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2287,
																"src": "7507:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7518:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2297,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "7522:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2298,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2287,
																		"src": "7536:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7522:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7518:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7507:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2302,
														"nodeType": "ExpressionStatement",
														"src": "7507:36:15"
													},
													{
														"expression": {
															"id": 2309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2303,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2287,
																"src": "7576:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7587:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2305,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "7591:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2306,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2287,
																		"src": "7605:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7591:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7587:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7576:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2310,
														"nodeType": "ExpressionStatement",
														"src": "7576:36:15"
													},
													{
														"expression": {
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2311,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2287,
																"src": "7646:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7657:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2313,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "7661:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2314,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2287,
																		"src": "7675:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7661:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7657:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7646:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2318,
														"nodeType": "ExpressionStatement",
														"src": "7646:36:15"
													},
													{
														"expression": {
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2319,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2287,
																"src": "7716:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7727:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2321,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "7731:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2322,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2287,
																		"src": "7745:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7731:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7727:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7716:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2326,
														"nodeType": "ExpressionStatement",
														"src": "7716:36:15"
													},
													{
														"expression": {
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2327,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2287,
																"src": "7786:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7797:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2329,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "7801:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2330,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2287,
																		"src": "7815:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7801:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7797:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7786:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2334,
														"nodeType": "ExpressionStatement",
														"src": "7786:36:15"
													},
													{
														"expression": {
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2335,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2287,
																"src": "7857:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7868:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2337,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "7872:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2338,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2287,
																		"src": "7886:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7872:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7868:25:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7857:36:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2342,
														"nodeType": "ExpressionStatement",
														"src": "7857:36:15"
													},
													{
														"expression": {
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2343,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "8327:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2344,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2240,
																	"src": "8336:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2345,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2287,
																	"src": "8344:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8336:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8327:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2348,
														"nodeType": "ExpressionStatement",
														"src": "8327:24:15"
													},
													{
														"expression": {
															"id": 2349,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "8372:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2238,
														"id": 2350,
														"nodeType": "Return",
														"src": "8365:13:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2228,
										"nodeType": "StructuredDocumentation",
										"src": "3961:313:15",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "4288:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4303:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "4295:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4314:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "4306:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4306:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "4325:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "4317:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4317:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:43:15"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4369:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "4361:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4361:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:16:15"
									},
									"scope": 3019,
									"src": "4279:4116:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2395,
										"nodeType": "Block",
										"src": "8637:192:15",
										"statements": [
											{
												"assignments": [
													2369
												],
												"declarations": [
													{
														"constant": false,
														"id": 2369,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8655:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2395,
														"src": "8647:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2368,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8647:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2375,
												"initialValue": {
													"arguments": [
														{
															"id": 2371,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2356,
															"src": "8671:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2372,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2358,
															"src": "8674:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2373,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2360,
															"src": "8677:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2370,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2353,
															2396
														],
														"referencedDeclaration": 2353,
														"src": "8664:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8664:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8647:42:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2377,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2363,
																"src": "8720:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1975",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1975",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2376,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3018,
															"src": "8703:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1975_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8703:26:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2380,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2356,
																	"src": "8740:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2381,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2358,
																	"src": "8743:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2382,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "8746:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2379,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8733:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8733:25:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8761:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8733:29:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8703:59:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2392,
												"nodeType": "IfStatement",
												"src": "8699:101:15",
												"trueBody": {
													"id": 2391,
													"nodeType": "Block",
													"src": "8764:36:15",
													"statements": [
														{
															"expression": {
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2387,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2369,
																	"src": "8778:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8788:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8778:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2390,
															"nodeType": "ExpressionStatement",
															"src": "8778:11:15"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2393,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2369,
													"src": "8816:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2367,
												"id": 2394,
												"nodeType": "Return",
												"src": "8809:13:15"
											}
										]
									},
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "8401:121:15",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8536:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8551:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "8543:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8543:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8562:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "8554:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8573:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "8565:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8565:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2363,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8595:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "8586:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1975",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2361,
														"name": "Rounding",
														"nameLocations": [
															"8586:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1975,
														"src": "8586:8:15"
													},
													"referencedDeclaration": 1975,
													"src": "8586:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1975",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8542:62:15"
									},
									"returnParameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "8628:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8628:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8627:9:15"
									},
									"scope": 3019,
									"src": "8527:302:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2507,
										"nodeType": "Block",
										"src": "9120:1585:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2404,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "9134:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9139:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9134:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2410,
												"nodeType": "IfStatement",
												"src": "9130:45:15",
												"trueBody": {
													"id": 2409,
													"nodeType": "Block",
													"src": "9142:33:15",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9163:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2403,
															"id": 2408,
															"nodeType": "Return",
															"src": "9156:8:15"
														}
													]
												}
											},
											{
												"assignments": [
													2412
												],
												"declarations": [
													{
														"constant": false,
														"id": 2412,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9862:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2507,
														"src": "9854:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2411,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9854:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2421,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9871:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2415,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2399,
																			"src": "9882:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2414,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2675,
																			2710
																		],
																		"referencedDeclaration": 2675,
																		"src": "9877:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9877:7:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9888:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9877:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2419,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9876:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9871:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9854:36:15"
											},
											{
												"id": 2506,
												"nodeType": "UncheckedBlock",
												"src": "10291:408:15",
												"statements": [
													{
														"expression": {
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2422,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "10315:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2423,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2412,
																				"src": "10325:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2424,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2399,
																					"src": "10334:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2425,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2412,
																					"src": "10338:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10334:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10325:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2428,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10324:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10349:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10324:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10315:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2432,
														"nodeType": "ExpressionStatement",
														"src": "10315:35:15"
													},
													{
														"expression": {
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2433,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "10364:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2434,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2412,
																				"src": "10374:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2435,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2399,
																					"src": "10383:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2436,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2412,
																					"src": "10387:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10383:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10374:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2439,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10373:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10373:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10364:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2443,
														"nodeType": "ExpressionStatement",
														"src": "10364:35:15"
													},
													{
														"expression": {
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2444,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "10413:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2445,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2412,
																				"src": "10423:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2446,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2399,
																					"src": "10432:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2447,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2412,
																					"src": "10436:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10432:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10423:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2450,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10422:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10447:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10422:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10413:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2454,
														"nodeType": "ExpressionStatement",
														"src": "10413:35:15"
													},
													{
														"expression": {
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2455,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "10462:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2456,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2412,
																				"src": "10472:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2457,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2399,
																					"src": "10481:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2458,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2412,
																					"src": "10485:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10481:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10472:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2461,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10471:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10496:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10471:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10462:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2465,
														"nodeType": "ExpressionStatement",
														"src": "10462:35:15"
													},
													{
														"expression": {
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2466,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "10511:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2467,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2412,
																				"src": "10521:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2468,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2399,
																					"src": "10530:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2469,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2412,
																					"src": "10534:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10530:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10521:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2472,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10520:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10545:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10520:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10511:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2476,
														"nodeType": "ExpressionStatement",
														"src": "10511:35:15"
													},
													{
														"expression": {
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2477,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "10560:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2478,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2412,
																				"src": "10570:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2479,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2399,
																					"src": "10579:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2480,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2412,
																					"src": "10583:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10579:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10570:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2483,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10569:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10594:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10569:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10560:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2487,
														"nodeType": "ExpressionStatement",
														"src": "10560:35:15"
													},
													{
														"expression": {
															"id": 2497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2488,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "10609:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2489,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2412,
																				"src": "10619:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2492,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2490,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2399,
																					"src": "10628:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2491,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2412,
																					"src": "10632:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10628:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10619:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2494,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10618:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10643:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10618:26:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10609:35:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2498,
														"nodeType": "ExpressionStatement",
														"src": "10609:35:15"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2500,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "10669:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2501,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "10677:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2502,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2412,
																		"src": "10681:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10677:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2499,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2169,
																"src": "10665:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10665:23:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2403,
														"id": 2505,
														"nodeType": "Return",
														"src": "10658:30:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2397,
										"nodeType": "StructuredDocumentation",
										"src": "8835:223:15",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "9072:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9085:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "9077:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9077:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9076:11:15"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2508,
												"src": "9111:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9111:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9110:9:15"
									},
									"scope": 3019,
									"src": "9063:1642:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2542,
										"nodeType": "Block",
										"src": "10881:164:15",
										"statements": [
											{
												"id": 2541,
												"nodeType": "UncheckedBlock",
												"src": "10891:148:15",
												"statements": [
													{
														"assignments": [
															2520
														],
														"declarations": [
															{
																"constant": false,
																"id": 2520,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10923:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2541,
																"src": "10915:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2519,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10915:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2524,
														"initialValue": {
															"arguments": [
																{
																	"id": 2522,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2511,
																	"src": "10937:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2521,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2508,
																	2543
																],
																"referencedDeclaration": 2508,
																"src": "10932:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10932:7:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10915:24:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2525,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2520,
																"src": "10960:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2527,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2514,
																						"src": "10987:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1975",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1975",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2526,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3018,
																					"src": "10970:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1975_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10970:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2531,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2529,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2520,
																						"src": "11000:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2530,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2520,
																						"src": "11009:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11000:15:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2532,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2511,
																					"src": "11018:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11000:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10970:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11026:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10970:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11022:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2538,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10969:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10960:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2518,
														"id": 2540,
														"nodeType": "Return",
														"src": "10953:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2509,
										"nodeType": "StructuredDocumentation",
										"src": "10711:89:15",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10814:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10827:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "10819:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10819:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10839:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "10830:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1975",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2512,
														"name": "Rounding",
														"nameLocations": [
															"10830:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1975,
														"src": "10830:8:15"
													},
													"referencedDeclaration": 1975,
													"src": "10830:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1975",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10818:30:15"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "10872:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10872:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10871:9:15"
									},
									"scope": 3019,
									"src": "10805:240:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2674,
										"nodeType": "Block",
										"src": "11236:922:15",
										"statements": [
											{
												"assignments": [
													2552
												],
												"declarations": [
													{
														"constant": false,
														"id": 2552,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11254:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2674,
														"src": "11246:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11246:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2554,
												"initialValue": {
													"hexValue": "30",
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11263:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11246:18:15"
											},
											{
												"id": 2671,
												"nodeType": "UncheckedBlock",
												"src": "11274:855:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2546,
																	"src": "11302:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11311:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11302:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11317:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11302:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2569,
														"nodeType": "IfStatement",
														"src": "11298:99:15",
														"trueBody": {
															"id": 2568,
															"nodeType": "Block",
															"src": "11320:77:15",
															"statements": [
																{
																	"expression": {
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2560,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2546,
																			"src": "11338:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11348:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11338:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2563,
																	"nodeType": "ExpressionStatement",
																	"src": "11338:13:15"
																},
																{
																	"expression": {
																		"id": 2566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2564,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "11369:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11379:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11369:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2567,
																	"nodeType": "ExpressionStatement",
																	"src": "11369:13:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2570,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2546,
																	"src": "11414:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11423:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11414:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11428:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11414:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2584,
														"nodeType": "IfStatement",
														"src": "11410:96:15",
														"trueBody": {
															"id": 2583,
															"nodeType": "Block",
															"src": "11431:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2575,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2546,
																			"src": "11449:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11459:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11449:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2578,
																	"nodeType": "ExpressionStatement",
																	"src": "11449:12:15"
																},
																{
																	"expression": {
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2579,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "11479:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11489:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11479:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2582,
																	"nodeType": "ExpressionStatement",
																	"src": "11479:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2585,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2546,
																	"src": "11523:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11532:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11523:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11537:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11523:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2599,
														"nodeType": "IfStatement",
														"src": "11519:96:15",
														"trueBody": {
															"id": 2598,
															"nodeType": "Block",
															"src": "11540:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2590,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2546,
																			"src": "11558:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11568:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11558:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2593,
																	"nodeType": "ExpressionStatement",
																	"src": "11558:12:15"
																},
																{
																	"expression": {
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2594,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "11588:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11598:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11588:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2597,
																	"nodeType": "ExpressionStatement",
																	"src": "11588:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2600,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2546,
																	"src": "11632:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11641:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11632:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11646:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11632:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2614,
														"nodeType": "IfStatement",
														"src": "11628:96:15",
														"trueBody": {
															"id": 2613,
															"nodeType": "Block",
															"src": "11649:75:15",
															"statements": [
																{
																	"expression": {
																		"id": 2607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2605,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2546,
																			"src": "11667:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11677:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11667:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2608,
																	"nodeType": "ExpressionStatement",
																	"src": "11667:12:15"
																},
																{
																	"expression": {
																		"id": 2611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2609,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "11697:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11707:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11697:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2612,
																	"nodeType": "ExpressionStatement",
																	"src": "11697:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2615,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2546,
																	"src": "11741:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11750:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11741:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11754:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11741:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2629,
														"nodeType": "IfStatement",
														"src": "11737:93:15",
														"trueBody": {
															"id": 2628,
															"nodeType": "Block",
															"src": "11757:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2620,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2546,
																			"src": "11775:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11785:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11775:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2623,
																	"nodeType": "ExpressionStatement",
																	"src": "11775:11:15"
																},
																{
																	"expression": {
																		"id": 2626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2624,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "11804:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11814:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11804:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2627,
																	"nodeType": "ExpressionStatement",
																	"src": "11804:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2630,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2546,
																	"src": "11847:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11856:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11847:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11860:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11847:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2644,
														"nodeType": "IfStatement",
														"src": "11843:93:15",
														"trueBody": {
															"id": 2643,
															"nodeType": "Block",
															"src": "11863:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2635,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2546,
																			"src": "11881:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11891:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11881:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2638,
																	"nodeType": "ExpressionStatement",
																	"src": "11881:11:15"
																},
																{
																	"expression": {
																		"id": 2641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2639,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "11910:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11920:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11910:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2642,
																	"nodeType": "ExpressionStatement",
																	"src": "11910:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2546,
																	"src": "11953:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11962:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11953:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11966:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11953:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2659,
														"nodeType": "IfStatement",
														"src": "11949:93:15",
														"trueBody": {
															"id": 2658,
															"nodeType": "Block",
															"src": "11969:73:15",
															"statements": [
																{
																	"expression": {
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2546,
																			"src": "11987:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11997:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11987:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2653,
																	"nodeType": "ExpressionStatement",
																	"src": "11987:11:15"
																},
																{
																	"expression": {
																		"id": 2656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2654,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "12016:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12026:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12016:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2657,
																	"nodeType": "ExpressionStatement",
																	"src": "12016:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2660,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2546,
																	"src": "12059:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12068:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12059:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12072:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12059:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2670,
														"nodeType": "IfStatement",
														"src": "12055:64:15",
														"trueBody": {
															"id": 2669,
															"nodeType": "Block",
															"src": "12075:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2665,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2552,
																			"src": "12093:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12103:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12093:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2668,
																	"nodeType": "ExpressionStatement",
																	"src": "12093:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2672,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2552,
													"src": "12145:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2550,
												"id": 2673,
												"nodeType": "Return",
												"src": "12138:13:15"
											}
										]
									},
									"documentation": {
										"id": 2544,
										"nodeType": "StructuredDocumentation",
										"src": "11051:119:15",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11184:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11197:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "11189:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11189:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11188:15:15"
									},
									"returnParameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2675,
												"src": "11227:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11227:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11226:9:15"
									},
									"scope": 3019,
									"src": "11175:983:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2709,
										"nodeType": "Block",
										"src": "12391:168:15",
										"statements": [
											{
												"id": 2708,
												"nodeType": "UncheckedBlock",
												"src": "12401:152:15",
												"statements": [
													{
														"assignments": [
															2687
														],
														"declarations": [
															{
																"constant": false,
																"id": 2687,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12433:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2708,
																"src": "12425:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2686,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12425:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2691,
														"initialValue": {
															"arguments": [
																{
																	"id": 2689,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2678,
																	"src": "12447:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2688,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2675,
																	2710
																],
																"referencedDeclaration": 2675,
																"src": "12442:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12442:11:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12425:28:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2692,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2687,
																"src": "12474:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2694,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2681,
																						"src": "12501:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1975",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1975",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2693,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3018,
																					"src": "12484:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1975_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2695,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12484:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2698,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2696,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12514:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2697,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2687,
																						"src": "12519:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12514:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2699,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2678,
																					"src": "12528:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12514:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12484:49:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12484:57:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12536:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2705,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12483:59:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12474:68:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2685,
														"id": 2707,
														"nodeType": "Return",
														"src": "12467:75:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2676,
										"nodeType": "StructuredDocumentation",
										"src": "12164:142:15",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12320:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2678,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12333:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "12325:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12325:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12349:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "12340:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1975",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2680,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2679,
														"name": "Rounding",
														"nameLocations": [
															"12340:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1975,
														"src": "12340:8:15"
													},
													"referencedDeclaration": 1975,
													"src": "12340:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1975",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12324:34:15"
									},
									"returnParameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2710,
												"src": "12382:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12382:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12381:9:15"
									},
									"scope": 3019,
									"src": "12311:248:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2838,
										"nodeType": "Block",
										"src": "12752:854:15",
										"statements": [
											{
												"assignments": [
													2719
												],
												"declarations": [
													{
														"constant": false,
														"id": 2719,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12770:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2838,
														"src": "12762:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12762:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2721,
												"initialValue": {
													"hexValue": "30",
													"id": 2720,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12779:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12762:18:15"
											},
											{
												"id": 2835,
												"nodeType": "UncheckedBlock",
												"src": "12790:787:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2722,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2713,
																"src": "12818:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12827:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12833:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12827:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12818:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2738,
														"nodeType": "IfStatement",
														"src": "12814:103:15",
														"trueBody": {
															"id": 2737,
															"nodeType": "Block",
															"src": "12837:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2727,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "12855:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12864:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12870:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12864:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12855:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2732,
																	"nodeType": "ExpressionStatement",
																	"src": "12855:17:15"
																},
																{
																	"expression": {
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2733,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "12890:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12900:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12890:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2736,
																	"nodeType": "ExpressionStatement",
																	"src": "12890:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2739,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2713,
																"src": "12934:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12943:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12949:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12943:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12934:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2755,
														"nodeType": "IfStatement",
														"src": "12930:103:15",
														"trueBody": {
															"id": 2754,
															"nodeType": "Block",
															"src": "12953:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2744,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "12971:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12980:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12986:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12980:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12971:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2749,
																	"nodeType": "ExpressionStatement",
																	"src": "12971:17:15"
																},
																{
																	"expression": {
																		"id": 2752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2750,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "13006:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13016:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "13006:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2753,
																	"nodeType": "ExpressionStatement",
																	"src": "13006:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2756,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2713,
																"src": "13050:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13059:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13065:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "13059:8:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "13050:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2772,
														"nodeType": "IfStatement",
														"src": "13046:103:15",
														"trueBody": {
															"id": 2771,
															"nodeType": "Block",
															"src": "13069:80:15",
															"statements": [
																{
																	"expression": {
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2761,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "13087:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13096:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13102:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "13096:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "13087:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2766,
																	"nodeType": "ExpressionStatement",
																	"src": "13087:17:15"
																},
																{
																	"expression": {
																		"id": 2769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2767,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "13122:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13132:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13122:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2770,
																	"nodeType": "ExpressionStatement",
																	"src": "13122:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2773,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2713,
																"src": "13166:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13175:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13181:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "13175:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "13166:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2789,
														"nodeType": "IfStatement",
														"src": "13162:100:15",
														"trueBody": {
															"id": 2788,
															"nodeType": "Block",
															"src": "13184:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2778,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "13202:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13211:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13217:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13211:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "13202:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2783,
																	"nodeType": "ExpressionStatement",
																	"src": "13202:16:15"
																},
																{
																	"expression": {
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2784,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "13236:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13246:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13236:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2787,
																	"nodeType": "ExpressionStatement",
																	"src": "13236:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2790,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2713,
																"src": "13279:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13288:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13294:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13288:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "13279:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2806,
														"nodeType": "IfStatement",
														"src": "13275:100:15",
														"trueBody": {
															"id": 2805,
															"nodeType": "Block",
															"src": "13297:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2795,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "13315:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13324:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13330:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "13324:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "13315:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2800,
																	"nodeType": "ExpressionStatement",
																	"src": "13315:16:15"
																},
																{
																	"expression": {
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2801,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "13349:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13359:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13349:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2804,
																	"nodeType": "ExpressionStatement",
																	"src": "13349:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2807,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2713,
																"src": "13392:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13401:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13407:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13401:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "13392:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2823,
														"nodeType": "IfStatement",
														"src": "13388:100:15",
														"trueBody": {
															"id": 2822,
															"nodeType": "Block",
															"src": "13410:78:15",
															"statements": [
																{
																	"expression": {
																		"id": 2816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2812,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "13428:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13437:2:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13443:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13437:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13428:16:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2817,
																	"nodeType": "ExpressionStatement",
																	"src": "13428:16:15"
																},
																{
																	"expression": {
																		"id": 2820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2818,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "13462:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13472:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13462:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2821,
																	"nodeType": "ExpressionStatement",
																	"src": "13462:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2824,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2713,
																"src": "13505:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13514:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13520:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13514:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13505:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2834,
														"nodeType": "IfStatement",
														"src": "13501:66:15",
														"trueBody": {
															"id": 2833,
															"nodeType": "Block",
															"src": "13523:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2829,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "13541:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13551:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13541:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2832,
																	"nodeType": "ExpressionStatement",
																	"src": "13541:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2836,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2719,
													"src": "13593:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2717,
												"id": 2837,
												"nodeType": "Return",
												"src": "13586:13:15"
											}
										]
									},
									"documentation": {
										"id": 2711,
										"nodeType": "StructuredDocumentation",
										"src": "12565:120:15",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12699:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2713,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12713:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "12705:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12705:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12704:15:15"
									},
									"returnParameters": {
										"id": 2717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "12743:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12743:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12742:9:15"
									},
									"scope": 3019,
									"src": "12690:916:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2873,
										"nodeType": "Block",
										"src": "13841:170:15",
										"statements": [
											{
												"id": 2872,
												"nodeType": "UncheckedBlock",
												"src": "13851:154:15",
												"statements": [
													{
														"assignments": [
															2851
														],
														"declarations": [
															{
																"constant": false,
																"id": 2851,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13883:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2872,
																"src": "13875:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2850,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13875:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2855,
														"initialValue": {
															"arguments": [
																{
																	"id": 2853,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2842,
																	"src": "13898:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2852,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2839,
																	2874
																],
																"referencedDeclaration": 2839,
																"src": "13892:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13892:12:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13875:29:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2856,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2851,
																"src": "13925:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2858,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2845,
																						"src": "13952:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1975",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1975",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2857,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3018,
																					"src": "13935:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1975_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13935:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2862,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2860,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13965:2:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2861,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2851,
																						"src": "13971:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13965:12:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2863,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2842,
																					"src": "13980:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13965:20:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13935:50:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13992:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13935:58:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13988:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2869,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13934:60:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13925:69:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2849,
														"id": 2871,
														"nodeType": "Return",
														"src": "13918:76:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2840,
										"nodeType": "StructuredDocumentation",
										"src": "13612:143:15",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13769:5:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13783:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "13775:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13775:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13799:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "13790:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1975",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2844,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2843,
														"name": "Rounding",
														"nameLocations": [
															"13790:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1975,
														"src": "13790:8:15"
													},
													"referencedDeclaration": 1975,
													"src": "13790:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1975",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13774:34:15"
									},
									"returnParameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2874,
												"src": "13832:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13832:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13831:9:15"
									},
									"scope": 3019,
									"src": "13760:251:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2960,
										"nodeType": "Block",
										"src": "14331:600:15",
										"statements": [
											{
												"assignments": [
													2883
												],
												"declarations": [
													{
														"constant": false,
														"id": 2883,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14349:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2960,
														"src": "14341:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2882,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14341:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2885,
												"initialValue": {
													"hexValue": "30",
													"id": 2884,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14358:1:15",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14341:18:15"
											},
											{
												"id": 2957,
												"nodeType": "UncheckedBlock",
												"src": "14369:533:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2886,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "14397:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14406:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "14397:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14412:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14397:16:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2900,
														"nodeType": "IfStatement",
														"src": "14393:98:15",
														"trueBody": {
															"id": 2899,
															"nodeType": "Block",
															"src": "14415:76:15",
															"statements": [
																{
																	"expression": {
																		"id": 2893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2891,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2877,
																			"src": "14433:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14443:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14433:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2894,
																	"nodeType": "ExpressionStatement",
																	"src": "14433:13:15"
																},
																{
																	"expression": {
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2895,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2883,
																			"src": "14464:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14474:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14464:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2898,
																	"nodeType": "ExpressionStatement",
																	"src": "14464:12:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2901,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "14508:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14517:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14508:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14522:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14508:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2915,
														"nodeType": "IfStatement",
														"src": "14504:95:15",
														"trueBody": {
															"id": 2914,
															"nodeType": "Block",
															"src": "14525:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2906,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2877,
																			"src": "14543:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14553:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14543:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2909,
																	"nodeType": "ExpressionStatement",
																	"src": "14543:12:15"
																},
																{
																	"expression": {
																		"id": 2912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2910,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2883,
																			"src": "14573:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14583:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14573:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2913,
																	"nodeType": "ExpressionStatement",
																	"src": "14573:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2916,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "14616:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14625:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14616:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14630:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14616:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2930,
														"nodeType": "IfStatement",
														"src": "14612:95:15",
														"trueBody": {
															"id": 2929,
															"nodeType": "Block",
															"src": "14633:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2921,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2877,
																			"src": "14651:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14661:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14651:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2924,
																	"nodeType": "ExpressionStatement",
																	"src": "14651:12:15"
																},
																{
																	"expression": {
																		"id": 2927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2925,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2883,
																			"src": "14681:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14691:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14681:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2928,
																	"nodeType": "ExpressionStatement",
																	"src": "14681:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2931,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "14724:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14733:2:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14724:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14738:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14724:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2945,
														"nodeType": "IfStatement",
														"src": "14720:95:15",
														"trueBody": {
															"id": 2944,
															"nodeType": "Block",
															"src": "14741:74:15",
															"statements": [
																{
																	"expression": {
																		"id": 2938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2936,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2877,
																			"src": "14759:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14769:2:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14759:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2939,
																	"nodeType": "ExpressionStatement",
																	"src": "14759:12:15"
																},
																{
																	"expression": {
																		"id": 2942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2940,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2883,
																			"src": "14789:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14799:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14789:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2943,
																	"nodeType": "ExpressionStatement",
																	"src": "14789:11:15"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2946,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "14832:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14841:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14832:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14845:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14832:14:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2956,
														"nodeType": "IfStatement",
														"src": "14828:64:15",
														"trueBody": {
															"id": 2955,
															"nodeType": "Block",
															"src": "14848:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 2953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2951,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2883,
																			"src": "14866:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14876:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14866:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2954,
																	"nodeType": "ExpressionStatement",
																	"src": "14866:11:15"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2958,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2883,
													"src": "14918:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2881,
												"id": 2959,
												"nodeType": "Return",
												"src": "14911:13:15"
											}
										]
									},
									"documentation": {
										"id": 2875,
										"nodeType": "StructuredDocumentation",
										"src": "14017:246:15",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14277:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14292:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "14284:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14284:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14283:15:15"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "14322:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14322:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14321:9:15"
									},
									"scope": 3019,
									"src": "14268:663:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2998,
										"nodeType": "Block",
										"src": "15168:177:15",
										"statements": [
											{
												"id": 2997,
												"nodeType": "UncheckedBlock",
												"src": "15178:161:15",
												"statements": [
													{
														"assignments": [
															2973
														],
														"declarations": [
															{
																"constant": false,
																"id": 2973,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "15210:6:15",
																"nodeType": "VariableDeclaration",
																"scope": 2997,
																"src": "15202:14:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2972,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15202:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2977,
														"initialValue": {
															"arguments": [
																{
																	"id": 2975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2964,
																	"src": "15226:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2974,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2961,
																	2999
																],
																"referencedDeclaration": 2961,
																"src": "15219:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15219:13:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15202:30:15"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2978,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2973,
																"src": "15253:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2980,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2967,
																						"src": "15280:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1975",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1975",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2979,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3018,
																					"src": "15263:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1975_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15263:26:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2982,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15293:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2985,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2983,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2973,
																									"src": "15299:6:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2984,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15309:1:15",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "15299:11:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2986,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "15298:13:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15293:18:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2988,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2964,
																					"src": "15314:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15293:26:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "15263:56:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15326:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "15263:64:15",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15322:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2994,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15262:66:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15253:75:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2971,
														"id": 2996,
														"nodeType": "Return",
														"src": "15246:82:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2962,
										"nodeType": "StructuredDocumentation",
										"src": "14937:144:15",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "15095:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15110:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "15102:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15102:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15126:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "15117:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1975",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2966,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2965,
														"name": "Rounding",
														"nameLocations": [
															"15117:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1975,
														"src": "15117:8:15"
													},
													"referencedDeclaration": 1975,
													"src": "15117:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1975",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15101:34:15"
									},
									"returnParameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "15159:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15159:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15158:9:15"
									},
									"scope": 3019,
									"src": "15086:259:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3017,
										"nodeType": "Block",
										"src": "15543:48:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3010,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3003,
																	"src": "15566:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1975",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1975",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3009,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15560:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3008,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15560:5:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15560:15:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15578:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15560:19:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15583:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15560:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3007,
												"id": 3016,
												"nodeType": "Return",
												"src": "15553:31:15"
											}
										]
									},
									"documentation": {
										"id": 3000,
										"nodeType": "StructuredDocumentation",
										"src": "15351:113:15",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15478:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15504:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "15495:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1975",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3002,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3001,
														"name": "Rounding",
														"nameLocations": [
															"15495:8:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1975,
														"src": "15495:8:15"
													},
													"referencedDeclaration": 1975,
													"src": "15495:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1975",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15494:19:15"
									},
									"returnParameters": {
										"id": 3007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "15537:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15537:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15536:6:15"
									},
									"scope": 3019,
									"src": "15469:122:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3020,
							"src": "203:15390:15",
							"usedErrors": [
								1970
							],
							"usedEvents": []
						}
					],
					"src": "103:15491:15"
				},
				"id": 15
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3124
						]
					},
					"id": 3125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3021,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3022,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:16",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3124,
							"linearizedBaseContracts": [
								3124
							],
							"name": "SignedMath",
							"nameLocation": "224:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3039,
										"nodeType": "Block",
										"src": "376:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3032,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3025,
															"src": "393:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3033,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3027,
															"src": "397:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3036,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3027,
														"src": "405:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:16",
													"trueExpression": {
														"id": 3035,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3025,
														"src": "401:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3031,
												"id": 3038,
												"nodeType": "Return",
												"src": "386:20:16"
											}
										]
									},
									"documentation": {
										"id": 3023,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:16",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "325:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3024,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "335:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3026,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:16"
									},
									"returnParameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "368:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3029,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:16"
									},
									"scope": 3124,
									"src": "312:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3057,
										"nodeType": "Block",
										"src": "555:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3050,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3043,
															"src": "572:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3051,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3045,
															"src": "576:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3054,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3045,
														"src": "584:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:16",
													"trueExpression": {
														"id": 3053,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3043,
														"src": "580:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3049,
												"id": 3056,
												"nodeType": "Return",
												"src": "565:20:16"
											}
										]
									},
									"documentation": {
										"id": 3041,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:16",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3043,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "504:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3042,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3045,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "514:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3044,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:16"
									},
									"returnParameters": {
										"id": 3049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3058,
												"src": "547:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3047,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:16"
									},
									"scope": 3124,
									"src": "491:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3101,
										"nodeType": "Block",
										"src": "797:162:16",
										"statements": [
											{
												"assignments": [
													3069
												],
												"declarations": [
													{
														"constant": false,
														"id": 3069,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:16",
														"nodeType": "VariableDeclaration",
														"scope": 3101,
														"src": "859:8:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3068,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3082,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3070,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3061,
																	"src": "871:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3071,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3063,
																	"src": "875:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3073,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3074,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3061,
																				"src": "882:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3075,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3063,
																				"src": "886:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3077,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3080,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:16"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3083,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3069,
														"src": "911:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3088,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3069,
																						"src": "931:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3087,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3086,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:16",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3084,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3093,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3061,
																				"src": "945:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3094,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3063,
																				"src": "949:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3096,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3098,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3067,
												"id": 3100,
												"nodeType": "Return",
												"src": "904:48:16"
											}
										]
									},
									"documentation": {
										"id": 3059,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:16",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3061,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "746:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3060,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3063,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "756:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3062,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:16"
									},
									"returnParameters": {
										"id": 3067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "789:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3065,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:16"
									},
									"scope": 3124,
									"src": "729:230:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3122,
										"nodeType": "Block",
										"src": "1103:158:16",
										"statements": [
											{
												"id": 3121,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:16",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3112,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "1228:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:16",
																		"subExpression": {
																			"id": 3116,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "1242:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:16",
																	"trueExpression": {
																		"id": 3115,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3105,
																		"src": "1237:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3110,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3109,
														"id": 3120,
														"nodeType": "Return",
														"src": "1213:31:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3103,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:16",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "1061:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3104,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:16"
									},
									"returnParameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "1094:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:16"
									},
									"scope": 3124,
									"src": "1048:213:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3125,
							"src": "216:1047:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:16"
				},
				"id": 16
			},
			"mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol": {
				"ast": {
					"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/contracts/RawMaterials.sol",
					"exportedSymbols": {
						"Context": [
							1673
						],
						"ERC721": [
							1325
						],
						"ERC721Burnable": [
							1489
						],
						"ERC721URIStorage": [
							1615
						],
						"IERC165": [
							1964
						],
						"IERC4906": [
							175
						],
						"ITradeManagementRawMaterials": [
							3137
						],
						"Ownable": [
							147
						],
						"RawMaterials": [
							3213
						],
						"Strings": [
							1928
						]
					},
					"id": 3214,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:17"
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "../@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3214,
							"sourceUnit": 1616,
							"src": "60:81:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"file": "../@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"id": 3128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3214,
							"sourceUnit": 1490,
							"src": "143:79:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "mainnet/0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e/@openzeppelin/contracts/access/Ownable.sol",
							"file": "../@openzeppelin/contracts/access/Ownable.sol",
							"id": 3129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3214,
							"sourceUnit": 148,
							"src": "264:55:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITradeManagementRawMaterials",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3137,
							"linearizedBaseContracts": [
								3137
							],
							"name": "ITradeManagementRawMaterials",
							"nameLocation": "333:28:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4b297269",
									"id": 3136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "Supplier",
									"nameLocation": "377:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3136,
												"src": "386:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "385:9:17"
									},
									"returnParameters": {
										"id": 3135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3136,
												"src": "417:13:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3133,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:17"
									},
									"scope": 3137,
									"src": "368:64:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3214,
							"src": "323:112:17",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3138,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"464:16:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1615,
										"src": "464:16:17"
									},
									"id": 3139,
									"nodeType": "InheritanceSpecifier",
									"src": "464:16:17"
								},
								{
									"baseName": {
										"id": 3140,
										"name": "Ownable",
										"nameLocations": [
											"482:7:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "482:7:17"
									},
									"id": 3141,
									"nodeType": "InheritanceSpecifier",
									"src": "482:7:17"
								}
							],
							"canonicalName": "RawMaterials",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3213,
							"linearizedBaseContracts": [
								3213,
								147,
								1615,
								1325,
								269,
								1643,
								175,
								1442,
								1952,
								1964,
								1673
							],
							"name": "RawMaterials",
							"nameLocation": "448:12:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9f181b5e",
									"id": 3143,
									"mutability": "mutable",
									"name": "tokenCount",
									"nameLocation": "538:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 3213,
									"src": "523:25:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3142,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "523:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f0f9ee46",
									"id": 3146,
									"mutability": "mutable",
									"name": "TradeManagement",
									"nameLocation": "633:15:17",
									"nodeType": "VariableDeclaration",
									"scope": 3213,
									"src": "597:51:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITradeManagementRawMaterials_$3137",
										"typeString": "contract ITradeManagementRawMaterials"
									},
									"typeName": {
										"id": 3145,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3144,
											"name": "ITradeManagementRawMaterials",
											"nameLocations": [
												"597:28:17"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3137,
											"src": "597:28:17"
										},
										"referencedDeclaration": 3137,
										"src": "597:28:17",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITradeManagementRawMaterials_$3137",
											"typeString": "contract ITradeManagementRawMaterials"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3157,
										"nodeType": "Block",
										"src": "724:18:17",
										"statements": []
									},
									"id": 3158,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5261774d6174657269616c73",
													"id": 3149,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "683:14:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c30cefe72ec80bec1129b6725ee0ccacf28056ac7129d955e2f62cdd7f03647e",
														"typeString": "literal_string \"RawMaterials\""
													},
													"value": "RawMaterials"
												},
												{
													"hexValue": "524d",
													"id": 3150,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "699:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8a7f8fb7fece1e064e71ae6269956f02c066c8cf20a5e3d95138630f520df020",
														"typeString": "literal_string \"RM\""
													},
													"value": "RM"
												}
											],
											"id": 3151,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3148,
												"name": "ERC721",
												"nameLocations": [
													"676:6:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1325,
												"src": "676:6:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "676:28:17"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 3153,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "713:3:17",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "717:6:17",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "713:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3155,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3152,
												"name": "Ownable",
												"nameLocations": [
													"705:7:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "705:7:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "705:19:17"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "673:2:17"
									},
									"returnParameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:0:17"
									},
									"scope": 3213,
									"src": "661:81:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3171,
										"nodeType": "Block",
										"src": "862:79:17",
										"statements": [
											{
												"expression": {
													"id": 3169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3165,
														"name": "TradeManagement",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3146,
														"src": "873:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITradeManagementRawMaterials_$3137",
															"typeString": "contract ITradeManagementRawMaterials"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3167,
																"name": "_trademgmtsc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3160,
																"src": "920:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3166,
															"name": "ITradeManagementRawMaterials",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3137,
															"src": "891:28:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITradeManagementRawMaterials_$3137_$",
																"typeString": "type(contract ITradeManagementRawMaterials)"
															}
														},
														"id": 3168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "891:42:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITradeManagementRawMaterials_$3137",
															"typeString": "contract ITradeManagementRawMaterials"
														}
													},
													"src": "873:60:17",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITradeManagementRawMaterials_$3137",
														"typeString": "contract ITradeManagementRawMaterials"
													}
												},
												"id": 3170,
												"nodeType": "ExpressionStatement",
												"src": "873:60:17"
											}
										]
									},
									"functionSelector": "0fffc4cf",
									"id": 3172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3163,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3162,
												"name": "onlyOwner",
												"nameLocations": [
													"853:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "853:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "853:9:17"
										}
									],
									"name": "SetTradeManagementSC",
									"nameLocation": "801:20:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3160,
												"mutability": "mutable",
												"name": "_trademgmtsc",
												"nameLocation": "830:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 3172,
												"src": "822:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:17"
									},
									"returnParameters": {
										"id": 3164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:0:17"
									},
									"scope": 3213,
									"src": "792:149:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3211,
										"nodeType": "Block",
										"src": "1064:418:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 3184,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1160:3:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 3185,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1164:6:17",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1160:10:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 3182,
																					"name": "TradeManagement",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3146,
																					"src": "1135:15:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ITradeManagementRawMaterials_$3137",
																						"typeString": "contract ITradeManagementRawMaterials"
																					}
																				},
																				"id": 3183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1151:8:17",
																				"memberName": "Supplier",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3136,
																				"src": "1135:24:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (address) view external returns (string memory)"
																				}
																			},
																			"id": 3186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1135:36:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 3181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1129:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 3180,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "1129:5:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1129:43:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 3188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1173:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1129:50:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1183:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1129:55:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920617574686f72697a656420737570706c696572732063616e206d696e74207061636b616765642070726f64756374204e4654",
															"id": 3191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1186:57:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c",
																"typeString": "literal_string \"Only authorized suppliers can mint packaged product NFT\""
															},
															"value": "Only authorized suppliers can mint packaged product NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14532b89b92ace120e60824777ce3a766ebc53281fcde7d74df039072a932b8c",
																"typeString": "literal_string \"Only authorized suppliers can mint packaged product NFT\""
															}
														],
														"id": 3179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1121:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1121:123:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3193,
												"nodeType": "ExpressionStatement",
												"src": "1121:123:17"
											},
											{
												"expression": {
													"id": 3195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1278:12:17",
													"subExpression": {
														"id": 3194,
														"name": "tokenCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3143,
														"src": "1278:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3196,
												"nodeType": "ExpressionStatement",
												"src": "1278:12:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3198,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1348:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1352:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1348:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3200,
															"name": "tokenCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3143,
															"src": "1360:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3197,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															947,
															973
														],
														"referencedDeclaration": 947,
														"src": "1338:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1338:33:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3202,
												"nodeType": "ExpressionStatement",
												"src": "1338:33:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3204,
															"name": "tokenCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3143,
															"src": "1396:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3205,
															"name": "_tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3174,
															"src": "1408:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3203,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "1383:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1383:35:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3207,
												"nodeType": "ExpressionStatement",
												"src": "1383:35:17"
											},
											{
												"expression": {
													"components": [
														{
															"id": 3208,
															"name": "tokenCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3143,
															"src": "1463:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3209,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1462:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3178,
												"id": 3210,
												"nodeType": "Return",
												"src": "1456:18:17"
											}
										]
									},
									"functionSelector": "d85d3d27",
									"id": 3212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1009:4:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3174,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1028:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 3212,
												"src": "1014:23:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1014:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1013:25:17"
									},
									"returnParameters": {
										"id": 3178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3212,
												"src": "1056:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:9:17"
									},
									"scope": 3213,
									"src": "1000:482:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3214,
							"src": "439:1046:17",
							"usedErrors": [
								13,
								18,
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								24,
								167,
								174,
								1341,
								1350,
								1359
							]
						}
					],
					"src": "33:1454:17"
				},
				"id": 17
			}
		}
	}
}